{
  "version": 3,
  "sources": ["../../../../../../node_modules/@ionic/core/dist/esm/ion-reorder_2.entry.js"],
  "sourcesContent": ["/*!\r\n * (C) Ionic http://ionicframework.com - MIT License\r\n */\r\nimport { r as registerInstance, e as getIonMode, h, j as Host, k as getElement, d as createEvent } from './index-B_U9CtaY.js';\r\nimport { j as reorderThreeOutline, k as reorderTwoSharp } from './index-BLV6ykCk.js';\r\nimport { f as findClosestIonContent, g as getScrollElement } from './index-BlJTBdxG.js';\r\nimport { r as raf } from './helpers-1O4D2b7y.js';\r\nimport { b as hapticSelectionStart, a as hapticSelectionChanged, h as hapticSelectionEnd } from './haptic-DzAMWJuk.js';\r\nimport './capacitor-CFERIeaU.js';\r\nimport './index-ZjP4CjeZ.js';\r\n\r\nconst reorderIosCss = \":host([slot]){display:none;line-height:0;z-index:100}.reorder-icon{display:block}::slotted(ion-icon){font-size:dynamic-font(16px)}.reorder-icon{font-size:2.125rem;opacity:0.4}\";\r\n\r\nconst reorderMdCss = \":host([slot]){display:none;line-height:0;z-index:100}.reorder-icon{display:block}::slotted(ion-icon){font-size:dynamic-font(16px)}.reorder-icon{font-size:1.9375rem;opacity:0.3}\";\r\n\r\nconst Reorder = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n    }\r\n    onClick(ev) {\r\n        const reorderGroup = this.el.closest('ion-reorder-group');\r\n        ev.preventDefault();\r\n        // Only stop event propagation if the reorder is inside of an enabled\r\n        // reorder group. This allows interaction with clickable children components.\r\n        if (!reorderGroup || !reorderGroup.disabled) {\r\n            ev.stopImmediatePropagation();\r\n        }\r\n    }\r\n    render() {\r\n        const mode = getIonMode(this);\r\n        const reorderIcon = mode === 'ios' ? reorderThreeOutline : reorderTwoSharp;\r\n        return (h(Host, { key: 'e6807bb349725682e99e791ac65e729a360d64e8', class: mode }, h(\"slot\", { key: '1c691cdbffa6427ba08dc12184c69559ed5d5506' }, h(\"ion-icon\", { key: '8b4150302cdca475379582b2251737b5e74079b1', icon: reorderIcon, lazy: false, class: \"reorder-icon\", part: \"icon\", \"aria-hidden\": \"true\" }))));\r\n    }\r\n    get el() { return getElement(this); }\r\n};\r\nReorder.style = {\r\n    ios: reorderIosCss,\r\n    md: reorderMdCss\r\n};\r\n\r\nconst reorderGroupCss = \".reorder-list-active>*{display:block;-webkit-transition:-webkit-transform 300ms;transition:-webkit-transform 300ms;transition:transform 300ms;transition:transform 300ms, -webkit-transform 300ms;will-change:transform}.reorder-enabled{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.reorder-enabled ion-reorder{display:block;cursor:-webkit-grab;cursor:grab;pointer-events:all;-ms-touch-action:none;touch-action:none}.reorder-selected,.reorder-selected ion-reorder{cursor:-webkit-grabbing;cursor:grabbing}.reorder-selected{position:relative;-webkit-transition:none !important;transition:none !important;-webkit-box-shadow:0 0 10px rgba(0, 0, 0, 0.4);box-shadow:0 0 10px rgba(0, 0, 0, 0.4);opacity:0.8;z-index:100}.reorder-visible ion-reorder .reorder-icon{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}\";\r\n\r\nconst ReorderGroup = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.ionItemReorder = createEvent(this, \"ionItemReorder\", 7);\r\n        this.lastToIndex = -1;\r\n        this.cachedHeights = [];\r\n        this.scrollElTop = 0;\r\n        this.scrollElBottom = 0;\r\n        this.scrollElInitial = 0;\r\n        this.containerTop = 0;\r\n        this.containerBottom = 0;\r\n        this.state = 0 /* ReorderGroupState.Idle */;\r\n        /**\r\n         * If `true`, the reorder will be hidden.\r\n         */\r\n        this.disabled = true;\r\n    }\r\n    disabledChanged() {\r\n        if (this.gesture) {\r\n            this.gesture.enable(!this.disabled);\r\n        }\r\n    }\r\n    async connectedCallback() {\r\n        const contentEl = findClosestIonContent(this.el);\r\n        if (contentEl) {\r\n            this.scrollEl = await getScrollElement(contentEl);\r\n        }\r\n        this.gesture = (await import('./index-CfgBF1SE.js')).createGesture({\r\n            el: this.el,\r\n            gestureName: 'reorder',\r\n            gesturePriority: 110,\r\n            threshold: 0,\r\n            direction: 'y',\r\n            passive: false,\r\n            canStart: (detail) => this.canStart(detail),\r\n            onStart: (ev) => this.onStart(ev),\r\n            onMove: (ev) => this.onMove(ev),\r\n            onEnd: () => this.onEnd(),\r\n        });\r\n        this.disabledChanged();\r\n    }\r\n    disconnectedCallback() {\r\n        this.onEnd();\r\n        if (this.gesture) {\r\n            this.gesture.destroy();\r\n            this.gesture = undefined;\r\n        }\r\n    }\r\n    /**\r\n     * Completes the reorder operation. Must be called by the `ionItemReorder` event.\r\n     * If a list of items is passed, the list will be reordered and returned in the\r\n     * proper order.\r\n     *\r\n     * If no parameters are passed or if `true` is passed in, the reorder will complete\r\n     * and the item will remain in the position it was dragged to. If `false` is passed,\r\n     * the reorder will complete and the item will bounce back to its original position.\r\n     *\r\n     * @param listOrReorder A list of items to be sorted and returned in the new order or a\r\n     * boolean of whether or not the reorder should reposition the item.\r\n     */\r\n    complete(listOrReorder) {\r\n        return Promise.resolve(this.completeReorder(listOrReorder));\r\n    }\r\n    canStart(ev) {\r\n        if (this.selectedItemEl || this.state !== 0 /* ReorderGroupState.Idle */) {\r\n            return false;\r\n        }\r\n        const target = ev.event.target;\r\n        const reorderEl = target.closest('ion-reorder');\r\n        if (!reorderEl) {\r\n            return false;\r\n        }\r\n        const item = findReorderItem(reorderEl, this.el);\r\n        if (!item) {\r\n            return false;\r\n        }\r\n        ev.data = item;\r\n        return true;\r\n    }\r\n    onStart(ev) {\r\n        ev.event.preventDefault();\r\n        const item = (this.selectedItemEl = ev.data);\r\n        const heights = this.cachedHeights;\r\n        heights.length = 0;\r\n        const el = this.el;\r\n        const children = el.children;\r\n        if (!children || children.length === 0) {\r\n            return;\r\n        }\r\n        let sum = 0;\r\n        for (let i = 0; i < children.length; i++) {\r\n            const child = children[i];\r\n            sum += child.offsetHeight;\r\n            heights.push(sum);\r\n            child.$ionIndex = i;\r\n        }\r\n        const box = el.getBoundingClientRect();\r\n        this.containerTop = box.top;\r\n        this.containerBottom = box.bottom;\r\n        if (this.scrollEl) {\r\n            const scrollBox = this.scrollEl.getBoundingClientRect();\r\n            this.scrollElInitial = this.scrollEl.scrollTop;\r\n            this.scrollElTop = scrollBox.top + AUTO_SCROLL_MARGIN;\r\n            this.scrollElBottom = scrollBox.bottom - AUTO_SCROLL_MARGIN;\r\n        }\r\n        else {\r\n            this.scrollElInitial = 0;\r\n            this.scrollElTop = 0;\r\n            this.scrollElBottom = 0;\r\n        }\r\n        this.lastToIndex = indexForItem(item);\r\n        this.selectedItemHeight = item.offsetHeight;\r\n        this.state = 1 /* ReorderGroupState.Active */;\r\n        item.classList.add(ITEM_REORDER_SELECTED);\r\n        hapticSelectionStart();\r\n    }\r\n    onMove(ev) {\r\n        const selectedItem = this.selectedItemEl;\r\n        if (!selectedItem) {\r\n            return;\r\n        }\r\n        // Scroll if we reach the scroll margins\r\n        const scroll = this.autoscroll(ev.currentY);\r\n        // // Get coordinate\r\n        const top = this.containerTop - scroll;\r\n        const bottom = this.containerBottom - scroll;\r\n        const currentY = Math.max(top, Math.min(ev.currentY, bottom));\r\n        const deltaY = scroll + currentY - ev.startY;\r\n        const normalizedY = currentY - top;\r\n        const toIndex = this.itemIndexForTop(normalizedY);\r\n        if (toIndex !== this.lastToIndex) {\r\n            const fromIndex = indexForItem(selectedItem);\r\n            this.lastToIndex = toIndex;\r\n            hapticSelectionChanged();\r\n            this.reorderMove(fromIndex, toIndex);\r\n        }\r\n        // Update selected item position\r\n        selectedItem.style.transform = `translateY(${deltaY}px)`;\r\n    }\r\n    onEnd() {\r\n        const selectedItemEl = this.selectedItemEl;\r\n        this.state = 2 /* ReorderGroupState.Complete */;\r\n        if (!selectedItemEl) {\r\n            this.state = 0 /* ReorderGroupState.Idle */;\r\n            return;\r\n        }\r\n        const toIndex = this.lastToIndex;\r\n        const fromIndex = indexForItem(selectedItemEl);\r\n        if (toIndex === fromIndex) {\r\n            this.completeReorder();\r\n        }\r\n        else {\r\n            this.ionItemReorder.emit({\r\n                from: fromIndex,\r\n                to: toIndex,\r\n                complete: this.completeReorder.bind(this),\r\n            });\r\n        }\r\n        hapticSelectionEnd();\r\n    }\r\n    completeReorder(listOrReorder) {\r\n        const selectedItemEl = this.selectedItemEl;\r\n        if (selectedItemEl && this.state === 2 /* ReorderGroupState.Complete */) {\r\n            const children = this.el.children;\r\n            const len = children.length;\r\n            const toIndex = this.lastToIndex;\r\n            const fromIndex = indexForItem(selectedItemEl);\r\n            /**\r\n             * insertBefore and setting the transform\r\n             * needs to happen in the same frame otherwise\r\n             * there will be a duplicate transition. This primarily\r\n             * impacts Firefox where insertBefore and transform operations\r\n             * are happening in two separate frames.\r\n             */\r\n            raf(() => {\r\n                if (toIndex !== fromIndex && (listOrReorder === undefined || listOrReorder === true)) {\r\n                    const ref = fromIndex < toIndex ? children[toIndex + 1] : children[toIndex];\r\n                    this.el.insertBefore(selectedItemEl, ref);\r\n                }\r\n                for (let i = 0; i < len; i++) {\r\n                    children[i].style['transform'] = '';\r\n                }\r\n            });\r\n            if (Array.isArray(listOrReorder)) {\r\n                listOrReorder = reorderArray(listOrReorder, fromIndex, toIndex);\r\n            }\r\n            selectedItemEl.style.transition = '';\r\n            selectedItemEl.classList.remove(ITEM_REORDER_SELECTED);\r\n            this.selectedItemEl = undefined;\r\n            this.state = 0 /* ReorderGroupState.Idle */;\r\n        }\r\n        return listOrReorder;\r\n    }\r\n    itemIndexForTop(deltaY) {\r\n        const heights = this.cachedHeights;\r\n        for (let i = 0; i < heights.length; i++) {\r\n            if (heights[i] > deltaY) {\r\n                return i;\r\n            }\r\n        }\r\n        return heights.length - 1;\r\n    }\r\n    /********* DOM WRITE ********* */\r\n    reorderMove(fromIndex, toIndex) {\r\n        const itemHeight = this.selectedItemHeight;\r\n        const children = this.el.children;\r\n        for (let i = 0; i < children.length; i++) {\r\n            const style = children[i].style;\r\n            let value = '';\r\n            if (i > fromIndex && i <= toIndex) {\r\n                value = `translateY(${-itemHeight}px)`;\r\n            }\r\n            else if (i < fromIndex && i >= toIndex) {\r\n                value = `translateY(${itemHeight}px)`;\r\n            }\r\n            style['transform'] = value;\r\n        }\r\n    }\r\n    autoscroll(posY) {\r\n        if (!this.scrollEl) {\r\n            return 0;\r\n        }\r\n        let amount = 0;\r\n        if (posY < this.scrollElTop) {\r\n            amount = -10;\r\n        }\r\n        else if (posY > this.scrollElBottom) {\r\n            amount = SCROLL_JUMP;\r\n        }\r\n        if (amount !== 0) {\r\n            this.scrollEl.scrollBy(0, amount);\r\n        }\r\n        return this.scrollEl.scrollTop - this.scrollElInitial;\r\n    }\r\n    render() {\r\n        const mode = getIonMode(this);\r\n        return (h(Host, { key: 'dfcdc3a6aa1b2fba15f861ec868d6a11e667c9de', class: {\r\n                [mode]: true,\r\n                'reorder-enabled': !this.disabled,\r\n                'reorder-list-active': this.state !== 0 /* ReorderGroupState.Idle */,\r\n            } }));\r\n    }\r\n    get el() { return getElement(this); }\r\n    static get watchers() { return {\r\n        \"disabled\": [\"disabledChanged\"]\r\n    }; }\r\n};\r\nconst indexForItem = (element) => {\r\n    return element['$ionIndex'];\r\n};\r\nconst findReorderItem = (node, container) => {\r\n    let parent;\r\n    while (node) {\r\n        parent = node.parentElement;\r\n        if (parent === container) {\r\n            return node;\r\n        }\r\n        node = parent;\r\n    }\r\n    return undefined;\r\n};\r\nconst AUTO_SCROLL_MARGIN = 60;\r\nconst SCROLL_JUMP = 10;\r\nconst ITEM_REORDER_SELECTED = 'reorder-selected';\r\nconst reorderArray = (array, from, to) => {\r\n    const element = array[from];\r\n    array.splice(from, 1);\r\n    array.splice(to, 0, element);\r\n    return array.slice();\r\n};\r\nReorderGroup.style = reorderGroupCss;\r\n\r\nexport { Reorder as ion_reorder, ReorderGroup as ion_reorder_group };\r\n"],
  "mappings": "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",
  "names": []
}
