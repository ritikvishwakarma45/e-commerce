{
  "version": 3,
  "sources": ["../../../../../../node_modules/@ionic/core/dist/esm/hardware-back-button-DcH0BbDp.js"],
  "sourcesContent": ["/*!\r\n * (C) Ionic http://ionicframework.com - MIT License\r\n */\r\nimport { w as win } from './index-ZjP4CjeZ.js';\r\nimport { l as config, o as printIonError } from './index-B_U9CtaY.js';\r\n\r\n/**\r\n * CloseWatcher is a newer API that lets\r\n * use detect the hardware back button event\r\n * in a web browser: https://caniuse.com/?search=closewatcher\r\n * However, not every browser supports it yet.\r\n *\r\n * This needs to be a function so that we can\r\n * check the config once it has been set.\r\n * Otherwise, this code would be evaluated the\r\n * moment this file is evaluated which could be\r\n * before the config is set.\r\n */\r\nconst shouldUseCloseWatcher = () => config.get('experimentalCloseWatcher', false) && win !== undefined && 'CloseWatcher' in win;\r\n/**\r\n * When hardwareBackButton: false in config,\r\n * we need to make sure we also block the default\r\n * webview behavior. If we don't then it will be\r\n * possible for users to navigate backward while\r\n * an overlay is still open. Additionally, it will\r\n * give the appearance that the hardwareBackButton\r\n * config is not working as the page transition\r\n * will still happen.\r\n */\r\nconst blockHardwareBackButton = () => {\r\n    document.addEventListener('backbutton', () => { }); // eslint-disable-line\r\n};\r\nconst startHardwareBackButton = () => {\r\n    const doc = document;\r\n    let busy = false;\r\n    const backButtonCallback = () => {\r\n        if (busy) {\r\n            return;\r\n        }\r\n        let index = 0;\r\n        let handlers = [];\r\n        const ev = new CustomEvent('ionBackButton', {\r\n            bubbles: false,\r\n            detail: {\r\n                register(priority, handler) {\r\n                    handlers.push({ priority, handler, id: index++ });\r\n                },\r\n            },\r\n        });\r\n        doc.dispatchEvent(ev);\r\n        const executeAction = async (handlerRegister) => {\r\n            try {\r\n                if (handlerRegister === null || handlerRegister === void 0 ? void 0 : handlerRegister.handler) {\r\n                    const result = handlerRegister.handler(processHandlers);\r\n                    if (result != null) {\r\n                        await result;\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                printIonError('[ion-app] - Exception in startHardwareBackButton:', e);\r\n            }\r\n        };\r\n        const processHandlers = () => {\r\n            if (handlers.length > 0) {\r\n                let selectedHandler = {\r\n                    priority: Number.MIN_SAFE_INTEGER,\r\n                    handler: () => undefined,\r\n                    id: -1,\r\n                };\r\n                handlers.forEach((handler) => {\r\n                    if (handler.priority >= selectedHandler.priority) {\r\n                        selectedHandler = handler;\r\n                    }\r\n                });\r\n                busy = true;\r\n                handlers = handlers.filter((handler) => handler.id !== selectedHandler.id);\r\n                executeAction(selectedHandler).then(() => (busy = false));\r\n            }\r\n        };\r\n        processHandlers();\r\n    };\r\n    /**\r\n     * If the CloseWatcher is defined then\r\n     * we don't want to also listen for the native\r\n     * backbutton event otherwise we may get duplicate\r\n     * events firing.\r\n     */\r\n    if (shouldUseCloseWatcher()) {\r\n        let watcher;\r\n        const configureWatcher = () => {\r\n            watcher === null || watcher === void 0 ? void 0 : watcher.destroy();\r\n            watcher = new win.CloseWatcher();\r\n            /**\r\n             * Once a close request happens\r\n             * the watcher gets destroyed.\r\n             * As a result, we need to re-configure\r\n             * the watcher so we can respond to other\r\n             * close requests.\r\n             */\r\n            watcher.onclose = () => {\r\n                backButtonCallback();\r\n                configureWatcher();\r\n            };\r\n        };\r\n        configureWatcher();\r\n    }\r\n    else {\r\n        doc.addEventListener('backbutton', backButtonCallback);\r\n    }\r\n};\r\nconst OVERLAY_BACK_BUTTON_PRIORITY = 100;\r\nconst MENU_BACK_BUTTON_PRIORITY = 99; // 1 less than overlay priority since menu is displayed behind overlays\r\n\r\nexport { MENU_BACK_BUTTON_PRIORITY, OVERLAY_BACK_BUTTON_PRIORITY, blockHardwareBackButton, shouldUseCloseWatcher, startHardwareBackButton };\r\n"],
  "mappings": ";;;;;;;;;;;;AAkBA,IAAM,wBAAwB,MAAM,OAAO,IAAI,4BAA4B,KAAK,KAAK,QAAQ,UAAa,kBAAkB;AAW5H,IAAM,0BAA0B,MAAM;AAClC,WAAS,iBAAiB,cAAc,MAAM;AAAA,EAAE,CAAC;AACrD;AACA,IAAM,0BAA0B,MAAM;AAClC,QAAM,MAAM;AACZ,MAAI,OAAO;AACX,QAAM,qBAAqB,MAAM;AAC7B,QAAI,MAAM;AACN;AAAA,IACJ;AACA,QAAI,QAAQ;AACZ,QAAI,WAAW,CAAC;AAChB,UAAM,KAAK,IAAI,YAAY,iBAAiB;AAAA,MACxC,SAAS;AAAA,MACT,QAAQ;AAAA,QACJ,SAAS,UAAU,SAAS;AACxB,mBAAS,KAAK,EAAE,UAAU,SAAS,IAAI,QAAQ,CAAC;AAAA,QACpD;AAAA,MACJ;AAAA,IACJ,CAAC;AACD,QAAI,cAAc,EAAE;AACpB,UAAM,gBAAgB,CAAO,oBAAoB;AAC7C,UAAI;AACA,YAAI,oBAAoB,QAAQ,oBAAoB,SAAS,SAAS,gBAAgB,SAAS;AAC3F,gBAAM,SAAS,gBAAgB,QAAQ,eAAe;AACtD,cAAI,UAAU,MAAM;AAChB,kBAAM;AAAA,UACV;AAAA,QACJ;AAAA,MACJ,SACO,GAAG;AACN,sBAAc,qDAAqD,CAAC;AAAA,MACxE;AAAA,IACJ;AACA,UAAM,kBAAkB,MAAM;AAC1B,UAAI,SAAS,SAAS,GAAG;AACrB,YAAI,kBAAkB;AAAA,UAClB,UAAU,OAAO;AAAA,UACjB,SAAS,MAAM;AAAA,UACf,IAAI;AAAA,QACR;AACA,iBAAS,QAAQ,CAAC,YAAY;AAC1B,cAAI,QAAQ,YAAY,gBAAgB,UAAU;AAC9C,8BAAkB;AAAA,UACtB;AAAA,QACJ,CAAC;AACD,eAAO;AACP,mBAAW,SAAS,OAAO,CAAC,YAAY,QAAQ,OAAO,gBAAgB,EAAE;AACzE,sBAAc,eAAe,EAAE,KAAK,MAAO,OAAO,KAAM;AAAA,MAC5D;AAAA,IACJ;AACA,oBAAgB;AAAA,EACpB;AAOA,MAAI,sBAAsB,GAAG;AACzB,QAAI;AACJ,UAAM,mBAAmB,MAAM;AAC3B,kBAAY,QAAQ,YAAY,SAAS,SAAS,QAAQ,QAAQ;AAClE,gBAAU,IAAI,IAAI,aAAa;AAQ/B,cAAQ,UAAU,MAAM;AACpB,2BAAmB;AACnB,yBAAiB;AAAA,MACrB;AAAA,IACJ;AACA,qBAAiB;AAAA,EACrB,OACK;AACD,QAAI,iBAAiB,cAAc,kBAAkB;AAAA,EACzD;AACJ;AACA,IAAM,+BAA+B;AACrC,IAAM,4BAA4B;",
  "names": []
}
