{
  "version": 3,
  "sources": ["../../../../../../node_modules/@ionic/core/dist/esm/helpers-1O4D2b7y.js"],
  "sourcesContent": ["/*!\r\n * (C) Ionic http://ionicframework.com - MIT License\r\n */\r\nimport { o as printIonError } from './index-B_U9CtaY.js';\r\n\r\nconst transitionEndAsync = (el, expectedDuration = 0) => {\r\n    return new Promise((resolve) => {\r\n        transitionEnd(el, expectedDuration, resolve);\r\n    });\r\n};\r\n/**\r\n * Allows developer to wait for a transition\r\n * to finish and fallback to a timer if the\r\n * transition is cancelled or otherwise\r\n * never finishes. Also see transitionEndAsync\r\n * which is an await-able version of this.\r\n */\r\nconst transitionEnd = (el, expectedDuration = 0, callback) => {\r\n    let unRegTrans;\r\n    let animationTimeout;\r\n    const opts = { passive: true };\r\n    const ANIMATION_FALLBACK_TIMEOUT = 500;\r\n    const unregister = () => {\r\n        if (unRegTrans) {\r\n            unRegTrans();\r\n        }\r\n    };\r\n    const onTransitionEnd = (ev) => {\r\n        if (ev === undefined || el === ev.target) {\r\n            unregister();\r\n            callback(ev);\r\n        }\r\n    };\r\n    if (el) {\r\n        el.addEventListener('webkitTransitionEnd', onTransitionEnd, opts);\r\n        el.addEventListener('transitionend', onTransitionEnd, opts);\r\n        animationTimeout = setTimeout(onTransitionEnd, expectedDuration + ANIMATION_FALLBACK_TIMEOUT);\r\n        unRegTrans = () => {\r\n            if (animationTimeout !== undefined) {\r\n                clearTimeout(animationTimeout);\r\n                animationTimeout = undefined;\r\n            }\r\n            el.removeEventListener('webkitTransitionEnd', onTransitionEnd, opts);\r\n            el.removeEventListener('transitionend', onTransitionEnd, opts);\r\n        };\r\n    }\r\n    return unregister;\r\n};\r\n/**\r\n * Waits for a component to be ready for\r\n * both custom element and non-custom element builds.\r\n * If non-custom element build, el.componentOnReady\r\n * will be used.\r\n * For custom element builds, we wait a frame\r\n * so that the inner contents of the component\r\n * have a chance to render.\r\n *\r\n * Use this utility rather than calling\r\n * el.componentOnReady yourself.\r\n */\r\nconst componentOnReady = (el, callback) => {\r\n    if (el.componentOnReady) {\r\n        // eslint-disable-next-line custom-rules/no-component-on-ready-method\r\n        el.componentOnReady().then((resolvedEl) => callback(resolvedEl));\r\n    }\r\n    else {\r\n        raf(() => callback(el));\r\n    }\r\n};\r\n/**\r\n * This functions checks if a Stencil component is using\r\n * the lazy loaded build of Stencil. Returns `true` if\r\n * the component is lazy loaded. Returns `false` otherwise.\r\n */\r\nconst hasLazyBuild = (stencilEl) => {\r\n    return stencilEl.componentOnReady !== undefined;\r\n};\r\n/**\r\n * Elements inside of web components sometimes need to inherit global attributes\r\n * set on the host. For example, the inner input in `ion-input` should inherit\r\n * the `title` attribute that developers set directly on `ion-input`. This\r\n * helper function should be called in componentWillLoad and assigned to a variable\r\n * that is later used in the render function.\r\n *\r\n * This does not need to be reactive as changing attributes on the host element\r\n * does not trigger a re-render.\r\n */\r\nconst inheritAttributes = (el, attributes = []) => {\r\n    const attributeObject = {};\r\n    attributes.forEach((attr) => {\r\n        if (el.hasAttribute(attr)) {\r\n            const value = el.getAttribute(attr);\r\n            if (value !== null) {\r\n                attributeObject[attr] = el.getAttribute(attr);\r\n            }\r\n            el.removeAttribute(attr);\r\n        }\r\n    });\r\n    return attributeObject;\r\n};\r\n/**\r\n * List of available ARIA attributes + `role`.\r\n * Removed deprecated attributes.\r\n * https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes\r\n */\r\nconst ariaAttributes = [\r\n    'role',\r\n    'aria-activedescendant',\r\n    'aria-atomic',\r\n    'aria-autocomplete',\r\n    'aria-braillelabel',\r\n    'aria-brailleroledescription',\r\n    'aria-busy',\r\n    'aria-checked',\r\n    'aria-colcount',\r\n    'aria-colindex',\r\n    'aria-colindextext',\r\n    'aria-colspan',\r\n    'aria-controls',\r\n    'aria-current',\r\n    'aria-describedby',\r\n    'aria-description',\r\n    'aria-details',\r\n    'aria-disabled',\r\n    'aria-errormessage',\r\n    'aria-expanded',\r\n    'aria-flowto',\r\n    'aria-haspopup',\r\n    'aria-hidden',\r\n    'aria-invalid',\r\n    'aria-keyshortcuts',\r\n    'aria-label',\r\n    'aria-labelledby',\r\n    'aria-level',\r\n    'aria-live',\r\n    'aria-multiline',\r\n    'aria-multiselectable',\r\n    'aria-orientation',\r\n    'aria-owns',\r\n    'aria-placeholder',\r\n    'aria-posinset',\r\n    'aria-pressed',\r\n    'aria-readonly',\r\n    'aria-relevant',\r\n    'aria-required',\r\n    'aria-roledescription',\r\n    'aria-rowcount',\r\n    'aria-rowindex',\r\n    'aria-rowindextext',\r\n    'aria-rowspan',\r\n    'aria-selected',\r\n    'aria-setsize',\r\n    'aria-sort',\r\n    'aria-valuemax',\r\n    'aria-valuemin',\r\n    'aria-valuenow',\r\n    'aria-valuetext',\r\n];\r\n/**\r\n * Returns an array of aria attributes that should be copied from\r\n * the shadow host element to a target within the light DOM.\r\n * @param el The element that the attributes should be copied from.\r\n * @param ignoreList The list of aria-attributes to ignore reflecting and removing from the host.\r\n * Use this in instances where we manually specify aria attributes on the `<Host>` element.\r\n */\r\nconst inheritAriaAttributes = (el, ignoreList) => {\r\n    let attributesToInherit = ariaAttributes;\r\n    return inheritAttributes(el, attributesToInherit);\r\n};\r\nconst addEventListener = (el, eventName, callback, opts) => {\r\n    return el.addEventListener(eventName, callback, opts);\r\n};\r\nconst removeEventListener = (el, eventName, callback, opts) => {\r\n    return el.removeEventListener(eventName, callback, opts);\r\n};\r\n/**\r\n * Gets the root context of a shadow dom element\r\n * On newer browsers this will be the shadowRoot,\r\n * but for older browser this may just be the\r\n * element itself.\r\n *\r\n * Useful for whenever you need to explicitly\r\n * do \"myElement.shadowRoot!.querySelector(...)\".\r\n */\r\nconst getElementRoot = (el, fallback = el) => {\r\n    return el.shadowRoot || fallback;\r\n};\r\n/**\r\n * Patched version of requestAnimationFrame that avoids ngzone\r\n * Use only when you know ngzone should not run\r\n */\r\nconst raf = (h) => {\r\n    if (typeof __zone_symbol__requestAnimationFrame === 'function') {\r\n        return __zone_symbol__requestAnimationFrame(h);\r\n    }\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        return requestAnimationFrame(h);\r\n    }\r\n    return setTimeout(h);\r\n};\r\nconst hasShadowDom = (el) => {\r\n    return !!el.shadowRoot && !!el.attachShadow;\r\n};\r\nconst focusVisibleElement = (el) => {\r\n    el.focus();\r\n    /**\r\n     * When programmatically focusing an element,\r\n     * the focus-visible utility will not run because\r\n     * it is expecting a keyboard event to have triggered this;\r\n     * however, there are times when we need to manually control\r\n     * this behavior so we call the `setFocus` method on ion-app\r\n     * which will let us explicitly set the elements to focus.\r\n     */\r\n    if (el.classList.contains('ion-focusable')) {\r\n        const app = el.closest('ion-app');\r\n        if (app) {\r\n            app.setFocus([el]);\r\n        }\r\n    }\r\n};\r\n/**\r\n * This method is used to add a hidden input to a host element that contains\r\n * a Shadow DOM. It does not add the input inside of the Shadow root which\r\n * allows it to be picked up inside of forms. It should contain the same\r\n * values as the host element.\r\n *\r\n * @param always Add a hidden input even if the container does not use Shadow\r\n * @param container The element where the input will be added\r\n * @param name The name of the input\r\n * @param value The value of the input\r\n * @param disabled If true, the input is disabled\r\n */\r\nconst renderHiddenInput = (always, container, name, value, disabled) => {\r\n    {\r\n        let input = container.querySelector('input.aux-input');\r\n        if (!input) {\r\n            input = container.ownerDocument.createElement('input');\r\n            input.type = 'hidden';\r\n            input.classList.add('aux-input');\r\n            container.appendChild(input);\r\n        }\r\n        input.disabled = disabled;\r\n        input.name = name;\r\n        input.value = value || '';\r\n    }\r\n};\r\nconst clamp = (min, n, max) => {\r\n    return Math.max(min, Math.min(n, max));\r\n};\r\nconst assert = (actual, reason) => {\r\n    if (!actual) {\r\n        const message = 'ASSERT: ' + reason;\r\n        printIonError(message);\r\n        debugger; // eslint-disable-line\r\n        throw new Error(message);\r\n    }\r\n};\r\nconst pointerCoord = (ev) => {\r\n    // get X coordinates for either a mouse click\r\n    // or a touch depending on the given event\r\n    if (ev) {\r\n        const changedTouches = ev.changedTouches;\r\n        if (changedTouches && changedTouches.length > 0) {\r\n            const touch = changedTouches[0];\r\n            return { x: touch.clientX, y: touch.clientY };\r\n        }\r\n        if (ev.pageX !== undefined) {\r\n            return { x: ev.pageX, y: ev.pageY };\r\n        }\r\n    }\r\n    return { x: 0, y: 0 };\r\n};\r\n/**\r\n * @hidden\r\n * Given a side, return if it should be on the end\r\n * based on the value of dir\r\n * @param side the side\r\n * @param isRTL whether the application dir is rtl\r\n */\r\nconst isEndSide = (side) => {\r\n    const isRTL = document.dir === 'rtl';\r\n    switch (side) {\r\n        case 'start':\r\n            return isRTL;\r\n        case 'end':\r\n            return !isRTL;\r\n        default:\r\n            throw new Error(`\"${side}\" is not a valid value for [side]. Use \"start\" or \"end\" instead.`);\r\n    }\r\n};\r\nconst debounceEvent = (event, wait) => {\r\n    const original = event._original || event;\r\n    return {\r\n        _original: event,\r\n        emit: debounce(original.emit.bind(original), wait),\r\n    };\r\n};\r\nconst debounce = (func, wait = 0) => {\r\n    let timer;\r\n    return (...args) => {\r\n        clearTimeout(timer);\r\n        timer = setTimeout(func, wait, ...args);\r\n    };\r\n};\r\n/**\r\n * Check whether the two string maps are shallow equal.\r\n *\r\n * undefined is treated as an empty map.\r\n *\r\n * @returns whether the keys are the same and the values are shallow equal.\r\n */\r\nconst shallowEqualStringMap = (map1, map2) => {\r\n    map1 !== null && map1 !== void 0 ? map1 : (map1 = {});\r\n    map2 !== null && map2 !== void 0 ? map2 : (map2 = {});\r\n    if (map1 === map2) {\r\n        return true;\r\n    }\r\n    const keys1 = Object.keys(map1);\r\n    if (keys1.length !== Object.keys(map2).length) {\r\n        return false;\r\n    }\r\n    for (const k1 of keys1) {\r\n        if (!(k1 in map2)) {\r\n            return false;\r\n        }\r\n        if (map1[k1] !== map2[k1]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n};\r\n/**\r\n * Checks input for usable number. Not NaN and not Infinite.\r\n */\r\nconst isSafeNumber = (input) => {\r\n    return typeof input === 'number' && !isNaN(input) && isFinite(input);\r\n};\r\n\r\nexport { renderHiddenInput as a, inheritAttributes as b, componentOnReady as c, debounceEvent as d, clamp as e, addEventListener as f, getElementRoot as g, hasLazyBuild as h, inheritAriaAttributes as i, isSafeNumber as j, hasShadowDom as k, assert as l, removeEventListener as m, focusVisibleElement as n, isEndSide as o, debounce as p, pointerCoord as q, raf as r, shallowEqualStringMap as s, transitionEndAsync as t };\r\n"],
  "mappings": "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",
  "names": []
}
