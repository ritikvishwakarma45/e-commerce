{
  "version": 3,
  "sources": ["../../../../../../node_modules/@ionic/core/dist/esm/ion-split-pane.entry.js"],
  "sourcesContent": ["/*!\r\n * (C) Ionic http://ionicframework.com - MIT License\r\n */\r\nimport { r as registerInstance, d as createEvent, m as printIonWarning, e as getIonMode, h, j as Host, k as getElement } from './index-B_U9CtaY.js';\r\n\r\nconst splitPaneIosCss = \":host{--side-width:100%;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}:host(.split-pane-visible) ::slotted(.split-pane-main){left:0;right:0;top:0;bottom:0;position:relative;-ms-flex:1;flex:1;-webkit-box-shadow:none;box-shadow:none;overflow:hidden;z-index:0}::slotted(.split-pane-side:not(ion-menu)){display:none}:host{--border:0.55px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-250, var(--ion-background-color-step-250, #c8c7cc))));--side-min-width:270px;--side-max-width:28%}\";\r\n\r\nconst splitPaneMdCss = \":host{--side-width:100%;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}:host(.split-pane-visible) ::slotted(.split-pane-main){left:0;right:0;top:0;bottom:0;position:relative;-ms-flex:1;flex:1;-webkit-box-shadow:none;box-shadow:none;overflow:hidden;z-index:0}::slotted(.split-pane-side:not(ion-menu)){display:none}:host{--border:1px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, var(--ion-background-color-step-150, rgba(0, 0, 0, 0.13)))));--side-min-width:270px;--side-max-width:28%}\";\r\n\r\n// TODO(FW-2832): types\r\nconst SPLIT_PANE_MAIN = 'split-pane-main';\r\nconst SPLIT_PANE_SIDE = 'split-pane-side';\r\nconst QUERY = {\r\n    xs: '(min-width: 0px)',\r\n    sm: '(min-width: 576px)',\r\n    md: '(min-width: 768px)',\r\n    lg: '(min-width: 992px)',\r\n    xl: '(min-width: 1200px)',\r\n    never: '',\r\n};\r\nconst SplitPane = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.ionSplitPaneVisible = createEvent(this, \"ionSplitPaneVisible\", 7);\r\n        this.visible = false;\r\n        /**\r\n         * If `true`, the split pane will be hidden.\r\n         */\r\n        this.disabled = false;\r\n        /**\r\n         * When the split-pane should be shown.\r\n         * Can be a CSS media query expression, or a shortcut expression.\r\n         * Can also be a boolean expression.\r\n         */\r\n        this.when = QUERY['lg'];\r\n    }\r\n    visibleChanged(visible) {\r\n        this.ionSplitPaneVisible.emit({ visible });\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    async isVisible() {\r\n        return Promise.resolve(this.visible);\r\n    }\r\n    async connectedCallback() {\r\n        // TODO: connectedCallback is fired in CE build\r\n        // before WC is defined. This needs to be fixed in Stencil.\r\n        if (typeof customElements !== 'undefined' && customElements != null) {\r\n            await customElements.whenDefined('ion-split-pane');\r\n        }\r\n        this.styleMainElement();\r\n        this.updateState();\r\n    }\r\n    disconnectedCallback() {\r\n        if (this.rmL) {\r\n            this.rmL();\r\n            this.rmL = undefined;\r\n        }\r\n    }\r\n    updateState() {\r\n        if (this.rmL) {\r\n            this.rmL();\r\n            this.rmL = undefined;\r\n        }\r\n        // Check if the split-pane is disabled\r\n        if (this.disabled) {\r\n            this.visible = false;\r\n            return;\r\n        }\r\n        // When query is a boolean\r\n        const query = this.when;\r\n        if (typeof query === 'boolean') {\r\n            this.visible = query;\r\n            return;\r\n        }\r\n        // When query is a string, let's find first if it is a shortcut\r\n        const mediaQuery = QUERY[query] || query;\r\n        // Media query is empty or null, we hide it\r\n        if (mediaQuery.length === 0) {\r\n            this.visible = false;\r\n            return;\r\n        }\r\n        // Listen on media query\r\n        const callback = (q) => {\r\n            this.visible = q.matches;\r\n        };\r\n        const mediaList = window.matchMedia(mediaQuery);\r\n        // TODO FW-5869\r\n        mediaList.addListener(callback);\r\n        this.rmL = () => mediaList.removeListener(callback);\r\n        this.visible = mediaList.matches;\r\n    }\r\n    /**\r\n     * Attempt to find the main content\r\n     * element inside of the split pane.\r\n     * If found, set it as the main node.\r\n     *\r\n     * We assume that the main node\r\n     * is available in the DOM on split\r\n     * pane load.\r\n     */\r\n    styleMainElement() {\r\n        const contentId = this.contentId;\r\n        const children = this.el.children;\r\n        const nu = this.el.childElementCount;\r\n        let foundMain = false;\r\n        for (let i = 0; i < nu; i++) {\r\n            const child = children[i];\r\n            const isMain = contentId !== undefined && child.id === contentId;\r\n            if (isMain) {\r\n                if (foundMain) {\r\n                    printIonWarning('[ion-split-pane] - Cannot have more than one main node.');\r\n                    return;\r\n                }\r\n                else {\r\n                    setPaneClass(child, isMain);\r\n                    foundMain = true;\r\n                }\r\n            }\r\n        }\r\n        if (!foundMain) {\r\n            printIonWarning('[ion-split-pane] - Does not have a specified main node.');\r\n        }\r\n    }\r\n    render() {\r\n        const mode = getIonMode(this);\r\n        return (h(Host, { key: 'd5e30df12f1f1f855da4c66f98076b9dce762c59', class: {\r\n                [mode]: true,\r\n                // Used internally for styling\r\n                [`split-pane-${mode}`]: true,\r\n                'split-pane-visible': this.visible,\r\n            } }, h(\"slot\", { key: '3e30d7cf3bc1cf434e16876a0cb2a36377b8e00f' })));\r\n    }\r\n    get el() { return getElement(this); }\r\n    static get watchers() { return {\r\n        \"visible\": [\"visibleChanged\"],\r\n        \"disabled\": [\"updateState\"],\r\n        \"when\": [\"updateState\"]\r\n    }; }\r\n};\r\nconst setPaneClass = (el, isMain) => {\r\n    let toAdd;\r\n    let toRemove;\r\n    if (isMain) {\r\n        toAdd = SPLIT_PANE_MAIN;\r\n        toRemove = SPLIT_PANE_SIDE;\r\n    }\r\n    else {\r\n        toAdd = SPLIT_PANE_SIDE;\r\n        toRemove = SPLIT_PANE_MAIN;\r\n    }\r\n    const classList = el.classList;\r\n    classList.add(toAdd);\r\n    classList.remove(toRemove);\r\n};\r\nSplitPane.style = {\r\n    ios: splitPaneIosCss,\r\n    md: splitPaneMdCss\r\n};\r\n\r\nexport { SplitPane as ion_split_pane };\r\n"],
  "mappings": "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",
  "names": []
}
