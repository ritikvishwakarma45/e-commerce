{
  "version": 3,
  "sources": ["../../../../../../node_modules/@ionic/core/components/index8.js"],
  "sourcesContent": ["/*!\r\n * (C) Ionic http://ionicframework.com - MIT License\r\n */\r\nimport { c as componentOnReady } from './helpers.js';\r\nimport { e as printRequiredElementError } from './index4.js';\r\n\r\nconst ION_CONTENT_TAG_NAME = 'ION-CONTENT';\r\nconst ION_CONTENT_ELEMENT_SELECTOR = 'ion-content';\r\nconst ION_CONTENT_CLASS_SELECTOR = '.ion-content-scroll-host';\r\n/**\r\n * Selector used for implementations reliant on `<ion-content>` for scroll event changes.\r\n *\r\n * Developers should use the `.ion-content-scroll-host` selector to target the element emitting\r\n * scroll events. With virtual scroll implementations this will be the host element for\r\n * the scroll viewport.\r\n */\r\nconst ION_CONTENT_SELECTOR = `${ION_CONTENT_ELEMENT_SELECTOR}, ${ION_CONTENT_CLASS_SELECTOR}`;\r\nconst isIonContent = (el) => el.tagName === ION_CONTENT_TAG_NAME;\r\n/**\r\n * Waits for the element host fully initialize before\r\n * returning the inner scroll element.\r\n *\r\n * For `ion-content` the scroll target will be the result\r\n * of the `getScrollElement` function.\r\n *\r\n * For custom implementations it will be the element host\r\n * or a selector within the host, if supplied through `scrollTarget`.\r\n */\r\nconst getScrollElement = async (el) => {\r\n    if (isIonContent(el)) {\r\n        await new Promise((resolve) => componentOnReady(el, resolve));\r\n        return el.getScrollElement();\r\n    }\r\n    return el;\r\n};\r\n/**\r\n * Queries the element matching the selector for IonContent.\r\n * See ION_CONTENT_SELECTOR for the selector used.\r\n */\r\nconst findIonContent = (el) => {\r\n    /**\r\n     * First we try to query the custom scroll host selector in cases where\r\n     * the implementation is using an outer `ion-content` with an inner custom\r\n     * scroll container.\r\n     */\r\n    const customContentHost = el.querySelector(ION_CONTENT_CLASS_SELECTOR);\r\n    if (customContentHost) {\r\n        return customContentHost;\r\n    }\r\n    return el.querySelector(ION_CONTENT_SELECTOR);\r\n};\r\n/**\r\n * Queries the closest element matching the selector for IonContent.\r\n */\r\nconst findClosestIonContent = (el) => {\r\n    return el.closest(ION_CONTENT_SELECTOR);\r\n};\r\n/**\r\n * Scrolls to the top of the element. If an `ion-content` is found, it will scroll\r\n * using the public API `scrollToTop` with a duration.\r\n */\r\nconst scrollToTop = (el, durationMs) => {\r\n    if (isIonContent(el)) {\r\n        const content = el;\r\n        return content.scrollToTop(durationMs);\r\n    }\r\n    return Promise.resolve(el.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: 'smooth' ,\r\n    }));\r\n};\r\n/**\r\n * Scrolls by a specified X/Y distance in the component. If an `ion-content` is found, it will scroll\r\n * using the public API `scrollByPoint` with a duration.\r\n */\r\nconst scrollByPoint = (el, x, y, durationMs) => {\r\n    if (isIonContent(el)) {\r\n        const content = el;\r\n        return content.scrollByPoint(x, y, durationMs);\r\n    }\r\n    return Promise.resolve(el.scrollBy({\r\n        top: y,\r\n        left: x,\r\n        behavior: durationMs > 0 ? 'smooth' : 'auto',\r\n    }));\r\n};\r\n/**\r\n * Prints an error informing developers that an implementation requires an element to be used\r\n * within either the `ion-content` selector or the `.ion-content-scroll-host` class.\r\n */\r\nconst printIonContentErrorMsg = (el) => {\r\n    return printRequiredElementError(el, ION_CONTENT_ELEMENT_SELECTOR);\r\n};\r\n/**\r\n * Several components in Ionic need to prevent scrolling\r\n * during a gesture (card modal, range, item sliding, etc).\r\n * Use this utility to account for ion-content and custom content hosts.\r\n */\r\nconst disableContentScrollY = (contentEl) => {\r\n    if (isIonContent(contentEl)) {\r\n        const ionContent = contentEl;\r\n        const initialScrollY = ionContent.scrollY;\r\n        ionContent.scrollY = false;\r\n        /**\r\n         * This should be passed into resetContentScrollY\r\n         * so that we can revert ion-content's scrollY to the\r\n         * correct state. For example, if scrollY = false\r\n         * initially, we do not want to enable scrolling\r\n         * when we call resetContentScrollY.\r\n         */\r\n        return initialScrollY;\r\n    }\r\n    else {\r\n        contentEl.style.setProperty('overflow', 'hidden');\r\n        return true;\r\n    }\r\n};\r\nconst resetContentScrollY = (contentEl, initialScrollY) => {\r\n    if (isIonContent(contentEl)) {\r\n        contentEl.scrollY = initialScrollY;\r\n    }\r\n    else {\r\n        contentEl.style.removeProperty('overflow');\r\n    }\r\n};\r\n\r\nexport { ION_CONTENT_CLASS_SELECTOR as I, findClosestIonContent as a, ION_CONTENT_ELEMENT_SELECTOR as b, scrollByPoint as c, disableContentScrollY as d, findIonContent as f, getScrollElement as g, isIonContent as i, printIonContentErrorMsg as p, resetContentScrollY as r, scrollToTop as s };\r\n"],
  "mappings": ";;;;;;;;;;;AAMA,IAAM,uBAAuB;AAC7B,IAAM,+BAA+B;AACrC,IAAM,6BAA6B;AAQnC,IAAM,uBAAuB,GAAG,4BAA4B,KAAK,0BAA0B;AAC3F,IAAM,eAAe,CAAC,OAAO,GAAG,YAAY;AAW5C,IAAM,mBAAmB,CAAO,OAAO;AACnC,MAAI,aAAa,EAAE,GAAG;AAClB,UAAM,IAAI,QAAQ,CAAC,YAAY,iBAAiB,IAAI,OAAO,CAAC;AAC5D,WAAO,GAAG,iBAAiB;AAAA,EAC/B;AACA,SAAO;AACX;AAKA,IAAM,iBAAiB,CAAC,OAAO;AAM3B,QAAM,oBAAoB,GAAG,cAAc,0BAA0B;AACrE,MAAI,mBAAmB;AACnB,WAAO;AAAA,EACX;AACA,SAAO,GAAG,cAAc,oBAAoB;AAChD;AAIA,IAAM,wBAAwB,CAAC,OAAO;AAClC,SAAO,GAAG,QAAQ,oBAAoB;AAC1C;AAKA,IAAM,cAAc,CAAC,IAAI,eAAe;AACpC,MAAI,aAAa,EAAE,GAAG;AAClB,UAAM,UAAU;AAChB,WAAO,QAAQ,YAAY,UAAU;AAAA,EACzC;AACA,SAAO,QAAQ,QAAQ,GAAG,SAAS;AAAA,IAC/B,KAAK;AAAA,IACL,MAAM;AAAA,IACN,UAAU;AAAA,EACd,CAAC,CAAC;AACN;AAKA,IAAM,gBAAgB,CAAC,IAAI,GAAG,GAAG,eAAe;AAC5C,MAAI,aAAa,EAAE,GAAG;AAClB,UAAM,UAAU;AAChB,WAAO,QAAQ,cAAc,GAAG,GAAG,UAAU;AAAA,EACjD;AACA,SAAO,QAAQ,QAAQ,GAAG,SAAS;AAAA,IAC/B,KAAK;AAAA,IACL,MAAM;AAAA,IACN,UAAU,aAAa,IAAI,WAAW;AAAA,EAC1C,CAAC,CAAC;AACN;AAKA,IAAM,0BAA0B,CAAC,OAAO;AACpC,SAAO,0BAA0B,IAAI,4BAA4B;AACrE;AAMA,IAAM,wBAAwB,CAAC,cAAc;AACzC,MAAI,aAAa,SAAS,GAAG;AACzB,UAAM,aAAa;AACnB,UAAM,iBAAiB,WAAW;AAClC,eAAW,UAAU;AAQrB,WAAO;AAAA,EACX,OACK;AACD,cAAU,MAAM,YAAY,YAAY,QAAQ;AAChD,WAAO;AAAA,EACX;AACJ;AACA,IAAM,sBAAsB,CAAC,WAAW,mBAAmB;AACvD,MAAI,aAAa,SAAS,GAAG;AACzB,cAAU,UAAU;AAAA,EACxB,OACK;AACD,cAAU,MAAM,eAAe,UAAU;AAAA,EAC7C;AACJ;",
  "names": []
}
