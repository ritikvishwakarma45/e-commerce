{
  "version": 3,
  "sources": ["../../../../../../node_modules/@ionic/core/dist/esm/index-CfgBF1SE.js"],
  "sourcesContent": ["/*!\r\n * (C) Ionic http://ionicframework.com - MIT License\r\n */\r\nimport { G as GESTURE_CONTROLLER } from './gesture-controller-BTEOs1at.js';\r\n\r\nconst addEventListener = (el, // TODO(FW-2832): type\r\neventName, callback, opts) => {\r\n    // use event listener options when supported\r\n    // otherwise it's just a boolean for the \"capture\" arg\r\n    const listenerOpts = supportsPassive(el)\r\n        ? {\r\n            capture: false,\r\n            passive: !!opts.passive,\r\n        }\r\n        : false;\r\n    let add;\r\n    let remove;\r\n    if (el['__zone_symbol__addEventListener']) {\r\n        add = '__zone_symbol__addEventListener';\r\n        remove = '__zone_symbol__removeEventListener';\r\n    }\r\n    else {\r\n        add = 'addEventListener';\r\n        remove = 'removeEventListener';\r\n    }\r\n    el[add](eventName, callback, listenerOpts);\r\n    return () => {\r\n        el[remove](eventName, callback, listenerOpts);\r\n    };\r\n};\r\nconst supportsPassive = (node) => {\r\n    if (_sPassive === undefined) {\r\n        try {\r\n            const opts = Object.defineProperty({}, 'passive', {\r\n                get: () => {\r\n                    _sPassive = true;\r\n                },\r\n            });\r\n            node.addEventListener('optsTest', () => {\r\n                return;\r\n            }, opts);\r\n        }\r\n        catch (e) {\r\n            _sPassive = false;\r\n        }\r\n    }\r\n    return !!_sPassive;\r\n};\r\nlet _sPassive;\r\n\r\nconst MOUSE_WAIT = 2000;\r\n// TODO(FW-2832): types\r\nconst createPointerEvents = (el, pointerDown, pointerMove, pointerUp, options) => {\r\n    let rmTouchStart;\r\n    let rmTouchMove;\r\n    let rmTouchEnd;\r\n    let rmTouchCancel;\r\n    let rmMouseStart;\r\n    let rmMouseMove;\r\n    let rmMouseUp;\r\n    let lastTouchEvent = 0;\r\n    const handleTouchStart = (ev) => {\r\n        lastTouchEvent = Date.now() + MOUSE_WAIT;\r\n        if (!pointerDown(ev)) {\r\n            return;\r\n        }\r\n        if (!rmTouchMove && pointerMove) {\r\n            rmTouchMove = addEventListener(el, 'touchmove', pointerMove, options);\r\n        }\r\n        /**\r\n         * Events are dispatched on the element that is tapped and bubble up to\r\n         * the reference element in the gesture. In the event that the element this\r\n         * event was first dispatched on is removed from the DOM, the event will no\r\n         * longer bubble up to our reference element. This leaves the gesture in an\r\n         * unusable state. To account for this, the touchend and touchcancel listeners\r\n         * should be added to the event target so that they still fire even if the target\r\n         * is removed from the DOM.\r\n         */\r\n        if (!rmTouchEnd) {\r\n            rmTouchEnd = addEventListener(ev.target, 'touchend', handleTouchEnd, options);\r\n        }\r\n        if (!rmTouchCancel) {\r\n            rmTouchCancel = addEventListener(ev.target, 'touchcancel', handleTouchEnd, options);\r\n        }\r\n    };\r\n    const handleMouseDown = (ev) => {\r\n        if (lastTouchEvent > Date.now()) {\r\n            return;\r\n        }\r\n        if (!pointerDown(ev)) {\r\n            return;\r\n        }\r\n        if (!rmMouseMove && pointerMove) {\r\n            rmMouseMove = addEventListener(getDocument(el), 'mousemove', pointerMove, options);\r\n        }\r\n        if (!rmMouseUp) {\r\n            rmMouseUp = addEventListener(getDocument(el), 'mouseup', handleMouseUp, options);\r\n        }\r\n    };\r\n    const handleTouchEnd = (ev) => {\r\n        stopTouch();\r\n        if (pointerUp) {\r\n            pointerUp(ev);\r\n        }\r\n    };\r\n    const handleMouseUp = (ev) => {\r\n        stopMouse();\r\n        if (pointerUp) {\r\n            pointerUp(ev);\r\n        }\r\n    };\r\n    const stopTouch = () => {\r\n        if (rmTouchMove) {\r\n            rmTouchMove();\r\n        }\r\n        if (rmTouchEnd) {\r\n            rmTouchEnd();\r\n        }\r\n        if (rmTouchCancel) {\r\n            rmTouchCancel();\r\n        }\r\n        rmTouchMove = rmTouchEnd = rmTouchCancel = undefined;\r\n    };\r\n    const stopMouse = () => {\r\n        if (rmMouseMove) {\r\n            rmMouseMove();\r\n        }\r\n        if (rmMouseUp) {\r\n            rmMouseUp();\r\n        }\r\n        rmMouseMove = rmMouseUp = undefined;\r\n    };\r\n    const stop = () => {\r\n        stopTouch();\r\n        stopMouse();\r\n    };\r\n    const enable = (isEnabled = true) => {\r\n        if (!isEnabled) {\r\n            if (rmTouchStart) {\r\n                rmTouchStart();\r\n            }\r\n            if (rmMouseStart) {\r\n                rmMouseStart();\r\n            }\r\n            rmTouchStart = rmMouseStart = undefined;\r\n            stop();\r\n        }\r\n        else {\r\n            if (!rmTouchStart) {\r\n                rmTouchStart = addEventListener(el, 'touchstart', handleTouchStart, options);\r\n            }\r\n            if (!rmMouseStart) {\r\n                rmMouseStart = addEventListener(el, 'mousedown', handleMouseDown, options);\r\n            }\r\n        }\r\n    };\r\n    const destroy = () => {\r\n        enable(false);\r\n        pointerUp = pointerMove = pointerDown = undefined;\r\n    };\r\n    return {\r\n        enable,\r\n        stop,\r\n        destroy,\r\n    };\r\n};\r\nconst getDocument = (node) => {\r\n    return node instanceof Document ? node : node.ownerDocument;\r\n};\r\n\r\nconst createPanRecognizer = (direction, thresh, maxAngle) => {\r\n    const radians = maxAngle * (Math.PI / 180);\r\n    const isDirX = direction === 'x';\r\n    const maxCosine = Math.cos(radians);\r\n    const threshold = thresh * thresh;\r\n    let startX = 0;\r\n    let startY = 0;\r\n    let dirty = false;\r\n    let isPan = 0;\r\n    return {\r\n        start(x, y) {\r\n            startX = x;\r\n            startY = y;\r\n            isPan = 0;\r\n            dirty = true;\r\n        },\r\n        detect(x, y) {\r\n            if (!dirty) {\r\n                return false;\r\n            }\r\n            const deltaX = x - startX;\r\n            const deltaY = y - startY;\r\n            const distance = deltaX * deltaX + deltaY * deltaY;\r\n            if (distance < threshold) {\r\n                return false;\r\n            }\r\n            const hypotenuse = Math.sqrt(distance);\r\n            const cosine = (isDirX ? deltaX : deltaY) / hypotenuse;\r\n            if (cosine > maxCosine) {\r\n                isPan = 1;\r\n            }\r\n            else if (cosine < -maxCosine) {\r\n                isPan = -1;\r\n            }\r\n            else {\r\n                isPan = 0;\r\n            }\r\n            dirty = false;\r\n            return true;\r\n        },\r\n        isGesture() {\r\n            return isPan !== 0;\r\n        },\r\n        getDirection() {\r\n            return isPan;\r\n        },\r\n    };\r\n};\r\n\r\n// TODO(FW-2832): types\r\nconst createGesture = (config) => {\r\n    let hasCapturedPan = false;\r\n    let hasStartedPan = false;\r\n    let hasFiredStart = true;\r\n    let isMoveQueued = false;\r\n    const finalConfig = Object.assign({ disableScroll: false, direction: 'x', gesturePriority: 0, passive: true, maxAngle: 40, threshold: 10 }, config);\r\n    const canStart = finalConfig.canStart;\r\n    const onWillStart = finalConfig.onWillStart;\r\n    const onStart = finalConfig.onStart;\r\n    const onEnd = finalConfig.onEnd;\r\n    const notCaptured = finalConfig.notCaptured;\r\n    const onMove = finalConfig.onMove;\r\n    const threshold = finalConfig.threshold;\r\n    const passive = finalConfig.passive;\r\n    const blurOnStart = finalConfig.blurOnStart;\r\n    const detail = {\r\n        type: 'pan',\r\n        startX: 0,\r\n        startY: 0,\r\n        startTime: 0,\r\n        currentX: 0,\r\n        currentY: 0,\r\n        velocityX: 0,\r\n        velocityY: 0,\r\n        deltaX: 0,\r\n        deltaY: 0,\r\n        currentTime: 0,\r\n        event: undefined,\r\n        data: undefined,\r\n    };\r\n    const pan = createPanRecognizer(finalConfig.direction, finalConfig.threshold, finalConfig.maxAngle);\r\n    const gesture = GESTURE_CONTROLLER.createGesture({\r\n        name: config.gestureName,\r\n        priority: config.gesturePriority,\r\n        disableScroll: config.disableScroll,\r\n    });\r\n    const pointerDown = (ev) => {\r\n        const timeStamp = now(ev);\r\n        if (hasStartedPan || !hasFiredStart) {\r\n            return false;\r\n        }\r\n        updateDetail(ev, detail);\r\n        detail.startX = detail.currentX;\r\n        detail.startY = detail.currentY;\r\n        detail.startTime = detail.currentTime = timeStamp;\r\n        detail.velocityX = detail.velocityY = detail.deltaX = detail.deltaY = 0;\r\n        detail.event = ev;\r\n        // Check if gesture can start\r\n        if (canStart && canStart(detail) === false) {\r\n            return false;\r\n        }\r\n        // Release fallback\r\n        gesture.release();\r\n        // Start gesture\r\n        if (!gesture.start()) {\r\n            return false;\r\n        }\r\n        hasStartedPan = true;\r\n        if (threshold === 0) {\r\n            return tryToCapturePan();\r\n        }\r\n        pan.start(detail.startX, detail.startY);\r\n        return true;\r\n    };\r\n    const pointerMove = (ev) => {\r\n        // fast path, if gesture is currently captured\r\n        // do minimum job to get user-land even dispatched\r\n        if (hasCapturedPan) {\r\n            if (!isMoveQueued && hasFiredStart) {\r\n                isMoveQueued = true;\r\n                calcGestureData(detail, ev);\r\n                requestAnimationFrame(fireOnMove);\r\n            }\r\n            return;\r\n        }\r\n        // gesture is currently being detected\r\n        calcGestureData(detail, ev);\r\n        if (pan.detect(detail.currentX, detail.currentY)) {\r\n            if (!pan.isGesture() || !tryToCapturePan()) {\r\n                abortGesture();\r\n            }\r\n        }\r\n    };\r\n    const fireOnMove = () => {\r\n        // Since fireOnMove is called inside a RAF, onEnd() might be called,\r\n        // we must double check hasCapturedPan\r\n        if (!hasCapturedPan) {\r\n            return;\r\n        }\r\n        isMoveQueued = false;\r\n        if (onMove) {\r\n            onMove(detail);\r\n        }\r\n    };\r\n    const tryToCapturePan = () => {\r\n        if (!gesture.capture()) {\r\n            return false;\r\n        }\r\n        hasCapturedPan = true;\r\n        hasFiredStart = false;\r\n        // reset start position since the real user-land event starts here\r\n        // If the pan detector threshold is big, not resetting the start position\r\n        // will cause a jump in the animation equal to the detector threshold.\r\n        // the array of positions used to calculate the gesture velocity does not\r\n        // need to be cleaned, more points in the positions array always results in a\r\n        // more accurate value of the velocity.\r\n        detail.startX = detail.currentX;\r\n        detail.startY = detail.currentY;\r\n        detail.startTime = detail.currentTime;\r\n        if (onWillStart) {\r\n            onWillStart(detail).then(fireOnStart);\r\n        }\r\n        else {\r\n            fireOnStart();\r\n        }\r\n        return true;\r\n    };\r\n    const blurActiveElement = () => {\r\n        if (typeof document !== 'undefined') {\r\n            const activeElement = document.activeElement;\r\n            if (activeElement === null || activeElement === void 0 ? void 0 : activeElement.blur) {\r\n                activeElement.blur();\r\n            }\r\n        }\r\n    };\r\n    const fireOnStart = () => {\r\n        if (blurOnStart) {\r\n            blurActiveElement();\r\n        }\r\n        if (onStart) {\r\n            onStart(detail);\r\n        }\r\n        hasFiredStart = true;\r\n    };\r\n    const reset = () => {\r\n        hasCapturedPan = false;\r\n        hasStartedPan = false;\r\n        isMoveQueued = false;\r\n        hasFiredStart = true;\r\n        gesture.release();\r\n    };\r\n    // END *************************\r\n    const pointerUp = (ev) => {\r\n        const tmpHasCaptured = hasCapturedPan;\r\n        const tmpHasFiredStart = hasFiredStart;\r\n        reset();\r\n        if (!tmpHasFiredStart) {\r\n            return;\r\n        }\r\n        calcGestureData(detail, ev);\r\n        // Try to capture press\r\n        if (tmpHasCaptured) {\r\n            if (onEnd) {\r\n                onEnd(detail);\r\n            }\r\n            return;\r\n        }\r\n        // Not captured any event\r\n        if (notCaptured) {\r\n            notCaptured(detail);\r\n        }\r\n    };\r\n    const pointerEvents = createPointerEvents(finalConfig.el, pointerDown, pointerMove, pointerUp, {\r\n        passive,\r\n    });\r\n    const abortGesture = () => {\r\n        reset();\r\n        pointerEvents.stop();\r\n        if (notCaptured) {\r\n            notCaptured(detail);\r\n        }\r\n    };\r\n    return {\r\n        enable(enable = true) {\r\n            if (!enable) {\r\n                if (hasCapturedPan) {\r\n                    pointerUp(undefined);\r\n                }\r\n                reset();\r\n            }\r\n            pointerEvents.enable(enable);\r\n        },\r\n        destroy() {\r\n            gesture.destroy();\r\n            pointerEvents.destroy();\r\n        },\r\n    };\r\n};\r\nconst calcGestureData = (detail, ev) => {\r\n    if (!ev) {\r\n        return;\r\n    }\r\n    const prevX = detail.currentX;\r\n    const prevY = detail.currentY;\r\n    const prevT = detail.currentTime;\r\n    updateDetail(ev, detail);\r\n    const currentX = detail.currentX;\r\n    const currentY = detail.currentY;\r\n    const timestamp = (detail.currentTime = now(ev));\r\n    const timeDelta = timestamp - prevT;\r\n    if (timeDelta > 0 && timeDelta < 100) {\r\n        const velocityX = (currentX - prevX) / timeDelta;\r\n        const velocityY = (currentY - prevY) / timeDelta;\r\n        detail.velocityX = velocityX * 0.7 + detail.velocityX * 0.3;\r\n        detail.velocityY = velocityY * 0.7 + detail.velocityY * 0.3;\r\n    }\r\n    detail.deltaX = currentX - detail.startX;\r\n    detail.deltaY = currentY - detail.startY;\r\n    detail.event = ev;\r\n};\r\nconst updateDetail = (ev, detail) => {\r\n    // get X coordinates for either a mouse click\r\n    // or a touch depending on the given event\r\n    let x = 0;\r\n    let y = 0;\r\n    if (ev) {\r\n        const changedTouches = ev.changedTouches;\r\n        if (changedTouches && changedTouches.length > 0) {\r\n            const touch = changedTouches[0];\r\n            x = touch.clientX;\r\n            y = touch.clientY;\r\n        }\r\n        else if (ev.pageX !== undefined) {\r\n            x = ev.pageX;\r\n            y = ev.pageY;\r\n        }\r\n    }\r\n    detail.currentX = x;\r\n    detail.currentY = y;\r\n};\r\nconst now = (ev) => {\r\n    return ev.timeStamp || Date.now();\r\n};\r\n\r\nexport { GESTURE_CONTROLLER, createGesture };\r\n"],
  "mappings": "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",
  "names": []
}
