{
  "version": 3,
  "sources": ["../../../../../../node_modules/@ionic/core/dist/esm/ion-menu_3.entry.js"],
  "sourcesContent": ["/*!\r\n * (C) Ionic http://ionicframework.com - MIT License\r\n */\r\nimport { r as registerInstance, d as createEvent, l as config, o as printIonError, e as getIonMode, a as isPlatform, h, j as Host, k as getElement } from './index-B_U9CtaY.js';\r\nimport { g as getTimeGivenProgression } from './cubic-bezier-hHmYLOfE.js';\r\nimport { o as getPresentedOverlay, B as BACKDROP, n as focusFirstDescendant, q as focusLastDescendant, G as GESTURE } from './overlays-8Y2rA-ps.js';\r\nimport { G as GESTURE_CONTROLLER } from './gesture-controller-BTEOs1at.js';\r\nimport { shouldUseCloseWatcher } from './hardware-back-button-DcH0BbDp.js';\r\nimport { o as isEndSide, i as inheritAriaAttributes, l as assert, e as clamp } from './helpers-1O4D2b7y.js';\r\nimport { m as menuController } from './index-D8sncTHY.js';\r\nimport { h as hostContext, c as createColorClasses } from './theme-DiVJyqlX.js';\r\nimport { u as menuOutline, v as menuSharp } from './index-BLV6ykCk.js';\r\nimport './index-ZjP4CjeZ.js';\r\nimport './framework-delegate-DxcnWic_.js';\r\nimport './animation-BWcUKtbn.js';\r\n\r\nconst menuIosCss = \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color, #fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{-webkit-transform:translateX(-9999px);transform:translateX(-9999px);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;top:0;bottom:0}:host(.menu-side-start) .menu-inner{inset-inline-start:0;inset-inline-end:auto}:host-context([dir=rtl]):host(.menu-side-start) .menu-inner,:host-context([dir=rtl]).menu-side-start .menu-inner{--ion-safe-area-right:unset;--ion-safe-area-left:0px}@supports selector(:dir(rtl)){:host(.menu-side-start:dir(rtl)) .menu-inner{--ion-safe-area-right:unset;--ion-safe-area-left:0px}}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;top:0;bottom:0}:host(.menu-side-end) .menu-inner{inset-inline-start:auto;inset-inline-end:0}:host-context([dir=rtl]):host(.menu-side-end) .menu-inner,:host-context([dir=rtl]).menu-side-end .menu-inner{--ion-safe-area-left:unset;--ion-safe-area-right:0px}@supports selector(:dir(rtl)){:host(.menu-side-end:dir(rtl)) .menu-inner{--ion-safe-area-left:unset;--ion-safe-area-right:0px}}ion-backdrop{display:none;opacity:0.01;z-index:-1}@media (max-width: 340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width, var(--width));min-width:var(--side-min-width, var(--min-width));max-width:var(--side-max-width, var(--max-width))}:host(.menu-pane-visible.split-pane-side){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none;box-shadow:none;z-index:0}:host(.menu-pane-visible.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}:host(.menu-pane-visible.split-pane-side){-ms-flex-order:-1;order:-1}:host(.menu-pane-visible.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none;transform:none;-webkit-box-shadow:none;box-shadow:none}:host(.menu-pane-visible) ion-backdrop{display:hidden !important}:host(.menu-pane-visible.split-pane-side){-webkit-border-start:0;border-inline-start:0;-webkit-border-end:var(--border);border-inline-end:var(--border);border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.menu-pane-visible.split-pane-side[side=end]){-webkit-border-start:var(--border);border-inline-start:var(--border);-webkit-border-end:0;border-inline-end:0;border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.menu-type-push){z-index:1000}:host(.menu-type-push) .show-backdrop{display:block}\";\r\n\r\nconst menuMdCss = \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color, #fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{-webkit-transform:translateX(-9999px);transform:translateX(-9999px);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;top:0;bottom:0}:host(.menu-side-start) .menu-inner{inset-inline-start:0;inset-inline-end:auto}:host-context([dir=rtl]):host(.menu-side-start) .menu-inner,:host-context([dir=rtl]).menu-side-start .menu-inner{--ion-safe-area-right:unset;--ion-safe-area-left:0px}@supports selector(:dir(rtl)){:host(.menu-side-start:dir(rtl)) .menu-inner{--ion-safe-area-right:unset;--ion-safe-area-left:0px}}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;top:0;bottom:0}:host(.menu-side-end) .menu-inner{inset-inline-start:auto;inset-inline-end:0}:host-context([dir=rtl]):host(.menu-side-end) .menu-inner,:host-context([dir=rtl]).menu-side-end .menu-inner{--ion-safe-area-left:unset;--ion-safe-area-right:0px}@supports selector(:dir(rtl)){:host(.menu-side-end:dir(rtl)) .menu-inner{--ion-safe-area-left:unset;--ion-safe-area-right:0px}}ion-backdrop{display:none;opacity:0.01;z-index:-1}@media (max-width: 340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width, var(--width));min-width:var(--side-min-width, var(--min-width));max-width:var(--side-max-width, var(--max-width))}:host(.menu-pane-visible.split-pane-side){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none;box-shadow:none;z-index:0}:host(.menu-pane-visible.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}:host(.menu-pane-visible.split-pane-side){-ms-flex-order:-1;order:-1}:host(.menu-pane-visible.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none;transform:none;-webkit-box-shadow:none;box-shadow:none}:host(.menu-pane-visible) ion-backdrop{display:hidden !important}:host(.menu-pane-visible.split-pane-side){-webkit-border-start:0;border-inline-start:0;-webkit-border-end:var(--border);border-inline-end:var(--border);border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.menu-pane-visible.split-pane-side[side=end]){-webkit-border-start:var(--border);border-inline-start:var(--border);-webkit-border-end:0;border-inline-end:0;border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.menu-type-overlay) .menu-inner{-webkit-box-shadow:4px 0px 16px rgba(0, 0, 0, 0.18);box-shadow:4px 0px 16px rgba(0, 0, 0, 0.18)}\";\r\n\r\nconst iosEasing = 'cubic-bezier(0.32,0.72,0,1)';\r\nconst mdEasing = 'cubic-bezier(0.0,0.0,0.2,1)';\r\nconst iosEasingReverse = 'cubic-bezier(1, 0, 0.68, 0.28)';\r\nconst mdEasingReverse = 'cubic-bezier(0.4, 0, 0.6, 1)';\r\nconst Menu = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.ionWillOpen = createEvent(this, \"ionWillOpen\", 7);\r\n        this.ionWillClose = createEvent(this, \"ionWillClose\", 7);\r\n        this.ionDidOpen = createEvent(this, \"ionDidOpen\", 7);\r\n        this.ionDidClose = createEvent(this, \"ionDidClose\", 7);\r\n        this.ionMenuChange = createEvent(this, \"ionMenuChange\", 7);\r\n        this.lastOnEnd = 0;\r\n        this.blocker = GESTURE_CONTROLLER.createBlocker({ disableScroll: true });\r\n        this.didLoad = false;\r\n        /**\r\n         * Flag used to determine if an open/close\r\n         * operation was cancelled. For example, if\r\n         * an app calls \"menu.open\" then disables the menu\r\n         * part way through the animation, then this would\r\n         * be considered a cancelled operation.\r\n         */\r\n        this.operationCancelled = false;\r\n        this.isAnimating = false;\r\n        this._isOpen = false;\r\n        this.inheritedAttributes = {};\r\n        this.handleFocus = (ev) => {\r\n            /**\r\n             * Overlays have their own focus trapping listener\r\n             * so we do not want the two listeners to conflict\r\n             * with each other. If the top-most overlay that is\r\n             * open does not contain this ion-menu, then ion-menu's\r\n             * focus trapping should not run.\r\n             */\r\n            const lastOverlay = getPresentedOverlay(document);\r\n            if (lastOverlay && !lastOverlay.contains(this.el)) {\r\n                return;\r\n            }\r\n            this.trapKeyboardFocus(ev, document);\r\n        };\r\n        /**\r\n         * If true, then the menu should be\r\n         * visible within a split pane.\r\n         * If false, then the menu is hidden.\r\n         * However, the menu-button/menu-toggle\r\n         * components can be used to open the\r\n         * menu.\r\n         */\r\n        this.isPaneVisible = false;\r\n        this.isEndSide = false;\r\n        /**\r\n         * If `true`, the menu is disabled.\r\n         */\r\n        this.disabled = false;\r\n        /**\r\n         * Which side of the view the menu should be placed.\r\n         */\r\n        this.side = 'start';\r\n        /**\r\n         * If `true`, swiping the menu is enabled.\r\n         */\r\n        this.swipeGesture = true;\r\n        /**\r\n         * The edge threshold for dragging the menu open.\r\n         * If a drag/swipe happens over this value, the menu is not triggered.\r\n         */\r\n        this.maxEdgeStart = 50;\r\n    }\r\n    typeChanged(type, oldType) {\r\n        const contentEl = this.contentEl;\r\n        if (contentEl) {\r\n            if (oldType !== undefined) {\r\n                contentEl.classList.remove(`menu-content-${oldType}`);\r\n            }\r\n            contentEl.classList.add(`menu-content-${type}`);\r\n            contentEl.removeAttribute('style');\r\n        }\r\n        if (this.menuInnerEl) {\r\n            // Remove effects of previous animations\r\n            this.menuInnerEl.removeAttribute('style');\r\n        }\r\n        this.animation = undefined;\r\n    }\r\n    disabledChanged() {\r\n        this.updateState();\r\n        this.ionMenuChange.emit({\r\n            disabled: this.disabled,\r\n            open: this._isOpen,\r\n        });\r\n    }\r\n    sideChanged() {\r\n        this.isEndSide = isEndSide(this.side);\r\n        /**\r\n         * Menu direction animation is calculated based on the document direction.\r\n         * If the document direction changes, we need to create a new animation.\r\n         */\r\n        this.animation = undefined;\r\n    }\r\n    swipeGestureChanged() {\r\n        this.updateState();\r\n    }\r\n    async connectedCallback() {\r\n        // TODO: connectedCallback is fired in CE build\r\n        // before WC is defined. This needs to be fixed in Stencil.\r\n        if (typeof customElements !== 'undefined' && customElements != null) {\r\n            await customElements.whenDefined('ion-menu');\r\n        }\r\n        if (this.type === undefined) {\r\n            this.type = config.get('menuType', 'overlay');\r\n        }\r\n        const content = this.contentId !== undefined ? document.getElementById(this.contentId) : null;\r\n        if (content === null) {\r\n            printIonError('[ion-menu] - Must have a \"content\" element to listen for drag events on.');\r\n            return;\r\n        }\r\n        if (this.el.contains(content)) {\r\n            printIonError(`[ion-menu] - The \"contentId\" should refer to the main view's ion-content, not the ion-content inside of the ion-menu.`);\r\n        }\r\n        this.contentEl = content;\r\n        // add menu's content classes\r\n        content.classList.add('menu-content');\r\n        this.typeChanged(this.type, undefined);\r\n        this.sideChanged();\r\n        // register this menu with the app's menu controller\r\n        menuController._register(this);\r\n        this.menuChanged();\r\n        this.gesture = (await import('./index-CfgBF1SE.js')).createGesture({\r\n            el: document,\r\n            gestureName: 'menu-swipe',\r\n            gesturePriority: 30,\r\n            threshold: 10,\r\n            blurOnStart: true,\r\n            canStart: (ev) => this.canStart(ev),\r\n            onWillStart: () => this.onWillStart(),\r\n            onStart: () => this.onStart(),\r\n            onMove: (ev) => this.onMove(ev),\r\n            onEnd: (ev) => this.onEnd(ev),\r\n        });\r\n        this.updateState();\r\n    }\r\n    componentWillLoad() {\r\n        this.inheritedAttributes = inheritAriaAttributes(this.el);\r\n    }\r\n    async componentDidLoad() {\r\n        this.didLoad = true;\r\n        /**\r\n         * A menu inside of a split pane is assumed\r\n         * to be a side pane.\r\n         *\r\n         * When the menu is loaded it needs to\r\n         * see if it should be considered visible inside\r\n         * of the split pane. If the split pane is\r\n         * hidden then the menu should be too.\r\n         */\r\n        const splitPane = this.el.closest('ion-split-pane');\r\n        if (splitPane !== null) {\r\n            this.isPaneVisible = await splitPane.isVisible();\r\n        }\r\n        this.menuChanged();\r\n        this.updateState();\r\n    }\r\n    menuChanged() {\r\n        /**\r\n         * Inform dependent components such as ion-menu-button\r\n         * that the menu is ready. Note that we only want to do this\r\n         * once the menu has been rendered which is why we check for didLoad.\r\n         */\r\n        if (this.didLoad) {\r\n            this.ionMenuChange.emit({ disabled: this.disabled, open: this._isOpen });\r\n        }\r\n    }\r\n    async disconnectedCallback() {\r\n        /**\r\n         * The menu should be closed when it is\r\n         * unmounted from the DOM.\r\n         * This is an async call, so we need to wait for\r\n         * this to finish otherwise contentEl\r\n         * will not have MENU_CONTENT_OPEN removed.\r\n         */\r\n        await this.close(false);\r\n        this.blocker.destroy();\r\n        menuController._unregister(this);\r\n        if (this.animation) {\r\n            this.animation.destroy();\r\n        }\r\n        if (this.gesture) {\r\n            this.gesture.destroy();\r\n            this.gesture = undefined;\r\n        }\r\n        this.animation = undefined;\r\n        this.contentEl = undefined;\r\n    }\r\n    onSplitPaneChanged(ev) {\r\n        const closestSplitPane = this.el.closest('ion-split-pane');\r\n        if (closestSplitPane !== null && closestSplitPane === ev.target) {\r\n            this.isPaneVisible = ev.detail.visible;\r\n            this.updateState();\r\n        }\r\n    }\r\n    onBackdropClick(ev) {\r\n        // TODO(FW-2832): type (CustomEvent triggers errors which should be sorted)\r\n        if (this._isOpen && this.lastOnEnd < ev.timeStamp - 100) {\r\n            const shouldClose = ev.composedPath ? !ev.composedPath().includes(this.menuInnerEl) : false;\r\n            if (shouldClose) {\r\n                ev.preventDefault();\r\n                ev.stopPropagation();\r\n                this.close(undefined, BACKDROP);\r\n            }\r\n        }\r\n    }\r\n    onKeydown(ev) {\r\n        if (ev.key === 'Escape') {\r\n            this.close(undefined, BACKDROP);\r\n        }\r\n    }\r\n    /**\r\n     * Returns `true` is the menu is open.\r\n     */\r\n    isOpen() {\r\n        return Promise.resolve(this._isOpen);\r\n    }\r\n    /**\r\n     * Returns `true` if the menu is active.\r\n     *\r\n     * A menu is active when it can be opened or closed, meaning it's enabled\r\n     * and it's not part of a `ion-split-pane`.\r\n     */\r\n    isActive() {\r\n        return Promise.resolve(this._isActive());\r\n    }\r\n    /**\r\n     * Opens the menu. If the menu is already open or it can't be opened,\r\n     * it returns `false`.\r\n     *\r\n     * @param animated If `true`, the menu will animate when opening.\r\n     * If `false`, the menu will open instantly without animation.\r\n     * Defaults to `true`.\r\n     */\r\n    open(animated = true) {\r\n        return this.setOpen(true, animated);\r\n    }\r\n    /**\r\n     * Closes the menu. If the menu is already closed or it can't be closed,\r\n     * it returns `false`.\r\n     *\r\n     * @param animated If `true`, the menu will animate when closing. If `false`,\r\n     * the menu will close instantly without animation. Defaults to `true`.\r\n     * @param role The role of the element that is closing the menu.\r\n     * This can be useful in a button handler for determining which button was\r\n     * clicked to close the menu. Some examples include:\r\n     * `\"cancel\"`, `\"destructive\"`, `\"selected\"`, and `\"backdrop\"`.\r\n     */\r\n    close(animated = true, role) {\r\n        return this.setOpen(false, animated, role);\r\n    }\r\n    /**\r\n     * Toggles the menu. If the menu is already open, it will try to close,\r\n     * otherwise it will try to open it.\r\n     * If the operation can't be completed successfully, it returns `false`.\r\n     *\r\n     * @param animated If `true`, the menu will animate when opening/closing.\r\n     * If `false`, the menu will open/close instantly without animation.\r\n     * Defaults to `true`.\r\n     */\r\n    toggle(animated = true) {\r\n        return this.setOpen(!this._isOpen, animated);\r\n    }\r\n    /**\r\n     * Opens or closes the menu.\r\n     * If the operation can't be completed successfully, it returns `false`.\r\n     *\r\n     * @param shouldOpen If `true`, the menu will open. If `false`, the menu\r\n     * will close.\r\n     * @param animated If `true`, the menu will animate when opening/closing.\r\n     * If `false`, the menu will open/close instantly without animation.\r\n     * @param role The role of the element that is closing the menu.\r\n     */\r\n    setOpen(shouldOpen, animated = true, role) {\r\n        return menuController._setOpen(this, shouldOpen, animated, role);\r\n    }\r\n    trapKeyboardFocus(ev, doc) {\r\n        const target = ev.target;\r\n        if (!target) {\r\n            return;\r\n        }\r\n        /**\r\n         * If the target is inside the menu contents, let the browser\r\n         * focus as normal and keep a log of the last focused element.\r\n         */\r\n        if (this.el.contains(target)) {\r\n            this.lastFocus = target;\r\n        }\r\n        else {\r\n            /**\r\n             * Otherwise, we are about to have focus go out of the menu.\r\n             * Wrap the focus to either the first or last element.\r\n             */\r\n            const { el } = this;\r\n            /**\r\n             * Once we call `focusFirstDescendant`, another focus event\r\n             * will fire, which will cause `lastFocus` to be updated\r\n             * before we can run the code after that. We cache the value\r\n             * here to avoid that.\r\n             */\r\n            focusFirstDescendant(el);\r\n            /**\r\n             * If the cached last focused element is the same as the now-\r\n             * active element, that means the user was on the first element\r\n             * already and pressed Shift + Tab, so we need to wrap to the\r\n             * last descendant.\r\n             */\r\n            if (this.lastFocus === doc.activeElement) {\r\n                focusLastDescendant(el);\r\n            }\r\n        }\r\n    }\r\n    async _setOpen(shouldOpen, animated = true, role) {\r\n        // If the menu is disabled or it is currently being animated, let's do nothing\r\n        if (!this._isActive() || this.isAnimating || shouldOpen === this._isOpen) {\r\n            return false;\r\n        }\r\n        this.beforeAnimation(shouldOpen, role);\r\n        await this.loadAnimation();\r\n        await this.startAnimation(shouldOpen, animated);\r\n        /**\r\n         * If the animation was cancelled then\r\n         * return false because the operation\r\n         * did not succeed.\r\n         */\r\n        if (this.operationCancelled) {\r\n            this.operationCancelled = false;\r\n            return false;\r\n        }\r\n        this.afterAnimation(shouldOpen, role);\r\n        return true;\r\n    }\r\n    async loadAnimation() {\r\n        // Menu swipe animation takes the menu's inner width as parameter,\r\n        // If `offsetWidth` changes, we need to create a new animation.\r\n        const width = this.menuInnerEl.offsetWidth;\r\n        /**\r\n         * Menu direction animation is calculated based on the document direction.\r\n         * If the document direction changes, we need to create a new animation.\r\n         */\r\n        const isEndSide$1 = isEndSide(this.side);\r\n        if (width === this.width && this.animation !== undefined && isEndSide$1 === this.isEndSide) {\r\n            return;\r\n        }\r\n        this.width = width;\r\n        this.isEndSide = isEndSide$1;\r\n        // Destroy existing animation\r\n        if (this.animation) {\r\n            this.animation.destroy();\r\n            this.animation = undefined;\r\n        }\r\n        // Create new animation\r\n        const animation = (this.animation = await menuController._createAnimation(this.type, this));\r\n        if (!config.getBoolean('animated', true)) {\r\n            animation.duration(0);\r\n        }\r\n        animation.fill('both');\r\n    }\r\n    async startAnimation(shouldOpen, animated) {\r\n        const isReversed = !shouldOpen;\r\n        const mode = getIonMode(this);\r\n        const easing = mode === 'ios' ? iosEasing : mdEasing;\r\n        const easingReverse = mode === 'ios' ? iosEasingReverse : mdEasingReverse;\r\n        const ani = this.animation\r\n            .direction(isReversed ? 'reverse' : 'normal')\r\n            .easing(isReversed ? easingReverse : easing);\r\n        if (animated) {\r\n            await ani.play();\r\n        }\r\n        else {\r\n            ani.play({ sync: true });\r\n        }\r\n        /**\r\n         * We run this after the play invocation\r\n         * instead of using ani.onFinish so that\r\n         * multiple onFinish callbacks do not get\r\n         * run if an animation is played, stopped,\r\n         * and then played again.\r\n         */\r\n        if (ani.getDirection() === 'reverse') {\r\n            ani.direction('normal');\r\n        }\r\n    }\r\n    _isActive() {\r\n        return !this.disabled && !this.isPaneVisible;\r\n    }\r\n    canSwipe() {\r\n        return this.swipeGesture && !this.isAnimating && this._isActive();\r\n    }\r\n    canStart(detail) {\r\n        // Do not allow swipe gesture if a modal is open\r\n        const isModalPresented = !!document.querySelector('ion-modal.show-modal');\r\n        if (isModalPresented || !this.canSwipe()) {\r\n            return false;\r\n        }\r\n        if (this._isOpen) {\r\n            return true;\r\n        }\r\n        else if (menuController._getOpenSync()) {\r\n            return false;\r\n        }\r\n        return checkEdgeSide(window, detail.currentX, this.isEndSide, this.maxEdgeStart);\r\n    }\r\n    onWillStart() {\r\n        this.beforeAnimation(!this._isOpen, GESTURE);\r\n        return this.loadAnimation();\r\n    }\r\n    onStart() {\r\n        if (!this.isAnimating || !this.animation) {\r\n            assert(false, 'isAnimating has to be true');\r\n            return;\r\n        }\r\n        // the cloned animation should not use an easing curve during seek\r\n        this.animation.progressStart(true, this._isOpen ? 1 : 0);\r\n    }\r\n    onMove(detail) {\r\n        if (!this.isAnimating || !this.animation) {\r\n            assert(false, 'isAnimating has to be true');\r\n            return;\r\n        }\r\n        const delta = computeDelta(detail.deltaX, this._isOpen, this.isEndSide);\r\n        const stepValue = delta / this.width;\r\n        this.animation.progressStep(this._isOpen ? 1 - stepValue : stepValue);\r\n    }\r\n    onEnd(detail) {\r\n        if (!this.isAnimating || !this.animation) {\r\n            assert(false, 'isAnimating has to be true');\r\n            return;\r\n        }\r\n        const isOpen = this._isOpen;\r\n        const isEndSide = this.isEndSide;\r\n        const delta = computeDelta(detail.deltaX, isOpen, isEndSide);\r\n        const width = this.width;\r\n        const stepValue = delta / width;\r\n        const velocity = detail.velocityX;\r\n        const z = width / 2.0;\r\n        const shouldCompleteRight = velocity >= 0 && (velocity > 0.2 || detail.deltaX > z);\r\n        const shouldCompleteLeft = velocity <= 0 && (velocity < -0.2 || detail.deltaX < -z);\r\n        const shouldComplete = isOpen\r\n            ? isEndSide\r\n                ? shouldCompleteRight\r\n                : shouldCompleteLeft\r\n            : isEndSide\r\n                ? shouldCompleteLeft\r\n                : shouldCompleteRight;\r\n        let shouldOpen = !isOpen && shouldComplete;\r\n        if (isOpen && !shouldComplete) {\r\n            shouldOpen = true;\r\n        }\r\n        this.lastOnEnd = detail.currentTime;\r\n        // Account for rounding errors in JS\r\n        let newStepValue = shouldComplete ? 0.001 : -1e-3;\r\n        /**\r\n         * stepValue can sometimes return a negative\r\n         * value, but you can't have a negative time value\r\n         * for the cubic bezier curve (at least with web animations)\r\n         */\r\n        const adjustedStepValue = stepValue < 0 ? 0.01 : stepValue;\r\n        /**\r\n         * Animation will be reversed here, so need to\r\n         * reverse the easing curve as well\r\n         *\r\n         * Additionally, we need to account for the time relative\r\n         * to the new easing curve, as `stepValue` is going to be given\r\n         * in terms of a linear curve.\r\n         */\r\n        newStepValue +=\r\n            getTimeGivenProgression([0, 0], [0.4, 0], [0.6, 1], [1, 1], clamp(0, adjustedStepValue, 0.9999))[0] || 0;\r\n        const playTo = this._isOpen ? !shouldComplete : shouldComplete;\r\n        this.animation\r\n            .easing('cubic-bezier(0.4, 0.0, 0.6, 1)')\r\n            .onFinish(() => this.afterAnimation(shouldOpen, GESTURE), { oneTimeCallback: true })\r\n            .progressEnd(playTo ? 1 : 0, this._isOpen ? 1 - newStepValue : newStepValue, 300);\r\n    }\r\n    beforeAnimation(shouldOpen, role) {\r\n        assert(!this.isAnimating, '_before() should not be called while animating');\r\n        /**\r\n         * When the menu is presented on an Android device, TalkBack's focus rings\r\n         * may appear in the wrong position due to the transition (specifically\r\n         * `transform` styles). This occurs because the focus rings are initially\r\n         * displayed at the starting position of the elements before the transition\r\n         * begins. This workaround ensures the focus rings do not appear in the\r\n         * incorrect location.\r\n         *\r\n         * If this solution is applied to iOS devices, then it leads to a bug where\r\n         * the overlays cannot be accessed by screen readers. This is due to\r\n         * VoiceOver not being able to update the accessibility tree when the\r\n         * `aria-hidden` is removed.\r\n         */\r\n        if (isPlatform('android')) {\r\n            this.el.setAttribute('aria-hidden', 'true');\r\n        }\r\n        // this places the menu into the correct location before it animates in\r\n        // this css class doesn't actually kick off any animations\r\n        this.el.classList.add(SHOW_MENU);\r\n        /**\r\n         * We add a tabindex here so that focus trapping\r\n         * still works even if the menu does not have\r\n         * any focusable elements slotted inside. The\r\n         * focus trapping utility will fallback to focusing\r\n         * the menu so focus does not leave when the menu\r\n         * is open.\r\n         */\r\n        this.el.setAttribute('tabindex', '0');\r\n        if (this.backdropEl) {\r\n            this.backdropEl.classList.add(SHOW_BACKDROP);\r\n        }\r\n        // add css class and hide content behind menu from screen readers\r\n        if (this.contentEl) {\r\n            this.contentEl.classList.add(MENU_CONTENT_OPEN);\r\n            /**\r\n             * When the menu is open and overlaying the main\r\n             * content, the main content should not be announced\r\n             * by the screenreader as the menu is the main\r\n             * focus. This is useful with screenreaders that have\r\n             * \"read from top\" gestures that read the entire\r\n             * page from top to bottom when activated.\r\n             * This should be done before the animation starts\r\n             * so that users cannot accidentally scroll\r\n             * the content while dragging a menu open.\r\n             */\r\n            this.contentEl.setAttribute('aria-hidden', 'true');\r\n        }\r\n        this.blocker.block();\r\n        this.isAnimating = true;\r\n        if (shouldOpen) {\r\n            this.ionWillOpen.emit();\r\n        }\r\n        else {\r\n            this.ionWillClose.emit({ role });\r\n        }\r\n    }\r\n    afterAnimation(isOpen, role) {\r\n        var _a;\r\n        // keep opening/closing the menu disabled for a touch more yet\r\n        // only add listeners/css if it's enabled and isOpen\r\n        // and only remove listeners/css if it's not open\r\n        // emit opened/closed events\r\n        this._isOpen = isOpen;\r\n        this.isAnimating = false;\r\n        if (!this._isOpen) {\r\n            this.blocker.unblock();\r\n        }\r\n        if (isOpen) {\r\n            /**\r\n             * When the menu is presented on an Android device, TalkBack's focus rings\r\n             * may appear in the wrong position due to the transition (specifically\r\n             * `transform` styles). The menu is hidden from screen readers during the\r\n             * transition to prevent this. Once the transition is complete, the menu\r\n             * is shown again.\r\n             */\r\n            if (isPlatform('android')) {\r\n                this.el.removeAttribute('aria-hidden');\r\n            }\r\n            // emit open event\r\n            this.ionDidOpen.emit();\r\n            /**\r\n             * Move focus to the menu to prepare focus trapping, as long as\r\n             * it isn't already focused. Use the host element instead of the\r\n             * first descendant to avoid the scroll position jumping around.\r\n             */\r\n            const focusedMenu = (_a = document.activeElement) === null || _a === void 0 ? void 0 : _a.closest('ion-menu');\r\n            if (focusedMenu !== this.el) {\r\n                this.el.focus();\r\n            }\r\n            // start focus trapping\r\n            document.addEventListener('focus', this.handleFocus, true);\r\n        }\r\n        else {\r\n            this.el.removeAttribute('aria-hidden');\r\n            // remove css classes and unhide content from screen readers\r\n            this.el.classList.remove(SHOW_MENU);\r\n            /**\r\n             * Remove tabindex from the menu component\r\n             * so that is cannot be tabbed to.\r\n             */\r\n            this.el.removeAttribute('tabindex');\r\n            if (this.contentEl) {\r\n                this.contentEl.classList.remove(MENU_CONTENT_OPEN);\r\n                /**\r\n                 * Remove aria-hidden so screen readers\r\n                 * can announce the main content again\r\n                 * now that the menu is not the main focus.\r\n                 */\r\n                this.contentEl.removeAttribute('aria-hidden');\r\n            }\r\n            if (this.backdropEl) {\r\n                this.backdropEl.classList.remove(SHOW_BACKDROP);\r\n            }\r\n            if (this.animation) {\r\n                this.animation.stop();\r\n            }\r\n            // emit close event\r\n            this.ionDidClose.emit({ role });\r\n            // undo focus trapping so multiple menus don't collide\r\n            document.removeEventListener('focus', this.handleFocus, true);\r\n        }\r\n    }\r\n    updateState() {\r\n        const isActive = this._isActive();\r\n        if (this.gesture) {\r\n            this.gesture.enable(isActive && this.swipeGesture);\r\n        }\r\n        /**\r\n         * If the menu is disabled but it is still open\r\n         * then we should close the menu immediately.\r\n         * Additionally, if the menu is in the process\r\n         * of animating {open, close} and the menu is disabled\r\n         * then it should still be closed immediately.\r\n         */\r\n        if (!isActive) {\r\n            /**\r\n             * It is possible to disable the menu while\r\n             * it is mid-animation. When this happens, we\r\n             * need to set the operationCancelled flag\r\n             * so that this._setOpen knows to return false\r\n             * and not run the \"afterAnimation\" callback.\r\n             */\r\n            if (this.isAnimating) {\r\n                this.operationCancelled = true;\r\n            }\r\n            /**\r\n             * If the menu is disabled then we should\r\n             * forcibly close the menu even if it is open.\r\n             */\r\n            this.afterAnimation(false, GESTURE);\r\n        }\r\n    }\r\n    render() {\r\n        const { type, disabled, el, isPaneVisible, inheritedAttributes, side } = this;\r\n        const mode = getIonMode(this);\r\n        /**\r\n         * If the Close Watcher is enabled then\r\n         * the ionBackButton listener in the menu controller\r\n         * will handle closing the menu when Escape is pressed.\r\n         */\r\n        return (h(Host, { key: 'a5c75aa40a34530b56ee3b98d706a5ac5ae300de', onKeyDown: shouldUseCloseWatcher() ? null : this.onKeydown, role: \"navigation\", \"aria-label\": inheritedAttributes['aria-label'] || 'menu', class: {\r\n                [mode]: true,\r\n                [`menu-type-${type}`]: true,\r\n                'menu-enabled': !disabled,\r\n                [`menu-side-${side}`]: true,\r\n                'menu-pane-visible': isPaneVisible,\r\n                'split-pane-side': hostContext('ion-split-pane', el),\r\n            } }, h(\"div\", { key: '3f5f70acd4d3ed6bb445122f4f01d73db738a75f', class: \"menu-inner\", part: \"container\", ref: (el) => (this.menuInnerEl = el) }, h(\"slot\", { key: '3161326c9330e7f7441299c428b87a91b31a83e9' })), h(\"ion-backdrop\", { key: '917b50f38489bdf03d0c642af8b4e4e172c7dc4c', ref: (el) => (this.backdropEl = el), class: \"menu-backdrop\", tappable: false, stopPropagation: false, part: \"backdrop\" })));\r\n    }\r\n    get el() { return getElement(this); }\r\n    static get watchers() { return {\r\n        \"type\": [\"typeChanged\"],\r\n        \"disabled\": [\"disabledChanged\"],\r\n        \"side\": [\"sideChanged\"],\r\n        \"swipeGesture\": [\"swipeGestureChanged\"]\r\n    }; }\r\n};\r\nconst computeDelta = (deltaX, isOpen, isEndSide) => {\r\n    return Math.max(0, isOpen !== isEndSide ? -deltaX : deltaX);\r\n};\r\nconst checkEdgeSide = (win, posX, isEndSide, maxEdgeStart) => {\r\n    if (isEndSide) {\r\n        return posX >= win.innerWidth - maxEdgeStart;\r\n    }\r\n    else {\r\n        return posX <= maxEdgeStart;\r\n    }\r\n};\r\nconst SHOW_MENU = 'show-menu';\r\nconst SHOW_BACKDROP = 'show-backdrop';\r\nconst MENU_CONTENT_OPEN = 'menu-content-open';\r\nMenu.style = {\r\n    ios: menuIosCss,\r\n    md: menuMdCss\r\n};\r\n\r\n// Given a menu, return whether or not the menu toggle should be visible\r\nconst updateVisibility = async (menu) => {\r\n    const menuEl = await menuController.get(menu);\r\n    return !!(menuEl && (await menuEl.isActive()));\r\n};\r\n\r\nconst menuButtonIosCss = \":host{--background:transparent;--color-focused:currentColor;--border-radius:initial;--padding-top:0;--padding-bottom:0;color:var(--color);text-align:center;text-decoration:none;text-overflow:ellipsis;text-transform:none;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none}.button-native{border-radius:var(--border-radius);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;min-height:inherit;border:0;outline:none;background:var(--background);line-height:1;cursor:pointer;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;min-height:inherit;z-index:1}ion-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;pointer-events:none}:host(.menu-button-hidden){display:none}:host(.menu-button-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity, 0)}}:host(.ion-color) .button-native{color:var(--ion-color-base)}:host(.in-toolbar:not(.in-toolbar-color)){color:var(--ion-toolbar-color, var(--color))}:host{--background-focused:currentColor;--background-focused-opacity:.1;--border-radius:4px;--color:var(--ion-color-primary, #0054e9);--padding-start:5px;--padding-end:5px;min-height:32px;font-size:clamp(31px, 1.9375rem, 38.13px)}:host(.ion-activated){opacity:0.4}@media (any-hover: hover){:host(:hover){opacity:0.6}}\";\r\n\r\nconst menuButtonMdCss = \":host{--background:transparent;--color-focused:currentColor;--border-radius:initial;--padding-top:0;--padding-bottom:0;color:var(--color);text-align:center;text-decoration:none;text-overflow:ellipsis;text-transform:none;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none}.button-native{border-radius:var(--border-radius);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;min-height:inherit;border:0;outline:none;background:var(--background);line-height:1;cursor:pointer;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;min-height:inherit;z-index:1}ion-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;pointer-events:none}:host(.menu-button-hidden){display:none}:host(.menu-button-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity, 0)}}:host(.ion-color) .button-native{color:var(--ion-color-base)}:host(.in-toolbar:not(.in-toolbar-color)){color:var(--ion-toolbar-color, var(--color))}:host{--background-focused:currentColor;--background-focused-opacity:.12;--background-hover:currentColor;--background-hover-opacity:.04;--border-radius:50%;--color:initial;--padding-start:8px;--padding-end:8px;width:3rem;height:3rem;font-size:1.5rem}:host(.ion-color.ion-focused)::after{background:var(--ion-color-base)}@media (any-hover: hover){:host(.ion-color:hover) .button-native::after{background:var(--ion-color-base)}}\";\r\n\r\nconst MenuButton = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.inheritedAttributes = {};\r\n        this.visible = false;\r\n        /**\r\n         * If `true`, the user cannot interact with the menu button.\r\n         */\r\n        this.disabled = false;\r\n        /**\r\n         * Automatically hides the menu button when the corresponding menu is not active\r\n         */\r\n        this.autoHide = true;\r\n        /**\r\n         * The type of the button.\r\n         */\r\n        this.type = 'button';\r\n        this.onClick = async () => {\r\n            return menuController.toggle(this.menu);\r\n        };\r\n    }\r\n    componentWillLoad() {\r\n        this.inheritedAttributes = inheritAriaAttributes(this.el);\r\n    }\r\n    componentDidLoad() {\r\n        this.visibilityChanged();\r\n    }\r\n    async visibilityChanged() {\r\n        this.visible = await updateVisibility(this.menu);\r\n    }\r\n    render() {\r\n        const { color, disabled, inheritedAttributes } = this;\r\n        const mode = getIonMode(this);\r\n        const menuIcon = config.get('menuIcon', mode === 'ios' ? menuOutline : menuSharp);\r\n        const hidden = this.autoHide && !this.visible;\r\n        const attrs = {\r\n            type: this.type,\r\n        };\r\n        const ariaLabel = inheritedAttributes['aria-label'] || 'menu';\r\n        return (h(Host, { key: '9f0f0e50d39a6872508220c58e64bb2092a0d7ef', onClick: this.onClick, \"aria-disabled\": disabled ? 'true' : null, \"aria-hidden\": hidden ? 'true' : null, class: createColorClasses(color, {\r\n                [mode]: true,\r\n                button: true, // ion-buttons target .button\r\n                'menu-button-hidden': hidden,\r\n                'menu-button-disabled': disabled,\r\n                'in-toolbar': hostContext('ion-toolbar', this.el),\r\n                'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\r\n                'ion-activatable': true,\r\n                'ion-focusable': true,\r\n            }) }, h(\"button\", Object.assign({ key: 'ffebf7083d23501839970059ef8e411b571de197' }, attrs, { disabled: disabled, class: \"button-native\", part: \"native\", \"aria-label\": ariaLabel }), h(\"span\", { key: 'cab0c1c763b3ce33ef11dba1d230f66126e59424', class: \"button-inner\" }, h(\"slot\", { key: 'ccfd2be8479b75b5c63e97e1ca7dfe203e9b36ee' }, h(\"ion-icon\", { key: 'ac254fe7f327b08f1ae3fcea89d5cf0e83c9a96c', part: \"icon\", icon: menuIcon, mode: mode, lazy: false, \"aria-hidden\": \"true\" }))), mode === 'md' && h(\"ion-ripple-effect\", { key: 'f0f17c4ca96e3eed3c1727ee00578d40af8f0115', type: \"unbounded\" }))));\r\n    }\r\n    get el() { return getElement(this); }\r\n};\r\nMenuButton.style = {\r\n    ios: menuButtonIosCss,\r\n    md: menuButtonMdCss\r\n};\r\n\r\nconst menuToggleCss = \":host(.menu-toggle-hidden){display:none}\";\r\n\r\nconst MenuToggle = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.visible = false;\r\n        /**\r\n         * Automatically hides the content when the corresponding menu is not active.\r\n         *\r\n         * By default, it's `true`. Change it to `false` in order to\r\n         * keep `ion-menu-toggle` always visible regardless the state of the menu.\r\n         */\r\n        this.autoHide = true;\r\n        this.onClick = () => {\r\n            return menuController.toggle(this.menu);\r\n        };\r\n    }\r\n    connectedCallback() {\r\n        this.visibilityChanged();\r\n    }\r\n    async visibilityChanged() {\r\n        this.visible = await updateVisibility(this.menu);\r\n    }\r\n    render() {\r\n        const mode = getIonMode(this);\r\n        const hidden = this.autoHide && !this.visible;\r\n        return (h(Host, { key: 'cd567114769a30bd3871ed5d15bf42aed39956e1', onClick: this.onClick, \"aria-hidden\": hidden ? 'true' : null, class: {\r\n                [mode]: true,\r\n                'menu-toggle-hidden': hidden,\r\n            } }, h(\"slot\", { key: '773d4cff95ca75f23578b1e1dca53c9933f28a33' })));\r\n    }\r\n};\r\nMenuToggle.style = menuToggleCss;\r\n\r\nexport { Menu as ion_menu, MenuButton as ion_menu_button, MenuToggle as ion_menu_toggle };\r\n"],
  "mappings": "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",
  "names": ["isEndSide", "el"]
}
