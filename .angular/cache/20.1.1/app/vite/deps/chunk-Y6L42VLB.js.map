{
  "version": 3,
  "sources": ["../../../../../../node_modules/@ionic/core/dist/esm/keyboard-CUw4ekVy.js"],
  "sourcesContent": ["/*!\r\n * (C) Ionic http://ionicframework.com - MIT License\r\n */\r\nimport { g as getCapacitor } from './capacitor-CFERIeaU.js';\r\n\r\nvar ExceptionCode;\r\n(function (ExceptionCode) {\r\n    /**\r\n     * API is not implemented.\r\n     *\r\n     * This usually means the API can't be used because it is not implemented for\r\n     * the current platform.\r\n     */\r\n    ExceptionCode[\"Unimplemented\"] = \"UNIMPLEMENTED\";\r\n    /**\r\n     * API is not available.\r\n     *\r\n     * This means the API can't be used right now because:\r\n     *   - it is currently missing a prerequisite, such as network connectivity\r\n     *   - it requires a particular platform or browser version\r\n     */\r\n    ExceptionCode[\"Unavailable\"] = \"UNAVAILABLE\";\r\n})(ExceptionCode || (ExceptionCode = {}));\r\n\r\nvar KeyboardResize;\r\n(function (KeyboardResize) {\r\n    /**\r\n     * Only the `body` HTML element will be resized.\r\n     * Relative units are not affected, because the viewport does not change.\r\n     *\r\n     * @since 1.0.0\r\n     */\r\n    KeyboardResize[\"Body\"] = \"body\";\r\n    /**\r\n     * Only the `ion-app` HTML element will be resized.\r\n     * Use it only for Ionic Framework apps.\r\n     *\r\n     * @since 1.0.0\r\n     */\r\n    KeyboardResize[\"Ionic\"] = \"ionic\";\r\n    /**\r\n     * The whole native Web View will be resized when the keyboard shows/hides.\r\n     * This affects the `vh` relative unit.\r\n     *\r\n     * @since 1.0.0\r\n     */\r\n    KeyboardResize[\"Native\"] = \"native\";\r\n    /**\r\n     * Neither the app nor the Web View are resized.\r\n     *\r\n     * @since 1.0.0\r\n     */\r\n    KeyboardResize[\"None\"] = \"none\";\r\n})(KeyboardResize || (KeyboardResize = {}));\r\nconst Keyboard = {\r\n    getEngine() {\r\n        const capacitor = getCapacitor();\r\n        if (capacitor === null || capacitor === void 0 ? void 0 : capacitor.isPluginAvailable('Keyboard')) {\r\n            return capacitor.Plugins.Keyboard;\r\n        }\r\n        return undefined;\r\n    },\r\n    getResizeMode() {\r\n        const engine = this.getEngine();\r\n        if (!(engine === null || engine === void 0 ? void 0 : engine.getResizeMode)) {\r\n            return Promise.resolve(undefined);\r\n        }\r\n        return engine.getResizeMode().catch((e) => {\r\n            if (e.code === ExceptionCode.Unimplemented) {\r\n                // If the native implementation is not available\r\n                // we treat it the same as if the plugin is not available.\r\n                return undefined;\r\n            }\r\n            throw e;\r\n        });\r\n    },\r\n};\r\n\r\nexport { Keyboard as K, KeyboardResize as a };\r\n"],
  "mappings": ";;;;;AAKA,IAAI;AAAA,CACH,SAAUA,gBAAe;AAOtB,EAAAA,eAAc,eAAe,IAAI;AAQjC,EAAAA,eAAc,aAAa,IAAI;AACnC,GAAG,kBAAkB,gBAAgB,CAAC,EAAE;AAExC,IAAI;AAAA,CACH,SAAUC,iBAAgB;AAOvB,EAAAA,gBAAe,MAAM,IAAI;AAOzB,EAAAA,gBAAe,OAAO,IAAI;AAO1B,EAAAA,gBAAe,QAAQ,IAAI;AAM3B,EAAAA,gBAAe,MAAM,IAAI;AAC7B,GAAG,mBAAmB,iBAAiB,CAAC,EAAE;AAC1C,IAAM,WAAW;AAAA,EACb,YAAY;AACR,UAAM,YAAY,aAAa;AAC/B,QAAI,cAAc,QAAQ,cAAc,SAAS,SAAS,UAAU,kBAAkB,UAAU,GAAG;AAC/F,aAAO,UAAU,QAAQ;AAAA,IAC7B;AACA,WAAO;AAAA,EACX;AAAA,EACA,gBAAgB;AACZ,UAAM,SAAS,KAAK,UAAU;AAC9B,QAAI,EAAE,WAAW,QAAQ,WAAW,SAAS,SAAS,OAAO,gBAAgB;AACzE,aAAO,QAAQ,QAAQ,MAAS;AAAA,IACpC;AACA,WAAO,OAAO,cAAc,EAAE,MAAM,CAAC,MAAM;AACvC,UAAI,EAAE,SAAS,cAAc,eAAe;AAGxC,eAAO;AAAA,MACX;AACA,YAAM;AAAA,IACV,CAAC;AAAA,EACL;AACJ;",
  "names": ["ExceptionCode", "KeyboardResize"]
}
