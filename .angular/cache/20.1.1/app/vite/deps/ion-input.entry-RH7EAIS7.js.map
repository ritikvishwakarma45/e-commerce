{
  "version": 3,
  "sources": ["../../../../../../node_modules/@ionic/core/dist/esm/ion-input.entry.js"],
  "sourcesContent": ["/*!\r\n * (C) Ionic http://ionicframework.com - MIT License\r\n */\r\nimport { r as registerInstance, d as createEvent, n as forceUpdate, h, e as getIonMode, j as Host, k as getElement } from './index-B_U9CtaY.js';\r\nimport { c as createNotchController } from './notch-controller-C5LPspO8.js';\r\nimport { d as debounceEvent, i as inheritAriaAttributes, b as inheritAttributes, c as componentOnReady } from './helpers-1O4D2b7y.js';\r\nimport { c as createSlotMutationController, g as getCounterText } from './input.utils-zWijNCrx.js';\r\nimport { h as hostContext, c as createColorClasses } from './theme-DiVJyqlX.js';\r\nimport { b as closeCircle, d as closeSharp } from './index-BLV6ykCk.js';\r\nimport './index-ZjP4CjeZ.js';\r\n\r\nconst inputIosCss = \".sc-ion-input-ios-h{--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:var(--ion-placeholder-opacity, 0.6);--padding-top:0px;--padding-end:0px;--padding-bottom:0px;--padding-start:0px;--background:transparent;--color:initial;--border-style:solid;--highlight-color-focused:var(--ion-color-primary, #0054e9);--highlight-color-valid:var(--ion-color-success, #2dd55b);--highlight-color-invalid:var(--ion-color-danger, #c5000f);--highlight-color:var(--highlight-color-focused);display:block;position:relative;width:100%;min-height:44px;padding:0 !important;color:var(--color);font-family:var(--ion-font-family, inherit);z-index:2}ion-item[slot=start].sc-ion-input-ios-h,ion-item [slot=start].sc-ion-input-ios-h,ion-item[slot=end].sc-ion-input-ios-h,ion-item [slot=end].sc-ion-input-ios-h{width:auto}.ion-color.sc-ion-input-ios-h{--highlight-color-focused:var(--ion-color-base)}.input-label-placement-floating.sc-ion-input-ios-h,.input-label-placement-stacked.sc-ion-input-ios-h{min-height:56px}.native-input.sc-ion-input-ios{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:inline-block;position:relative;-ms-flex:1;flex:1;width:100%;max-width:100%;height:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:1}.native-input.sc-ion-input-ios::-webkit-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::-moz-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios:-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios:-webkit-autofill{background-color:transparent}.native-input.sc-ion-input-ios:invalid{-webkit-box-shadow:none;box-shadow:none}.native-input.sc-ion-input-ios::-ms-clear{display:none}.cloned-input.sc-ion-input-ios{top:0;bottom:0;position:absolute;pointer-events:none}.cloned-input.sc-ion-input-ios{inset-inline-start:0}.cloned-input.sc-ion-input-ios:disabled{opacity:1}.input-clear-icon.sc-ion-input-ios{-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;margin-top:auto;margin-bottom:auto;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;background-position:center;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:30px;height:30px;border:0;outline:none;background-color:transparent;background-repeat:no-repeat;color:var(--ion-color-step-600, var(--ion-text-color-step-400, #666666));visibility:hidden;-webkit-appearance:none;-moz-appearance:none;appearance:none}.in-item-color.sc-ion-input-ios-h .input-clear-icon.sc-ion-input-ios{color:inherit}.input-clear-icon.sc-ion-input-ios:focus{opacity:0.5}.has-value.sc-ion-input-ios-h .input-clear-icon.sc-ion-input-ios{visibility:visible}.input-wrapper.sc-ion-input-ios{-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);border-radius:var(--border-radius);display:-ms-flexbox;display:flex;position:relative;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:stretch;align-items:stretch;height:inherit;min-height:inherit;-webkit-transition:background-color 15ms linear;transition:background-color 15ms linear;background:var(--background);line-height:normal}.native-wrapper.sc-ion-input-ios{display:-ms-flexbox;display:flex;position:relative;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;width:100%}.ion-touched.ion-invalid.sc-ion-input-ios-h{--highlight-color:var(--highlight-color-invalid)}.ion-valid.sc-ion-input-ios-h{--highlight-color:var(--highlight-color-valid)}.input-bottom.sc-ion-input-ios{-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end);padding-top:5px;padding-bottom:0;display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;border-top:var(--border-width) var(--border-style) var(--border-color);font-size:0.75rem;white-space:normal}.has-focus.ion-valid.sc-ion-input-ios-h,.ion-touched.ion-invalid.sc-ion-input-ios-h{--border-color:var(--highlight-color)}.input-bottom.sc-ion-input-ios .error-text.sc-ion-input-ios{display:none;color:var(--highlight-color-invalid)}.input-bottom.sc-ion-input-ios .helper-text.sc-ion-input-ios{display:block;color:var(--ion-color-step-700, var(--ion-text-color-step-300, #4d4d4d))}.ion-touched.ion-invalid.sc-ion-input-ios-h .input-bottom.sc-ion-input-ios .error-text.sc-ion-input-ios{display:block}.ion-touched.ion-invalid.sc-ion-input-ios-h .input-bottom.sc-ion-input-ios .helper-text.sc-ion-input-ios{display:none}.input-bottom.sc-ion-input-ios .counter.sc-ion-input-ios{-webkit-margin-start:auto;margin-inline-start:auto;color:var(--ion-color-step-700, var(--ion-text-color-step-300, #4d4d4d));white-space:nowrap;-webkit-padding-start:16px;padding-inline-start:16px}.has-focus.sc-ion-input-ios-h input.sc-ion-input-ios{caret-color:var(--highlight-color)}.label-text-wrapper.sc-ion-input-ios{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;max-width:200px;-webkit-transition:color 150ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 150ms cubic-bezier(0.4, 0, 0.2, 1);transition:color 150ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 150ms cubic-bezier(0.4, 0, 0.2, 1);transition:color 150ms cubic-bezier(0.4, 0, 0.2, 1), transform 150ms cubic-bezier(0.4, 0, 0.2, 1);transition:color 150ms cubic-bezier(0.4, 0, 0.2, 1), transform 150ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 150ms cubic-bezier(0.4, 0, 0.2, 1);pointer-events:none}.label-text.sc-ion-input-ios,.sc-ion-input-ios-s>[slot=label]{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.label-text-wrapper-hidden.sc-ion-input-ios,.input-outline-notch-hidden.sc-ion-input-ios{display:none}.input-wrapper.sc-ion-input-ios input.sc-ion-input-ios{-webkit-transition:opacity 150ms cubic-bezier(0.4, 0, 0.2, 1);transition:opacity 150ms cubic-bezier(0.4, 0, 0.2, 1)}.input-label-placement-start.sc-ion-input-ios-h .input-wrapper.sc-ion-input-ios{-ms-flex-direction:row;flex-direction:row}.input-label-placement-start.sc-ion-input-ios-h .label-text-wrapper.sc-ion-input-ios{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px;margin-top:0;margin-bottom:0}.input-label-placement-end.sc-ion-input-ios-h .input-wrapper.sc-ion-input-ios{-ms-flex-direction:row-reverse;flex-direction:row-reverse}.input-label-placement-end.sc-ion-input-ios-h .label-text-wrapper.sc-ion-input-ios{-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:0;margin-inline-end:0;margin-top:0;margin-bottom:0}.input-label-placement-fixed.sc-ion-input-ios-h .label-text-wrapper.sc-ion-input-ios{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px;margin-top:0;margin-bottom:0}.input-label-placement-fixed.sc-ion-input-ios-h .label-text.sc-ion-input-ios{-ms-flex:0 0 100px;flex:0 0 100px;width:100px;min-width:100px;max-width:200px}.input-label-placement-stacked.sc-ion-input-ios-h .input-wrapper.sc-ion-input-ios,.input-label-placement-floating.sc-ion-input-ios-h .input-wrapper.sc-ion-input-ios{-ms-flex-direction:column;flex-direction:column;-ms-flex-align:start;align-items:start}.input-label-placement-stacked.sc-ion-input-ios-h .label-text-wrapper.sc-ion-input-ios,.input-label-placement-floating.sc-ion-input-ios-h .label-text-wrapper.sc-ion-input-ios{-webkit-transform-origin:left top;transform-origin:left top;max-width:100%;z-index:2}[dir=rtl].sc-ion-input-ios-h -no-combinator.input-label-placement-stacked.sc-ion-input-ios-h .label-text-wrapper.sc-ion-input-ios,[dir=rtl] .sc-ion-input-ios-h -no-combinator.input-label-placement-stacked.sc-ion-input-ios-h .label-text-wrapper.sc-ion-input-ios,[dir=rtl].input-label-placement-stacked.sc-ion-input-ios-h .label-text-wrapper.sc-ion-input-ios,[dir=rtl] .input-label-placement-stacked.sc-ion-input-ios-h .label-text-wrapper.sc-ion-input-ios,[dir=rtl].sc-ion-input-ios-h -no-combinator.input-label-placement-floating.sc-ion-input-ios-h .label-text-wrapper.sc-ion-input-ios,[dir=rtl] .sc-ion-input-ios-h -no-combinator.input-label-placement-floating.sc-ion-input-ios-h .label-text-wrapper.sc-ion-input-ios,[dir=rtl].input-label-placement-floating.sc-ion-input-ios-h .label-text-wrapper.sc-ion-input-ios,[dir=rtl] .input-label-placement-floating.sc-ion-input-ios-h .label-text-wrapper.sc-ion-input-ios{-webkit-transform-origin:right top;transform-origin:right top}@supports selector(:dir(rtl)){.input-label-placement-stacked.sc-ion-input-ios-h:dir(rtl) .label-text-wrapper.sc-ion-input-ios,.input-label-placement-floating.sc-ion-input-ios-h:dir(rtl) .label-text-wrapper.sc-ion-input-ios{-webkit-transform-origin:right top;transform-origin:right top}}.input-label-placement-stacked.sc-ion-input-ios-h input.sc-ion-input-ios,.input-label-placement-floating.sc-ion-input-ios-h input.sc-ion-input-ios{margin-left:0;margin-right:0;margin-top:1px;margin-bottom:0}.input-label-placement-floating.sc-ion-input-ios-h .label-text-wrapper.sc-ion-input-ios{-webkit-transform:translateY(100%) scale(1);transform:translateY(100%) scale(1)}.input-label-placement-floating.sc-ion-input-ios-h input.sc-ion-input-ios{opacity:0}.has-focus.input-label-placement-floating.sc-ion-input-ios-h input.sc-ion-input-ios,.has-value.input-label-placement-floating.sc-ion-input-ios-h input.sc-ion-input-ios{opacity:1}.label-floating.sc-ion-input-ios-h .label-text-wrapper.sc-ion-input-ios{-webkit-transform:translateY(50%) scale(0.75);transform:translateY(50%) scale(0.75);max-width:calc(100% / 0.75)}.sc-ion-input-ios-s>[slot=start]:last-of-type{-webkit-margin-end:16px;margin-inline-end:16px;-webkit-margin-start:0;margin-inline-start:0}.sc-ion-input-ios-s>[slot=end]:first-of-type{-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:0;margin-inline-end:0}.sc-ion-input-ios-h[disabled].sc-ion-input-ios-s>ion-input-password-toggle,.sc-ion-input-ios-h[disabled] .sc-ion-input-ios-s>ion-input-password-toggle,.sc-ion-input-ios-h[readonly].sc-ion-input-ios-s>ion-input-password-toggle,.sc-ion-input-ios-h[readonly] .sc-ion-input-ios-s>ion-input-password-toggle{visibility:hidden}.sc-ion-input-ios-h{--border-width:0.55px;--border-color:var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-250, var(--ion-background-color-step-250, #c8c7cc))));--highlight-height:0px;font-size:inherit}.input-clear-icon.sc-ion-input-ios ion-icon.sc-ion-input-ios{width:18px;height:18px}.input-disabled.sc-ion-input-ios-h{opacity:0.3}.sc-ion-input-ios-s>ion-button[slot=start].button-has-icon-only,.sc-ion-input-ios-s>ion-button[slot=end].button-has-icon-only{--border-radius:50%;--padding-start:0;--padding-end:0;--padding-top:0;--padding-bottom:0;aspect-ratio:1}\";\r\n\r\nconst inputMdCss = \".sc-ion-input-md-h{--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:var(--ion-placeholder-opacity, 0.6);--padding-top:0px;--padding-end:0px;--padding-bottom:0px;--padding-start:0px;--background:transparent;--color:initial;--border-style:solid;--highlight-color-focused:var(--ion-color-primary, #0054e9);--highlight-color-valid:var(--ion-color-success, #2dd55b);--highlight-color-invalid:var(--ion-color-danger, #c5000f);--highlight-color:var(--highlight-color-focused);display:block;position:relative;width:100%;min-height:44px;padding:0 !important;color:var(--color);font-family:var(--ion-font-family, inherit);z-index:2}ion-item[slot=start].sc-ion-input-md-h,ion-item [slot=start].sc-ion-input-md-h,ion-item[slot=end].sc-ion-input-md-h,ion-item [slot=end].sc-ion-input-md-h{width:auto}.ion-color.sc-ion-input-md-h{--highlight-color-focused:var(--ion-color-base)}.input-label-placement-floating.sc-ion-input-md-h,.input-label-placement-stacked.sc-ion-input-md-h{min-height:56px}.native-input.sc-ion-input-md{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:inline-block;position:relative;-ms-flex:1;flex:1;width:100%;max-width:100%;height:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:1}.native-input.sc-ion-input-md::-webkit-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md::-moz-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md:-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md::-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md::placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md:-webkit-autofill{background-color:transparent}.native-input.sc-ion-input-md:invalid{-webkit-box-shadow:none;box-shadow:none}.native-input.sc-ion-input-md::-ms-clear{display:none}.cloned-input.sc-ion-input-md{top:0;bottom:0;position:absolute;pointer-events:none}.cloned-input.sc-ion-input-md{inset-inline-start:0}.cloned-input.sc-ion-input-md:disabled{opacity:1}.input-clear-icon.sc-ion-input-md{-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;margin-top:auto;margin-bottom:auto;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;background-position:center;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:30px;height:30px;border:0;outline:none;background-color:transparent;background-repeat:no-repeat;color:var(--ion-color-step-600, var(--ion-text-color-step-400, #666666));visibility:hidden;-webkit-appearance:none;-moz-appearance:none;appearance:none}.in-item-color.sc-ion-input-md-h .input-clear-icon.sc-ion-input-md{color:inherit}.input-clear-icon.sc-ion-input-md:focus{opacity:0.5}.has-value.sc-ion-input-md-h .input-clear-icon.sc-ion-input-md{visibility:visible}.input-wrapper.sc-ion-input-md{-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);border-radius:var(--border-radius);display:-ms-flexbox;display:flex;position:relative;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:stretch;align-items:stretch;height:inherit;min-height:inherit;-webkit-transition:background-color 15ms linear;transition:background-color 15ms linear;background:var(--background);line-height:normal}.native-wrapper.sc-ion-input-md{display:-ms-flexbox;display:flex;position:relative;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;width:100%}.ion-touched.ion-invalid.sc-ion-input-md-h{--highlight-color:var(--highlight-color-invalid)}.ion-valid.sc-ion-input-md-h{--highlight-color:var(--highlight-color-valid)}.input-bottom.sc-ion-input-md{-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end);padding-top:5px;padding-bottom:0;display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;border-top:var(--border-width) var(--border-style) var(--border-color);font-size:0.75rem;white-space:normal}.has-focus.ion-valid.sc-ion-input-md-h,.ion-touched.ion-invalid.sc-ion-input-md-h{--border-color:var(--highlight-color)}.input-bottom.sc-ion-input-md .error-text.sc-ion-input-md{display:none;color:var(--highlight-color-invalid)}.input-bottom.sc-ion-input-md .helper-text.sc-ion-input-md{display:block;color:var(--ion-color-step-700, var(--ion-text-color-step-300, #4d4d4d))}.ion-touched.ion-invalid.sc-ion-input-md-h .input-bottom.sc-ion-input-md .error-text.sc-ion-input-md{display:block}.ion-touched.ion-invalid.sc-ion-input-md-h .input-bottom.sc-ion-input-md .helper-text.sc-ion-input-md{display:none}.input-bottom.sc-ion-input-md .counter.sc-ion-input-md{-webkit-margin-start:auto;margin-inline-start:auto;color:var(--ion-color-step-700, var(--ion-text-color-step-300, #4d4d4d));white-space:nowrap;-webkit-padding-start:16px;padding-inline-start:16px}.has-focus.sc-ion-input-md-h input.sc-ion-input-md{caret-color:var(--highlight-color)}.label-text-wrapper.sc-ion-input-md{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;max-width:200px;-webkit-transition:color 150ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 150ms cubic-bezier(0.4, 0, 0.2, 1);transition:color 150ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 150ms cubic-bezier(0.4, 0, 0.2, 1);transition:color 150ms cubic-bezier(0.4, 0, 0.2, 1), transform 150ms cubic-bezier(0.4, 0, 0.2, 1);transition:color 150ms cubic-bezier(0.4, 0, 0.2, 1), transform 150ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 150ms cubic-bezier(0.4, 0, 0.2, 1);pointer-events:none}.label-text.sc-ion-input-md,.sc-ion-input-md-s>[slot=label]{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.label-text-wrapper-hidden.sc-ion-input-md,.input-outline-notch-hidden.sc-ion-input-md{display:none}.input-wrapper.sc-ion-input-md input.sc-ion-input-md{-webkit-transition:opacity 150ms cubic-bezier(0.4, 0, 0.2, 1);transition:opacity 150ms cubic-bezier(0.4, 0, 0.2, 1)}.input-label-placement-start.sc-ion-input-md-h .input-wrapper.sc-ion-input-md{-ms-flex-direction:row;flex-direction:row}.input-label-placement-start.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px;margin-top:0;margin-bottom:0}.input-label-placement-end.sc-ion-input-md-h .input-wrapper.sc-ion-input-md{-ms-flex-direction:row-reverse;flex-direction:row-reverse}.input-label-placement-end.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md{-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:0;margin-inline-end:0;margin-top:0;margin-bottom:0}.input-label-placement-fixed.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px;margin-top:0;margin-bottom:0}.input-label-placement-fixed.sc-ion-input-md-h .label-text.sc-ion-input-md{-ms-flex:0 0 100px;flex:0 0 100px;width:100px;min-width:100px;max-width:200px}.input-label-placement-stacked.sc-ion-input-md-h .input-wrapper.sc-ion-input-md,.input-label-placement-floating.sc-ion-input-md-h .input-wrapper.sc-ion-input-md{-ms-flex-direction:column;flex-direction:column;-ms-flex-align:start;align-items:start}.input-label-placement-stacked.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md,.input-label-placement-floating.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md{-webkit-transform-origin:left top;transform-origin:left top;max-width:100%;z-index:2}[dir=rtl].sc-ion-input-md-h -no-combinator.input-label-placement-stacked.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md,[dir=rtl] .sc-ion-input-md-h -no-combinator.input-label-placement-stacked.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md,[dir=rtl].input-label-placement-stacked.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md,[dir=rtl] .input-label-placement-stacked.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md,[dir=rtl].sc-ion-input-md-h -no-combinator.input-label-placement-floating.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md,[dir=rtl] .sc-ion-input-md-h -no-combinator.input-label-placement-floating.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md,[dir=rtl].input-label-placement-floating.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md,[dir=rtl] .input-label-placement-floating.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md{-webkit-transform-origin:right top;transform-origin:right top}@supports selector(:dir(rtl)){.input-label-placement-stacked.sc-ion-input-md-h:dir(rtl) .label-text-wrapper.sc-ion-input-md,.input-label-placement-floating.sc-ion-input-md-h:dir(rtl) .label-text-wrapper.sc-ion-input-md{-webkit-transform-origin:right top;transform-origin:right top}}.input-label-placement-stacked.sc-ion-input-md-h input.sc-ion-input-md,.input-label-placement-floating.sc-ion-input-md-h input.sc-ion-input-md{margin-left:0;margin-right:0;margin-top:1px;margin-bottom:0}.input-label-placement-floating.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md{-webkit-transform:translateY(100%) scale(1);transform:translateY(100%) scale(1)}.input-label-placement-floating.sc-ion-input-md-h input.sc-ion-input-md{opacity:0}.has-focus.input-label-placement-floating.sc-ion-input-md-h input.sc-ion-input-md,.has-value.input-label-placement-floating.sc-ion-input-md-h input.sc-ion-input-md{opacity:1}.label-floating.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md{-webkit-transform:translateY(50%) scale(0.75);transform:translateY(50%) scale(0.75);max-width:calc(100% / 0.75)}.sc-ion-input-md-s>[slot=start]:last-of-type{-webkit-margin-end:16px;margin-inline-end:16px;-webkit-margin-start:0;margin-inline-start:0}.sc-ion-input-md-s>[slot=end]:first-of-type{-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:0;margin-inline-end:0}.sc-ion-input-md-h[disabled].sc-ion-input-md-s>ion-input-password-toggle,.sc-ion-input-md-h[disabled] .sc-ion-input-md-s>ion-input-password-toggle,.sc-ion-input-md-h[readonly].sc-ion-input-md-s>ion-input-password-toggle,.sc-ion-input-md-h[readonly] .sc-ion-input-md-s>ion-input-password-toggle{visibility:hidden}.input-fill-solid.sc-ion-input-md-h{--background:var(--ion-color-step-50, var(--ion-background-color-step-50, #f2f2f2));--border-color:var(--ion-color-step-500, var(--ion-background-color-step-500, gray));--border-radius:4px;--padding-start:16px;--padding-end:16px;min-height:56px}.input-fill-solid.sc-ion-input-md-h .input-wrapper.sc-ion-input-md{border-bottom:var(--border-width) var(--border-style) var(--border-color)}.has-focus.input-fill-solid.ion-valid.sc-ion-input-md-h,.input-fill-solid.ion-touched.ion-invalid.sc-ion-input-md-h{--border-color:var(--highlight-color)}.input-fill-solid.sc-ion-input-md-h .input-bottom.sc-ion-input-md{border-top:none}@media (any-hover: hover){.input-fill-solid.sc-ion-input-md-h:hover{--background:var(--ion-color-step-100, var(--ion-background-color-step-100, #e6e6e6));--border-color:var(--ion-color-step-750, var(--ion-background-color-step-750, #404040))}}.input-fill-solid.has-focus.sc-ion-input-md-h{--background:var(--ion-color-step-150, var(--ion-background-color-step-150, #d9d9d9));--border-color:var(--ion-color-step-750, var(--ion-background-color-step-750, #404040))}.input-fill-solid.sc-ion-input-md-h .input-wrapper.sc-ion-input-md{border-start-start-radius:var(--border-radius);border-start-end-radius:var(--border-radius);border-end-end-radius:0px;border-end-start-radius:0px}.label-floating.input-fill-solid.input-label-placement-floating.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md{max-width:calc(100% / 0.75)}.input-fill-outline.sc-ion-input-md-h{--border-color:var(--ion-color-step-300, var(--ion-background-color-step-300, #b3b3b3));--border-radius:4px;--padding-start:16px;--padding-end:16px;min-height:56px}.input-fill-outline.input-shape-round.sc-ion-input-md-h{--border-radius:28px;--padding-start:32px;--padding-end:32px}.has-focus.input-fill-outline.ion-valid.sc-ion-input-md-h,.input-fill-outline.ion-touched.ion-invalid.sc-ion-input-md-h{--border-color:var(--highlight-color)}@media (any-hover: hover){.input-fill-outline.sc-ion-input-md-h:hover{--border-color:var(--ion-color-step-750, var(--ion-background-color-step-750, #404040))}}.input-fill-outline.has-focus.sc-ion-input-md-h{--border-width:var(--highlight-height);--border-color:var(--highlight-color)}.input-fill-outline.sc-ion-input-md-h .input-bottom.sc-ion-input-md{border-top:none}.input-fill-outline.sc-ion-input-md-h .input-wrapper.sc-ion-input-md{border-bottom:none}.input-fill-outline.input-label-placement-stacked.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md,.input-fill-outline.input-label-placement-floating.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md{-webkit-transform-origin:left top;transform-origin:left top;position:absolute;max-width:calc(100% - var(--padding-start) - var(--padding-end))}[dir=rtl].sc-ion-input-md-h -no-combinator.input-fill-outline.input-label-placement-stacked.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md,[dir=rtl] .sc-ion-input-md-h -no-combinator.input-fill-outline.input-label-placement-stacked.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md,[dir=rtl].input-fill-outline.input-label-placement-stacked.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md,[dir=rtl] .input-fill-outline.input-label-placement-stacked.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md,[dir=rtl].sc-ion-input-md-h -no-combinator.input-fill-outline.input-label-placement-floating.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md,[dir=rtl] .sc-ion-input-md-h -no-combinator.input-fill-outline.input-label-placement-floating.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md,[dir=rtl].input-fill-outline.input-label-placement-floating.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md,[dir=rtl] .input-fill-outline.input-label-placement-floating.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md{-webkit-transform-origin:right top;transform-origin:right top}@supports selector(:dir(rtl)){.input-fill-outline.input-label-placement-stacked.sc-ion-input-md-h:dir(rtl) .label-text-wrapper.sc-ion-input-md,.input-fill-outline.input-label-placement-floating.sc-ion-input-md-h:dir(rtl) .label-text-wrapper.sc-ion-input-md{-webkit-transform-origin:right top;transform-origin:right top}}.input-fill-outline.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md{position:relative}.label-floating.input-fill-outline.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md{-webkit-transform:translateY(-32%) scale(0.75);transform:translateY(-32%) scale(0.75);margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;max-width:calc((100% - var(--padding-start) - var(--padding-end) - 8px) / 0.75)}.input-fill-outline.input-label-placement-stacked.sc-ion-input-md-h input.sc-ion-input-md,.input-fill-outline.input-label-placement-floating.sc-ion-input-md-h input.sc-ion-input-md{margin-left:0;margin-right:0;margin-top:6px;margin-bottom:6px}.input-fill-outline.sc-ion-input-md-h .input-outline-container.sc-ion-input-md{left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;width:100%;height:100%}.input-fill-outline.sc-ion-input-md-h .input-outline-start.sc-ion-input-md,.input-fill-outline.sc-ion-input-md-h .input-outline-end.sc-ion-input-md{pointer-events:none}.input-fill-outline.sc-ion-input-md-h .input-outline-start.sc-ion-input-md,.input-fill-outline.sc-ion-input-md-h .input-outline-notch.sc-ion-input-md,.input-fill-outline.sc-ion-input-md-h .input-outline-end.sc-ion-input-md{border-top:var(--border-width) var(--border-style) var(--border-color);border-bottom:var(--border-width) var(--border-style) var(--border-color)}.input-fill-outline.sc-ion-input-md-h .input-outline-notch.sc-ion-input-md{max-width:calc(100% - var(--padding-start) - var(--padding-end))}.input-fill-outline.sc-ion-input-md-h .notch-spacer.sc-ion-input-md{-webkit-padding-end:8px;padding-inline-end:8px;font-size:calc(1em * 0.75);opacity:0;pointer-events:none;-webkit-box-sizing:content-box;box-sizing:content-box}.input-fill-outline.sc-ion-input-md-h .input-outline-start.sc-ion-input-md{border-start-start-radius:var(--border-radius);border-start-end-radius:0px;border-end-end-radius:0px;border-end-start-radius:var(--border-radius);-webkit-border-start:var(--border-width) var(--border-style) var(--border-color);border-inline-start:var(--border-width) var(--border-style) var(--border-color);width:calc(var(--padding-start) - 4px)}.input-fill-outline.sc-ion-input-md-h .input-outline-end.sc-ion-input-md{-webkit-border-end:var(--border-width) var(--border-style) var(--border-color);border-inline-end:var(--border-width) var(--border-style) var(--border-color);border-start-start-radius:0px;border-start-end-radius:var(--border-radius);border-end-end-radius:var(--border-radius);border-end-start-radius:0px;-ms-flex-positive:1;flex-grow:1}.label-floating.input-fill-outline.sc-ion-input-md-h .input-outline-notch.sc-ion-input-md{border-top:none}.sc-ion-input-md-h{--border-width:1px;--border-color:var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, var(--ion-background-color-step-150, rgba(0, 0, 0, 0.13)))));--highlight-height:2px;font-size:inherit}.input-clear-icon.sc-ion-input-md ion-icon.sc-ion-input-md{width:22px;height:22px}.input-disabled.sc-ion-input-md-h{opacity:0.38}.has-focus.ion-valid.sc-ion-input-md-h,.ion-touched.ion-invalid.sc-ion-input-md-h{--border-color:var(--highlight-color)}.input-bottom.sc-ion-input-md .counter.sc-ion-input-md{letter-spacing:0.0333333333em}.input-label-placement-floating.has-focus.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md,.input-label-placement-stacked.has-focus.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md{color:var(--highlight-color)}.has-focus.input-label-placement-floating.ion-valid.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md,.input-label-placement-floating.ion-touched.ion-invalid.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md,.has-focus.input-label-placement-stacked.ion-valid.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md,.input-label-placement-stacked.ion-touched.ion-invalid.sc-ion-input-md-h .label-text-wrapper.sc-ion-input-md{color:var(--highlight-color)}.input-highlight.sc-ion-input-md{bottom:-1px;position:absolute;width:100%;height:var(--highlight-height);-webkit-transform:scale(0);transform:scale(0);-webkit-transition:-webkit-transform 200ms;transition:-webkit-transform 200ms;transition:transform 200ms;transition:transform 200ms, -webkit-transform 200ms;background:var(--highlight-color)}.input-highlight.sc-ion-input-md{inset-inline-start:0}.has-focus.sc-ion-input-md-h .input-highlight.sc-ion-input-md{-webkit-transform:scale(1);transform:scale(1)}.in-item.sc-ion-input-md-h .input-highlight.sc-ion-input-md{bottom:0}.in-item.sc-ion-input-md-h .input-highlight.sc-ion-input-md{inset-inline-start:0}.input-shape-round.sc-ion-input-md-h{--border-radius:16px}.sc-ion-input-md-s>ion-button[slot=start].button-has-icon-only,.sc-ion-input-md-s>ion-button[slot=end].button-has-icon-only{--border-radius:50%;--padding-start:8px;--padding-end:8px;--padding-top:8px;--padding-bottom:8px;aspect-ratio:1;min-height:40px}\";\r\n\r\nconst Input = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.ionInput = createEvent(this, \"ionInput\", 7);\r\n        this.ionChange = createEvent(this, \"ionChange\", 7);\r\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\r\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\r\n        this.inputId = `ion-input-${inputIds++}`;\r\n        this.helperTextId = `${this.inputId}-helper-text`;\r\n        this.errorTextId = `${this.inputId}-error-text`;\r\n        this.inheritedAttributes = {};\r\n        this.isComposing = false;\r\n        /**\r\n         * `true` if the input was cleared as a result of the user typing\r\n         * with `clearOnEdit` enabled.\r\n         *\r\n         * Resets when the input loses focus.\r\n         */\r\n        this.didInputClearOnEdit = false;\r\n        /**\r\n         * The `hasFocus` state ensures the focus class is\r\n         * added regardless of how the element is focused.\r\n         * The `ion-focused` class only applies when focused\r\n         * via tabbing, not by clicking.\r\n         * The `has-focus` logic was added to ensure the class\r\n         * is applied in both cases.\r\n         */\r\n        this.hasFocus = false;\r\n        /**\r\n         * Indicates whether and how the text value should be automatically capitalized as it is entered/edited by the user.\r\n         * Available options: `\"off\"`, `\"none\"`, `\"on\"`, `\"sentences\"`, `\"words\"`, `\"characters\"`.\r\n         */\r\n        this.autocapitalize = 'off';\r\n        /**\r\n         * Indicates whether the value of the control can be automatically completed by the browser.\r\n         */\r\n        this.autocomplete = 'off';\r\n        /**\r\n         * Whether auto correction should be enabled when the user is entering/editing the text value.\r\n         */\r\n        this.autocorrect = 'off';\r\n        /**\r\n         * Sets the [`autofocus` attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/autofocus) on the native input element.\r\n         *\r\n         * This may not be sufficient for the element to be focused on page load. See [managing focus](/docs/developing/managing-focus) for more information.\r\n         */\r\n        this.autofocus = false;\r\n        /**\r\n         * If `true`, a clear icon will appear in the input when there is a value. Clicking it clears the input.\r\n         */\r\n        this.clearInput = false;\r\n        /**\r\n         * If `true`, a character counter will display the ratio of characters used and the total character limit. Developers must also set the `maxlength` property for the counter to be calculated correctly.\r\n         */\r\n        this.counter = false;\r\n        /**\r\n         * If `true`, the user cannot interact with the input.\r\n         */\r\n        this.disabled = false;\r\n        /**\r\n         * Where to place the label relative to the input.\r\n         * `\"start\"`: The label will appear to the left of the input in LTR and to the right in RTL.\r\n         * `\"end\"`: The label will appear to the right of the input in LTR and to the left in RTL.\r\n         * `\"floating\"`: The label will appear smaller and above the input when the input is focused or it has a value. Otherwise it will appear on top of the input.\r\n         * `\"stacked\"`: The label will appear smaller and above the input regardless even when the input is blurred or has no value.\r\n         * `\"fixed\"`: The label has the same behavior as `\"start\"` except it also has a fixed width. Long text will be truncated with ellipses (\"...\").\r\n         */\r\n        this.labelPlacement = 'start';\r\n        /**\r\n         * The name of the control, which is submitted with the form data.\r\n         */\r\n        this.name = this.inputId;\r\n        /**\r\n         * If `true`, the user cannot modify the value.\r\n         */\r\n        this.readonly = false;\r\n        /**\r\n         * If `true`, the user must fill in a value before submitting a form.\r\n         */\r\n        this.required = false;\r\n        /**\r\n         * If `true`, the element will have its spelling and grammar checked.\r\n         */\r\n        this.spellcheck = false;\r\n        /**\r\n         * The type of control to display. The default type is text.\r\n         */\r\n        this.type = 'text';\r\n        /**\r\n         * The value of the input.\r\n         */\r\n        this.value = '';\r\n        this.onInput = (ev) => {\r\n            const input = ev.target;\r\n            if (input) {\r\n                this.value = input.value || '';\r\n            }\r\n            this.emitInputChange(ev);\r\n        };\r\n        this.onChange = (ev) => {\r\n            this.emitValueChange(ev);\r\n        };\r\n        this.onBlur = (ev) => {\r\n            this.hasFocus = false;\r\n            if (this.focusedValue !== this.value) {\r\n                /**\r\n                 * Emits the `ionChange` event when the input value\r\n                 * is different than the value when the input was focused.\r\n                 */\r\n                this.emitValueChange(ev);\r\n            }\r\n            this.didInputClearOnEdit = false;\r\n            this.ionBlur.emit(ev);\r\n        };\r\n        this.onFocus = (ev) => {\r\n            this.hasFocus = true;\r\n            this.focusedValue = this.value;\r\n            this.ionFocus.emit(ev);\r\n        };\r\n        this.onKeydown = (ev) => {\r\n            this.checkClearOnEdit(ev);\r\n        };\r\n        this.onCompositionStart = () => {\r\n            this.isComposing = true;\r\n        };\r\n        this.onCompositionEnd = () => {\r\n            this.isComposing = false;\r\n        };\r\n        this.clearTextInput = (ev) => {\r\n            if (this.clearInput && !this.readonly && !this.disabled && ev) {\r\n                ev.preventDefault();\r\n                ev.stopPropagation();\r\n                // Attempt to focus input again after pressing clear button\r\n                this.setFocus();\r\n            }\r\n            this.value = '';\r\n            this.emitInputChange(ev);\r\n        };\r\n        /**\r\n         * Stops propagation when the label is clicked,\r\n         * otherwise, two clicks will be triggered.\r\n         */\r\n        this.onLabelClick = (ev) => {\r\n            // Only stop propagation if the click was directly on the label\r\n            // and not on the input or other child elements\r\n            if (ev.target === ev.currentTarget) {\r\n                ev.stopPropagation();\r\n            }\r\n        };\r\n    }\r\n    debounceChanged() {\r\n        const { ionInput, debounce, originalIonInput } = this;\r\n        /**\r\n         * If debounce is undefined, we have to manually revert the ionInput emitter in case\r\n         * debounce used to be set to a number. Otherwise, the event would stay debounced.\r\n         */\r\n        this.ionInput = debounce === undefined ? originalIonInput !== null && originalIonInput !== void 0 ? originalIonInput : ionInput : debounceEvent(ionInput, debounce);\r\n    }\r\n    /**\r\n     * Whenever the type on the input changes we need\r\n     * to update the internal type prop on the password\r\n     * toggle so that that correct icon is shown.\r\n     */\r\n    onTypeChange() {\r\n        const passwordToggle = this.el.querySelector('ion-input-password-toggle');\r\n        if (passwordToggle) {\r\n            passwordToggle.type = this.type;\r\n        }\r\n    }\r\n    /**\r\n     * Update the native input element when the value changes\r\n     */\r\n    valueChanged() {\r\n        const nativeInput = this.nativeInput;\r\n        const value = this.getValue();\r\n        if (nativeInput && nativeInput.value !== value && !this.isComposing) {\r\n            /**\r\n             * Assigning the native input's value on attribute\r\n             * value change, allows `ionInput` implementations\r\n             * to override the control's value.\r\n             *\r\n             * Used for patterns such as input trimming (removing whitespace),\r\n             * or input masking.\r\n             */\r\n            nativeInput.value = value;\r\n        }\r\n    }\r\n    /**\r\n     * dir is a globally enumerated attribute.\r\n     * As a result, creating these as properties\r\n     * can have unintended side effects. Instead, we\r\n     * listen for attribute changes and inherit them\r\n     * to the inner `<input>` element.\r\n     */\r\n    onDirChanged(newValue) {\r\n        this.inheritedAttributes = Object.assign(Object.assign({}, this.inheritedAttributes), { dir: newValue });\r\n        forceUpdate(this);\r\n    }\r\n    /**\r\n     * This prevents the native input from emitting the click event.\r\n     * Instead, the click event from the ion-input is emitted.\r\n     */\r\n    onClickCapture(ev) {\r\n        const nativeInput = this.nativeInput;\r\n        if (nativeInput && ev.target === nativeInput) {\r\n            ev.stopPropagation();\r\n            this.el.click();\r\n        }\r\n    }\r\n    componentWillLoad() {\r\n        this.inheritedAttributes = Object.assign(Object.assign({}, inheritAriaAttributes(this.el)), inheritAttributes(this.el, ['tabindex', 'title', 'data-form-type', 'dir']));\r\n    }\r\n    connectedCallback() {\r\n        const { el } = this;\r\n        this.slotMutationController = createSlotMutationController(el, ['label', 'start', 'end'], () => forceUpdate(this));\r\n        this.notchController = createNotchController(el, () => this.notchSpacerEl, () => this.labelSlot);\r\n        this.debounceChanged();\r\n        {\r\n            document.dispatchEvent(new CustomEvent('ionInputDidLoad', {\r\n                detail: this.el,\r\n            }));\r\n        }\r\n    }\r\n    componentDidLoad() {\r\n        this.originalIonInput = this.ionInput;\r\n        /**\r\n         * Set the type on the password toggle in the event that this input's\r\n         * type was set async and does not match the default type for the password toggle.\r\n         * This can happen when the type is bound using a JS framework binding syntax\r\n         * such as [type] in Angular.\r\n         */\r\n        this.onTypeChange();\r\n        this.debounceChanged();\r\n    }\r\n    componentDidRender() {\r\n        var _a;\r\n        (_a = this.notchController) === null || _a === void 0 ? void 0 : _a.calculateNotchWidth();\r\n    }\r\n    disconnectedCallback() {\r\n        {\r\n            document.dispatchEvent(new CustomEvent('ionInputDidUnload', {\r\n                detail: this.el,\r\n            }));\r\n        }\r\n        if (this.slotMutationController) {\r\n            this.slotMutationController.destroy();\r\n            this.slotMutationController = undefined;\r\n        }\r\n        if (this.notchController) {\r\n            this.notchController.destroy();\r\n            this.notchController = undefined;\r\n        }\r\n    }\r\n    /**\r\n     * Sets focus on the native `input` in `ion-input`. Use this method instead of the global\r\n     * `input.focus()`.\r\n     *\r\n     * Developers who wish to focus an input when a page enters\r\n     * should call `setFocus()` in the `ionViewDidEnter()` lifecycle method.\r\n     *\r\n     * Developers who wish to focus an input when an overlay is presented\r\n     * should call `setFocus` after `didPresent` has resolved.\r\n     *\r\n     * See [managing focus](/docs/developing/managing-focus) for more information.\r\n     */\r\n    async setFocus() {\r\n        if (this.nativeInput) {\r\n            this.nativeInput.focus();\r\n        }\r\n    }\r\n    /**\r\n     * Returns the native `<input>` element used under the hood.\r\n     */\r\n    async getInputElement() {\r\n        /**\r\n         * If this gets called in certain early lifecycle hooks (ex: Vue onMounted),\r\n         * nativeInput won't be defined yet with the custom elements build, so wait for it to load in.\r\n         */\r\n        if (!this.nativeInput) {\r\n            await new Promise((resolve) => componentOnReady(this.el, resolve));\r\n        }\r\n        return Promise.resolve(this.nativeInput);\r\n    }\r\n    /**\r\n     * Emits an `ionChange` event.\r\n     *\r\n     * This API should be called for user committed changes.\r\n     * This API should not be used for external value changes.\r\n     */\r\n    emitValueChange(event) {\r\n        const { value } = this;\r\n        // Checks for both null and undefined values\r\n        const newValue = value == null ? value : value.toString();\r\n        // Emitting a value change should update the internal state for tracking the focused value\r\n        this.focusedValue = newValue;\r\n        this.ionChange.emit({ value: newValue, event });\r\n    }\r\n    /**\r\n     * Emits an `ionInput` event.\r\n     */\r\n    emitInputChange(event) {\r\n        const { value } = this;\r\n        // Checks for both null and undefined values\r\n        const newValue = value == null ? value : value.toString();\r\n        this.ionInput.emit({ value: newValue, event });\r\n    }\r\n    shouldClearOnEdit() {\r\n        const { type, clearOnEdit } = this;\r\n        return clearOnEdit === undefined ? type === 'password' : clearOnEdit;\r\n    }\r\n    getValue() {\r\n        return typeof this.value === 'number' ? this.value.toString() : (this.value || '').toString();\r\n    }\r\n    checkClearOnEdit(ev) {\r\n        if (!this.shouldClearOnEdit()) {\r\n            return;\r\n        }\r\n        /**\r\n         * The following keys do not modify the\r\n         * contents of the input. As a result, pressing\r\n         * them should not edit the input.\r\n         *\r\n         * We can't check to see if the value of the input\r\n         * was changed because we call checkClearOnEdit\r\n         * in a keydown listener, and the key has not yet\r\n         * been added to the input.\r\n         */\r\n        const IGNORED_KEYS = ['Enter', 'Tab', 'Shift', 'Meta', 'Alt', 'Control'];\r\n        const pressedIgnoredKey = IGNORED_KEYS.includes(ev.key);\r\n        /**\r\n         * Clear the input if the control has not been previously cleared during focus.\r\n         * Do not clear if the user hitting enter to submit a form.\r\n         */\r\n        if (!this.didInputClearOnEdit && this.hasValue() && !pressedIgnoredKey) {\r\n            this.value = '';\r\n            this.emitInputChange(ev);\r\n        }\r\n        /**\r\n         * Pressing an IGNORED_KEYS first and\r\n         * then an allowed key will cause the input to not\r\n         * be cleared.\r\n         */\r\n        if (!pressedIgnoredKey) {\r\n            this.didInputClearOnEdit = true;\r\n        }\r\n    }\r\n    hasValue() {\r\n        return this.getValue().length > 0;\r\n    }\r\n    /**\r\n     * Renders the helper text or error text values\r\n     */\r\n    renderHintText() {\r\n        const { helperText, errorText, helperTextId, errorTextId } = this;\r\n        return [\r\n            h(\"div\", { id: helperTextId, class: \"helper-text\" }, helperText),\r\n            h(\"div\", { id: errorTextId, class: \"error-text\" }, errorText),\r\n        ];\r\n    }\r\n    getHintTextID() {\r\n        const { el, helperText, errorText, helperTextId, errorTextId } = this;\r\n        if (el.classList.contains('ion-touched') && el.classList.contains('ion-invalid') && errorText) {\r\n            return errorTextId;\r\n        }\r\n        if (helperText) {\r\n            return helperTextId;\r\n        }\r\n        return undefined;\r\n    }\r\n    renderCounter() {\r\n        const { counter, maxlength, counterFormatter, value } = this;\r\n        if (counter !== true || maxlength === undefined) {\r\n            return;\r\n        }\r\n        return h(\"div\", { class: \"counter\" }, getCounterText(value, maxlength, counterFormatter));\r\n    }\r\n    /**\r\n     * Responsible for rendering helper text,\r\n     * error text, and counter. This element should only\r\n     * be rendered if hint text is set or counter is enabled.\r\n     */\r\n    renderBottomContent() {\r\n        const { counter, helperText, errorText, maxlength } = this;\r\n        /**\r\n         * undefined and empty string values should\r\n         * be treated as not having helper/error text.\r\n         */\r\n        const hasHintText = !!helperText || !!errorText;\r\n        const hasCounter = counter === true && maxlength !== undefined;\r\n        if (!hasHintText && !hasCounter) {\r\n            return;\r\n        }\r\n        return (h(\"div\", { class: \"input-bottom\" }, this.renderHintText(), this.renderCounter()));\r\n    }\r\n    renderLabel() {\r\n        const { label } = this;\r\n        return (h(\"div\", { class: {\r\n                'label-text-wrapper': true,\r\n                'label-text-wrapper-hidden': !this.hasLabel,\r\n            } }, label === undefined ? h(\"slot\", { name: \"label\" }) : h(\"div\", { class: \"label-text\" }, label)));\r\n    }\r\n    /**\r\n     * Gets any content passed into the `label` slot,\r\n     * not the <slot> definition.\r\n     */\r\n    get labelSlot() {\r\n        return this.el.querySelector('[slot=\"label\"]');\r\n    }\r\n    /**\r\n     * Returns `true` if label content is provided\r\n     * either by a prop or a content. If you want\r\n     * to get the plaintext value of the label use\r\n     * the `labelText` getter instead.\r\n     */\r\n    get hasLabel() {\r\n        return this.label !== undefined || this.labelSlot !== null;\r\n    }\r\n    /**\r\n     * Renders the border container\r\n     * when fill=\"outline\".\r\n     */\r\n    renderLabelContainer() {\r\n        const mode = getIonMode(this);\r\n        const hasOutlineFill = mode === 'md' && this.fill === 'outline';\r\n        if (hasOutlineFill) {\r\n            /**\r\n             * The outline fill has a special outline\r\n             * that appears around the input and the label.\r\n             * Certain stacked and floating label placements cause the\r\n             * label to translate up and create a \"cut out\"\r\n             * inside of that border by using the notch-spacer element.\r\n             */\r\n            return [\r\n                h(\"div\", { class: \"input-outline-container\" }, h(\"div\", { class: \"input-outline-start\" }), h(\"div\", { class: {\r\n                        'input-outline-notch': true,\r\n                        'input-outline-notch-hidden': !this.hasLabel,\r\n                    } }, h(\"div\", { class: \"notch-spacer\", \"aria-hidden\": \"true\", ref: (el) => (this.notchSpacerEl = el) }, this.label)), h(\"div\", { class: \"input-outline-end\" })),\r\n                this.renderLabel(),\r\n            ];\r\n        }\r\n        /**\r\n         * If not using the outline style,\r\n         * we can render just the label.\r\n         */\r\n        return this.renderLabel();\r\n    }\r\n    render() {\r\n        const { disabled, fill, readonly, shape, inputId, labelPlacement, el, hasFocus, clearInputIcon } = this;\r\n        const mode = getIonMode(this);\r\n        const value = this.getValue();\r\n        const inItem = hostContext('ion-item', this.el);\r\n        const shouldRenderHighlight = mode === 'md' && fill !== 'outline' && !inItem;\r\n        const defaultClearIcon = mode === 'ios' ? closeCircle : closeSharp;\r\n        const clearIconData = clearInputIcon !== null && clearInputIcon !== void 0 ? clearInputIcon : defaultClearIcon;\r\n        const hasValue = this.hasValue();\r\n        const hasStartEndSlots = el.querySelector('[slot=\"start\"], [slot=\"end\"]') !== null;\r\n        /**\r\n         * If the label is stacked, it should always sit above the input.\r\n         * For floating labels, the label should move above the input if\r\n         * the input has a value, is focused, or has anything in either\r\n         * the start or end slot.\r\n         *\r\n         * If there is content in the start slot, the label would overlap\r\n         * it if not forced to float. This is also applied to the end slot\r\n         * because with the default or solid fills, the input is not\r\n         * vertically centered in the container, but the label is. This\r\n         * causes the slots and label to appear vertically offset from each\r\n         * other when the label isn't floating above the input. This doesn't\r\n         * apply to the outline fill, but this was not accounted for to keep\r\n         * things consistent.\r\n         *\r\n         * TODO(FW-5592): Remove hasStartEndSlots condition\r\n         */\r\n        const labelShouldFloat = labelPlacement === 'stacked' || (labelPlacement === 'floating' && (hasValue || hasFocus || hasStartEndSlots));\r\n        return (h(Host, { key: '41b2526627e7d2773a80f011b123284203a71ca0', class: createColorClasses(this.color, {\r\n                [mode]: true,\r\n                'has-value': hasValue,\r\n                'has-focus': hasFocus,\r\n                'label-floating': labelShouldFloat,\r\n                [`input-fill-${fill}`]: fill !== undefined,\r\n                [`input-shape-${shape}`]: shape !== undefined,\r\n                [`input-label-placement-${labelPlacement}`]: true,\r\n                'in-item': inItem,\r\n                'in-item-color': hostContext('ion-item.ion-color', this.el),\r\n                'input-disabled': disabled,\r\n            }) }, h(\"label\", { key: '9ab078363e32528102b441ad1791d83f86fdcbdc', class: \"input-wrapper\", htmlFor: inputId, onClick: this.onLabelClick }, this.renderLabelContainer(), h(\"div\", { key: 'e34b594980ec62e4c618e827fadf7669a39ad0d8', class: \"native-wrapper\", onClick: this.onLabelClick }, h(\"slot\", { key: '12dc04ead5502e9e5736240e918bf9331bf7b5d9', name: \"start\" }), h(\"input\", Object.assign({ key: 'df356eb4ced23109b2c0242f36dc043aba8782d6', class: \"native-input\", ref: (input) => (this.nativeInput = input), id: inputId, disabled: disabled, autoCapitalize: this.autocapitalize, autoComplete: this.autocomplete, autoCorrect: this.autocorrect, autoFocus: this.autofocus, enterKeyHint: this.enterkeyhint, inputMode: this.inputmode, min: this.min, max: this.max, minLength: this.minlength, maxLength: this.maxlength, multiple: this.multiple, name: this.name, pattern: this.pattern, placeholder: this.placeholder || '', readOnly: readonly, required: this.required, spellcheck: this.spellcheck, step: this.step, type: this.type, value: value, onInput: this.onInput, onChange: this.onChange, onBlur: this.onBlur, onFocus: this.onFocus, onKeyDown: this.onKeydown, onCompositionstart: this.onCompositionStart, onCompositionend: this.onCompositionEnd, \"aria-describedby\": this.getHintTextID(), \"aria-invalid\": this.getHintTextID() === this.errorTextId }, this.inheritedAttributes)), this.clearInput && !readonly && !disabled && (h(\"button\", { key: 'f79f68cabcd4ea99419331174a377827db0c0741', \"aria-label\": \"reset\", type: \"button\", class: \"input-clear-icon\", onPointerDown: (ev) => {\r\n                /**\r\n                 * This prevents mobile browsers from\r\n                 * blurring the input when the clear\r\n                 * button is activated.\r\n                 */\r\n                ev.preventDefault();\r\n            }, onClick: this.clearTextInput }, h(\"ion-icon\", { key: '237ec07ec2e10f08818a332bb596578c2c49f770', \"aria-hidden\": \"true\", icon: clearIconData }))), h(\"slot\", { key: '1f0a3624aa3e8dc3c307a6762230ab698768a5e5', name: \"end\" })), shouldRenderHighlight && h(\"div\", { key: '8a8cbb82695a722a0010b53dd0b1f1f97534a20b', class: \"input-highlight\" })), this.renderBottomContent()));\r\n    }\r\n    get el() { return getElement(this); }\r\n    static get watchers() { return {\r\n        \"debounce\": [\"debounceChanged\"],\r\n        \"type\": [\"onTypeChange\"],\r\n        \"value\": [\"valueChanged\"],\r\n        \"dir\": [\"onDirChanged\"]\r\n    }; }\r\n};\r\nlet inputIds = 0;\r\nInput.style = {\r\n    ios: inputIosCss,\r\n    md: inputMdCss\r\n};\r\n\r\nexport { Input as ion_input };\r\n"],
  "mappings": "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",
  "names": []
}
