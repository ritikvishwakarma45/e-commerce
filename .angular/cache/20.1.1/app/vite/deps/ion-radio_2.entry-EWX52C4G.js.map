{
  "version": 3,
  "sources": ["../../../../../../node_modules/@ionic/core/dist/esm/ion-radio_2.entry.js"],
  "sourcesContent": ["/*!\r\n * (C) Ionic http://ionicframework.com - MIT License\r\n */\r\nimport { r as registerInstance, d as createEvent, h, e as getIonMode, j as Host, k as getElement } from './index-B_U9CtaY.js';\r\nimport { f as addEventListener, m as removeEventListener, a as renderHiddenInput } from './helpers-1O4D2b7y.js';\r\nimport { i as isOptionSelected } from './compare-with-utils-sObYyvOy.js';\r\nimport { h as hostContext, c as createColorClasses } from './theme-DiVJyqlX.js';\r\n\r\nconst radioIosCss = \":host{--inner-border-radius:50%;display:inline-block;position:relative;max-width:100%;min-height:inherit;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2;-webkit-box-sizing:border-box;box-sizing:border-box}:host(.radio-disabled){pointer-events:none}.radio-icon{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;contain:layout size style}.radio-icon,.radio-inner{-webkit-box-sizing:border-box;box-sizing:border-box}input{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}:host(:focus){outline:none}:host(.in-item){-ms-flex:1 1 0px;flex:1 1 0;width:100%;height:100%}:host([slot=start]),:host([slot=end]){-ms-flex:initial;flex:initial;width:auto}.radio-wrapper{display:-ms-flexbox;display:flex;position:relative;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between;height:inherit;min-height:inherit;cursor:inherit}.label-text-wrapper{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host(.in-item) .label-text-wrapper{margin-top:10px;margin-bottom:10px}:host(.in-item.radio-label-placement-stacked) .label-text-wrapper{margin-top:10px;margin-bottom:16px}:host(.in-item.radio-label-placement-stacked) .native-wrapper{margin-bottom:10px}.label-text-wrapper-hidden{display:none}.native-wrapper{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host(.radio-justify-space-between) .radio-wrapper{-ms-flex-pack:justify;justify-content:space-between}:host(.radio-justify-start) .radio-wrapper{-ms-flex-pack:start;justify-content:start}:host(.radio-justify-end) .radio-wrapper{-ms-flex-pack:end;justify-content:end}:host(.radio-alignment-start) .radio-wrapper{-ms-flex-align:start;align-items:start}:host(.radio-alignment-center) .radio-wrapper{-ms-flex-align:center;align-items:center}:host(.radio-justify-space-between),:host(.radio-justify-start),:host(.radio-justify-end),:host(.radio-alignment-start),:host(.radio-alignment-center){display:block}:host(.radio-label-placement-start) .radio-wrapper{-ms-flex-direction:row;flex-direction:row}:host(.radio-label-placement-start) .label-text-wrapper{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px}:host(.radio-label-placement-end) .radio-wrapper{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.radio-label-placement-end) .label-text-wrapper{-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:0;margin-inline-end:0}:host(.radio-label-placement-fixed) .label-text-wrapper{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px}:host(.radio-label-placement-fixed) .label-text-wrapper{-ms-flex:0 0 100px;flex:0 0 100px;width:100px;min-width:100px}:host(.radio-label-placement-stacked) .radio-wrapper{-ms-flex-direction:column;flex-direction:column}:host(.radio-label-placement-stacked) .label-text-wrapper{-webkit-transform:scale(0.75);transform:scale(0.75);margin-left:0;margin-right:0;margin-bottom:16px;max-width:calc(100% / 0.75)}:host(.radio-label-placement-stacked.radio-alignment-start) .label-text-wrapper{-webkit-transform-origin:left top;transform-origin:left top}:host-context([dir=rtl]):host(.radio-label-placement-stacked.radio-alignment-start) .label-text-wrapper,:host-context([dir=rtl]).radio-label-placement-stacked.radio-alignment-start .label-text-wrapper{-webkit-transform-origin:right top;transform-origin:right top}@supports selector(:dir(rtl)){:host(.radio-label-placement-stacked.radio-alignment-start:dir(rtl)) .label-text-wrapper{-webkit-transform-origin:right top;transform-origin:right top}}:host(.radio-label-placement-stacked.radio-alignment-center) .label-text-wrapper{-webkit-transform-origin:center top;transform-origin:center top}:host-context([dir=rtl]):host(.radio-label-placement-stacked.radio-alignment-center) .label-text-wrapper,:host-context([dir=rtl]).radio-label-placement-stacked.radio-alignment-center .label-text-wrapper{-webkit-transform-origin:calc(100% - center) top;transform-origin:calc(100% - center) top}@supports selector(:dir(rtl)){:host(.radio-label-placement-stacked.radio-alignment-center:dir(rtl)) .label-text-wrapper{-webkit-transform-origin:calc(100% - center) top;transform-origin:calc(100% - center) top}}:host{--color-checked:var(--ion-color-primary, #0054e9)}:host(.ion-color.radio-checked) .radio-inner{border-color:var(--ion-color-base)}.item-radio.item-ios ion-label{-webkit-margin-start:0;margin-inline-start:0}.radio-inner{width:33%;height:50%}:host(.radio-checked) .radio-inner{-webkit-transform:rotate(45deg);transform:rotate(45deg);border-width:0.125rem;border-top-width:0;border-left-width:0;border-style:solid;border-color:var(--color-checked)}:host(.radio-disabled){opacity:0.3}:host(.ion-focused) .radio-icon::after{border-radius:var(--inner-border-radius);top:-8px;display:block;position:absolute;width:36px;height:36px;background:var(--ion-color-primary-tint, #1a65eb);content:\\\"\\\";opacity:0.2}:host(.ion-focused) .radio-icon::after{inset-inline-start:-9px}.native-wrapper .radio-icon{width:0.9375rem;height:1.5rem}\";\r\n\r\nconst radioMdCss = \":host{--inner-border-radius:50%;display:inline-block;position:relative;max-width:100%;min-height:inherit;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2;-webkit-box-sizing:border-box;box-sizing:border-box}:host(.radio-disabled){pointer-events:none}.radio-icon{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;contain:layout size style}.radio-icon,.radio-inner{-webkit-box-sizing:border-box;box-sizing:border-box}input{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}:host(:focus){outline:none}:host(.in-item){-ms-flex:1 1 0px;flex:1 1 0;width:100%;height:100%}:host([slot=start]),:host([slot=end]){-ms-flex:initial;flex:initial;width:auto}.radio-wrapper{display:-ms-flexbox;display:flex;position:relative;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between;height:inherit;min-height:inherit;cursor:inherit}.label-text-wrapper{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host(.in-item) .label-text-wrapper{margin-top:10px;margin-bottom:10px}:host(.in-item.radio-label-placement-stacked) .label-text-wrapper{margin-top:10px;margin-bottom:16px}:host(.in-item.radio-label-placement-stacked) .native-wrapper{margin-bottom:10px}.label-text-wrapper-hidden{display:none}.native-wrapper{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host(.radio-justify-space-between) .radio-wrapper{-ms-flex-pack:justify;justify-content:space-between}:host(.radio-justify-start) .radio-wrapper{-ms-flex-pack:start;justify-content:start}:host(.radio-justify-end) .radio-wrapper{-ms-flex-pack:end;justify-content:end}:host(.radio-alignment-start) .radio-wrapper{-ms-flex-align:start;align-items:start}:host(.radio-alignment-center) .radio-wrapper{-ms-flex-align:center;align-items:center}:host(.radio-justify-space-between),:host(.radio-justify-start),:host(.radio-justify-end),:host(.radio-alignment-start),:host(.radio-alignment-center){display:block}:host(.radio-label-placement-start) .radio-wrapper{-ms-flex-direction:row;flex-direction:row}:host(.radio-label-placement-start) .label-text-wrapper{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px}:host(.radio-label-placement-end) .radio-wrapper{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.radio-label-placement-end) .label-text-wrapper{-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:0;margin-inline-end:0}:host(.radio-label-placement-fixed) .label-text-wrapper{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px}:host(.radio-label-placement-fixed) .label-text-wrapper{-ms-flex:0 0 100px;flex:0 0 100px;width:100px;min-width:100px}:host(.radio-label-placement-stacked) .radio-wrapper{-ms-flex-direction:column;flex-direction:column}:host(.radio-label-placement-stacked) .label-text-wrapper{-webkit-transform:scale(0.75);transform:scale(0.75);margin-left:0;margin-right:0;margin-bottom:16px;max-width:calc(100% / 0.75)}:host(.radio-label-placement-stacked.radio-alignment-start) .label-text-wrapper{-webkit-transform-origin:left top;transform-origin:left top}:host-context([dir=rtl]):host(.radio-label-placement-stacked.radio-alignment-start) .label-text-wrapper,:host-context([dir=rtl]).radio-label-placement-stacked.radio-alignment-start .label-text-wrapper{-webkit-transform-origin:right top;transform-origin:right top}@supports selector(:dir(rtl)){:host(.radio-label-placement-stacked.radio-alignment-start:dir(rtl)) .label-text-wrapper{-webkit-transform-origin:right top;transform-origin:right top}}:host(.radio-label-placement-stacked.radio-alignment-center) .label-text-wrapper{-webkit-transform-origin:center top;transform-origin:center top}:host-context([dir=rtl]):host(.radio-label-placement-stacked.radio-alignment-center) .label-text-wrapper,:host-context([dir=rtl]).radio-label-placement-stacked.radio-alignment-center .label-text-wrapper{-webkit-transform-origin:calc(100% - center) top;transform-origin:calc(100% - center) top}@supports selector(:dir(rtl)){:host(.radio-label-placement-stacked.radio-alignment-center:dir(rtl)) .label-text-wrapper{-webkit-transform-origin:calc(100% - center) top;transform-origin:calc(100% - center) top}}:host{--color:rgb(var(--ion-text-color-rgb, 0, 0, 0), 0.6);--color-checked:var(--ion-color-primary, #0054e9);--border-width:0.125rem;--border-style:solid;--border-radius:50%}:host(.ion-color) .radio-inner{background:var(--ion-color-base)}:host(.ion-color.radio-checked) .radio-icon{border-color:var(--ion-color-base)}.radio-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;border-radius:var(--border-radius);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--color)}.radio-inner{border-radius:var(--inner-border-radius);width:calc(50% + var(--border-width));height:calc(50% + var(--border-width));-webkit-transform:scale3d(0, 0, 0);transform:scale3d(0, 0, 0);-webkit-transition:-webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:-webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:transform 280ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);background:var(--color-checked)}:host(.radio-checked) .radio-icon{border-color:var(--color-checked)}:host(.radio-checked) .radio-inner{-webkit-transform:scale3d(1, 1, 1);transform:scale3d(1, 1, 1)}:host(.radio-disabled) .label-text-wrapper{opacity:0.38}:host(.radio-disabled) .native-wrapper{opacity:0.63}:host(.ion-focused) .radio-icon::after{border-radius:var(--inner-border-radius);display:block;position:absolute;width:36px;height:36px;background:var(--ion-color-primary-tint, #1a65eb);content:\\\"\\\";opacity:0.2}.native-wrapper .radio-icon{width:1.25rem;height:1.25rem}\";\r\n\r\nconst Radio = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\r\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\r\n        this.inputId = `ion-rb-${radioButtonIds++}`;\r\n        this.radioGroup = null;\r\n        /**\r\n         * If `true`, the radio is selected.\r\n         */\r\n        this.checked = false;\r\n        /**\r\n         * The tabindex of the radio button.\r\n         * @internal\r\n         */\r\n        this.buttonTabindex = -1;\r\n        /**\r\n         * The name of the control, which is submitted with the form data.\r\n         */\r\n        this.name = this.inputId;\r\n        /**\r\n         * If `true`, the user cannot interact with the radio.\r\n         */\r\n        this.disabled = false;\r\n        /**\r\n         * Where to place the label relative to the radio.\r\n         * `\"start\"`: The label will appear to the left of the radio in LTR and to the right in RTL.\r\n         * `\"end\"`: The label will appear to the right of the radio in LTR and to the left in RTL.\r\n         * `\"fixed\"`: The label has the same behavior as `\"start\"` except it also has a fixed width. Long text will be truncated with ellipses (\"...\").\r\n         * `\"stacked\"`: The label will appear above the radio regardless of the direction. The alignment of the label can be controlled with the `alignment` property.\r\n         */\r\n        this.labelPlacement = 'start';\r\n        this.updateState = () => {\r\n            if (this.radioGroup) {\r\n                const { compareWith, value: radioGroupValue } = this.radioGroup;\r\n                this.checked = isOptionSelected(radioGroupValue, this.value, compareWith);\r\n            }\r\n        };\r\n        this.onClick = () => {\r\n            const { radioGroup, checked, disabled } = this;\r\n            if (disabled) {\r\n                return;\r\n            }\r\n            /**\r\n             * The modern control does not use a native input\r\n             * inside of the radio host, so we cannot rely on the\r\n             * ev.preventDefault() behavior above. If the radio\r\n             * is checked and the parent radio group allows for empty\r\n             * selection, then we can set the checked state to false.\r\n             * Otherwise, the checked state should always be set\r\n             * to true because the checked state cannot be toggled.\r\n             */\r\n            if (checked && (radioGroup === null || radioGroup === void 0 ? void 0 : radioGroup.allowEmptySelection)) {\r\n                this.checked = false;\r\n            }\r\n            else {\r\n                this.checked = true;\r\n            }\r\n        };\r\n        this.onFocus = () => {\r\n            this.ionFocus.emit();\r\n        };\r\n        this.onBlur = () => {\r\n            this.ionBlur.emit();\r\n        };\r\n    }\r\n    valueChanged() {\r\n        /**\r\n         * The new value of the radio may\r\n         * match the radio group's value,\r\n         * so we see if it should be checked.\r\n         */\r\n        this.updateState();\r\n    }\r\n    componentDidLoad() {\r\n        /**\r\n         * The value may be `undefined` if it\r\n         * gets set before the radio is\r\n         * rendered. This ensures that the radio\r\n         * is checked if the value matches. This\r\n         * happens most often when Angular is\r\n         * rendering the radio.\r\n         */\r\n        this.updateState();\r\n    }\r\n    /** @internal */\r\n    async setFocus(ev) {\r\n        if (ev !== undefined) {\r\n            ev.stopPropagation();\r\n            ev.preventDefault();\r\n        }\r\n        this.el.focus();\r\n    }\r\n    /** @internal */\r\n    async setButtonTabindex(value) {\r\n        this.buttonTabindex = value;\r\n    }\r\n    connectedCallback() {\r\n        if (this.value === undefined) {\r\n            this.value = this.inputId;\r\n        }\r\n        const radioGroup = (this.radioGroup = this.el.closest('ion-radio-group'));\r\n        if (radioGroup) {\r\n            this.updateState();\r\n            addEventListener(radioGroup, 'ionValueChange', this.updateState);\r\n        }\r\n    }\r\n    disconnectedCallback() {\r\n        const radioGroup = this.radioGroup;\r\n        if (radioGroup) {\r\n            removeEventListener(radioGroup, 'ionValueChange', this.updateState);\r\n            this.radioGroup = null;\r\n        }\r\n    }\r\n    get hasLabel() {\r\n        return this.el.textContent !== '';\r\n    }\r\n    renderRadioControl() {\r\n        return (h(\"div\", { class: \"radio-icon\", part: \"container\" }, h(\"div\", { class: \"radio-inner\", part: \"mark\" }), h(\"div\", { class: \"radio-ripple\" })));\r\n    }\r\n    render() {\r\n        const { checked, disabled, color, el, justify, labelPlacement, hasLabel, buttonTabindex, alignment } = this;\r\n        const mode = getIonMode(this);\r\n        const inItem = hostContext('ion-item', el);\r\n        return (h(Host, { key: '3353b28172b7f837d4b38964169b5b5f4ba02788', onFocus: this.onFocus, onBlur: this.onBlur, onClick: this.onClick, class: createColorClasses(color, {\r\n                [mode]: true,\r\n                'in-item': inItem,\r\n                'radio-checked': checked,\r\n                'radio-disabled': disabled,\r\n                [`radio-justify-${justify}`]: justify !== undefined,\r\n                [`radio-alignment-${alignment}`]: alignment !== undefined,\r\n                [`radio-label-placement-${labelPlacement}`]: true,\r\n                // Focus and active styling should not apply when the radio is in an item\r\n                'ion-activatable': !inItem,\r\n                'ion-focusable': !inItem,\r\n            }), role: \"radio\", \"aria-checked\": checked ? 'true' : 'false', \"aria-disabled\": disabled ? 'true' : null, tabindex: buttonTabindex }, h(\"label\", { key: '418a0a48366ff900e97da123abf665bbbda87fb7', class: \"radio-wrapper\" }, h(\"div\", { key: '6e5acdd8c8f5d0ad26632a65396afef8094153d1', class: {\r\n                'label-text-wrapper': true,\r\n                'label-text-wrapper-hidden': !hasLabel,\r\n            }, part: \"label\" }, h(\"slot\", { key: '10b157162cd283d624153c747679609cf0bbf11e' })), h(\"div\", { key: '4c45cca95cb105cd6df1025a26e3c045272184a0', class: \"native-wrapper\" }, this.renderRadioControl()))));\r\n    }\r\n    get el() { return getElement(this); }\r\n    static get watchers() { return {\r\n        \"value\": [\"valueChanged\"]\r\n    }; }\r\n};\r\nlet radioButtonIds = 0;\r\nRadio.style = {\r\n    ios: radioIosCss,\r\n    md: radioMdCss\r\n};\r\n\r\nconst radioGroupIosCss = \"ion-radio-group{vertical-align:top}.radio-group-wrapper{display:inline}.radio-group-top{line-height:1.5}.radio-group-top .error-text{display:none;color:var(--ion-color-danger, #c5000f)}.radio-group-top .helper-text{display:block;color:var(--ion-color-step-700, var(--ion-text-color-step-300, #4d4d4d))}.ion-touched.ion-invalid .radio-group-top .error-text{display:block}.ion-touched.ion-invalid .radio-group-top .helper-text{display:none}ion-list .radio-group-top{-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}\";\r\n\r\nconst radioGroupMdCss = \"ion-radio-group{vertical-align:top}.radio-group-wrapper{display:inline}.radio-group-top{line-height:1.5}.radio-group-top .error-text{display:none;color:var(--ion-color-danger, #c5000f)}.radio-group-top .helper-text{display:block;color:var(--ion-color-step-700, var(--ion-text-color-step-300, #4d4d4d))}.ion-touched.ion-invalid .radio-group-top .error-text{display:block}.ion-touched.ion-invalid .radio-group-top .helper-text{display:none}ion-list .radio-group-top{-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px}\";\r\n\r\nconst RadioGroup = class {\r\n    constructor(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.ionChange = createEvent(this, \"ionChange\", 7);\r\n        this.ionValueChange = createEvent(this, \"ionValueChange\", 7);\r\n        this.inputId = `ion-rg-${radioGroupIds++}`;\r\n        this.helperTextId = `${this.inputId}-helper-text`;\r\n        this.errorTextId = `${this.inputId}-error-text`;\r\n        this.labelId = `${this.inputId}-lbl`;\r\n        /**\r\n         * If `true`, the radios can be deselected.\r\n         */\r\n        this.allowEmptySelection = false;\r\n        /**\r\n         * The name of the control, which is submitted with the form data.\r\n         */\r\n        this.name = this.inputId;\r\n        this.setRadioTabindex = (value) => {\r\n            const radios = this.getRadios();\r\n            // Get the first radio that is not disabled and the checked one\r\n            const first = radios.find((radio) => !radio.disabled);\r\n            const checked = radios.find((radio) => radio.value === value && !radio.disabled);\r\n            if (!first && !checked) {\r\n                return;\r\n            }\r\n            // If an enabled checked radio exists, set it to be the focusable radio\r\n            // otherwise we default to focus the first radio\r\n            const focusable = checked || first;\r\n            for (const radio of radios) {\r\n                const tabindex = radio === focusable ? 0 : -1;\r\n                radio.setButtonTabindex(tabindex);\r\n            }\r\n        };\r\n        this.onClick = (ev) => {\r\n            ev.preventDefault();\r\n            /**\r\n             * The Radio Group component mandates that only one radio button\r\n             * within the group can be selected at any given time. Since `ion-radio`\r\n             * is a shadow DOM component, it cannot natively perform this behavior\r\n             * using the `name` attribute.\r\n             */\r\n            const selectedRadio = ev.target && ev.target.closest('ion-radio');\r\n            /**\r\n             * Our current disabled prop definition causes Stencil to mark it\r\n             * as optional. While this is not desired, fixing this behavior\r\n             * in Stencil is a significant breaking change, so this effort is\r\n             * being de-risked in STENCIL-917. Until then, we compromise\r\n             * here by checking for falsy `disabled` values instead of strictly\r\n             * checking `disabled === false`.\r\n             */\r\n            if (selectedRadio && !selectedRadio.disabled) {\r\n                const currentValue = this.value;\r\n                const newValue = selectedRadio.value;\r\n                if (newValue !== currentValue) {\r\n                    this.value = newValue;\r\n                    this.emitValueChange(ev);\r\n                }\r\n                else if (this.allowEmptySelection) {\r\n                    this.value = undefined;\r\n                    this.emitValueChange(ev);\r\n                }\r\n            }\r\n        };\r\n    }\r\n    valueChanged(value) {\r\n        this.setRadioTabindex(value);\r\n        this.ionValueChange.emit({ value });\r\n    }\r\n    componentDidLoad() {\r\n        /**\r\n         * There's an issue when assigning a value to the radio group\r\n         * within the Angular primary content (rendering within the\r\n         * app component template). When the template is isolated to a route,\r\n         * the value is assigned correctly.\r\n         * To address this issue, we need to ensure that the watcher is\r\n         * called after the component has finished loading,\r\n         * allowing the emit to be dispatched correctly.\r\n         */\r\n        this.valueChanged(this.value);\r\n    }\r\n    async connectedCallback() {\r\n        // Get the list header if it exists and set the id\r\n        // this is used to set aria-labelledby\r\n        const header = this.el.querySelector('ion-list-header') || this.el.querySelector('ion-item-divider');\r\n        if (header) {\r\n            const label = (this.label = header.querySelector('ion-label'));\r\n            if (label) {\r\n                this.labelId = label.id = this.name + '-lbl';\r\n            }\r\n        }\r\n    }\r\n    getRadios() {\r\n        return Array.from(this.el.querySelectorAll('ion-radio'));\r\n    }\r\n    /**\r\n     * Emits an `ionChange` event.\r\n     *\r\n     * This API should be called for user committed changes.\r\n     * This API should not be used for external value changes.\r\n     */\r\n    emitValueChange(event) {\r\n        const { value } = this;\r\n        this.ionChange.emit({ value, event });\r\n    }\r\n    onKeydown(ev) {\r\n        // We don't want the value to automatically change/emit when the radio group is part of a select interface\r\n        // as this will cause the interface to close when navigating through the radio group options\r\n        const inSelectInterface = !!this.el.closest('ion-select-popover') || !!this.el.closest('ion-select-modal');\r\n        if (ev.target && !this.el.contains(ev.target)) {\r\n            return;\r\n        }\r\n        // Get all radios inside of the radio group and then\r\n        // filter out disabled radios since we need to skip those\r\n        const radios = this.getRadios().filter((radio) => !radio.disabled);\r\n        // Only move the radio if the current focus is in the radio group\r\n        if (ev.target && radios.includes(ev.target)) {\r\n            const index = radios.findIndex((radio) => radio === ev.target);\r\n            const current = radios[index];\r\n            let next;\r\n            // If hitting arrow down or arrow right, move to the next radio\r\n            // If we're on the last radio, move to the first radio\r\n            if (['ArrowDown', 'ArrowRight'].includes(ev.key)) {\r\n                next = index === radios.length - 1 ? radios[0] : radios[index + 1];\r\n            }\r\n            // If hitting arrow up or arrow left, move to the previous radio\r\n            // If we're on the first radio, move to the last radio\r\n            if (['ArrowUp', 'ArrowLeft'].includes(ev.key)) {\r\n                next = index === 0 ? radios[radios.length - 1] : radios[index - 1];\r\n            }\r\n            if (next && radios.includes(next)) {\r\n                next.setFocus(ev);\r\n                if (!inSelectInterface) {\r\n                    this.value = next.value;\r\n                    this.emitValueChange(ev);\r\n                }\r\n            }\r\n            // Update the radio group value when a user presses the\r\n            // space bar on top of a selected radio\r\n            if ([' '].includes(ev.key)) {\r\n                const previousValue = this.value;\r\n                this.value = this.allowEmptySelection && this.value !== undefined ? undefined : current.value;\r\n                if (previousValue !== this.value || this.allowEmptySelection) {\r\n                    /**\r\n                     * Value change should only be emitted if the value is different,\r\n                     * such as selecting a new radio with the space bar or if\r\n                     * the radio group allows for empty selection and the user\r\n                     * is deselecting a checked radio.\r\n                     */\r\n                    this.emitValueChange(ev);\r\n                }\r\n                // Prevent browsers from jumping\r\n                // to the bottom of the screen\r\n                ev.preventDefault();\r\n            }\r\n        }\r\n    }\r\n    /** @internal */\r\n    async setFocus() {\r\n        const radioToFocus = this.getRadios().find((r) => r.tabIndex !== -1);\r\n        radioToFocus === null || radioToFocus === void 0 ? void 0 : radioToFocus.setFocus();\r\n    }\r\n    /**\r\n     * Renders the helper text or error text values\r\n     */\r\n    renderHintText() {\r\n        const { helperText, errorText, helperTextId, errorTextId } = this;\r\n        const hasHintText = !!helperText || !!errorText;\r\n        if (!hasHintText) {\r\n            return;\r\n        }\r\n        return (h(\"div\", { class: \"radio-group-top\" }, h(\"div\", { id: helperTextId, class: \"helper-text\" }, helperText), h(\"div\", { id: errorTextId, class: \"error-text\" }, errorText)));\r\n    }\r\n    getHintTextID() {\r\n        const { el, helperText, errorText, helperTextId, errorTextId } = this;\r\n        if (el.classList.contains('ion-touched') && el.classList.contains('ion-invalid') && errorText) {\r\n            return errorTextId;\r\n        }\r\n        if (helperText) {\r\n            return helperTextId;\r\n        }\r\n        return undefined;\r\n    }\r\n    render() {\r\n        const { label, labelId, el, name, value } = this;\r\n        const mode = getIonMode(this);\r\n        renderHiddenInput(true, el, name, value, false);\r\n        return (h(Host, { key: '81b8ebc96b2f383c36717f290d2959cc921ad6e8', role: \"radiogroup\", \"aria-labelledby\": label ? labelId : null, \"aria-describedby\": this.getHintTextID(), \"aria-invalid\": this.getHintTextID() === this.errorTextId, onClick: this.onClick, class: mode }, this.renderHintText(), h(\"div\", { key: '45b09efc10776b889a8f372cba80d25a3fc849da', class: \"radio-group-wrapper\" }, h(\"slot\", { key: '58714934542c2fdd7396de160364f3f06b32e8f8' }))));\r\n    }\r\n    get el() { return getElement(this); }\r\n    static get watchers() { return {\r\n        \"value\": [\"valueChanged\"]\r\n    }; }\r\n};\r\nlet radioGroupIds = 0;\r\nRadioGroup.style = {\r\n    ios: radioGroupIosCss,\r\n    md: radioGroupMdCss\r\n};\r\n\r\nexport { Radio as ion_radio, RadioGroup as ion_radio_group };\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAQA,IAAM,cAAc;AAEpB,IAAM,aAAa;AAEnB,IAAM,QAAQ,MAAM;AAAA,EAChB,YAAY,SAAS;AACjB,qBAAiB,MAAM,OAAO;AAC9B,SAAK,WAAW,YAAY,MAAM,YAAY,CAAC;AAC/C,SAAK,UAAU,YAAY,MAAM,WAAW,CAAC;AAC7C,SAAK,UAAU,UAAU,gBAAgB;AACzC,SAAK,aAAa;AAIlB,SAAK,UAAU;AAKf,SAAK,iBAAiB;AAItB,SAAK,OAAO,KAAK;AAIjB,SAAK,WAAW;AAQhB,SAAK,iBAAiB;AACtB,SAAK,cAAc,MAAM;AACrB,UAAI,KAAK,YAAY;AACjB,cAAM,EAAE,aAAa,OAAO,gBAAgB,IAAI,KAAK;AACrD,aAAK,UAAU,iBAAiB,iBAAiB,KAAK,OAAO,WAAW;AAAA,MAC5E;AAAA,IACJ;AACA,SAAK,UAAU,MAAM;AACjB,YAAM,EAAE,YAAY,SAAS,SAAS,IAAI;AAC1C,UAAI,UAAU;AACV;AAAA,MACJ;AAUA,UAAI,YAAY,eAAe,QAAQ,eAAe,SAAS,SAAS,WAAW,sBAAsB;AACrG,aAAK,UAAU;AAAA,MACnB,OACK;AACD,aAAK,UAAU;AAAA,MACnB;AAAA,IACJ;AACA,SAAK,UAAU,MAAM;AACjB,WAAK,SAAS,KAAK;AAAA,IACvB;AACA,SAAK,SAAS,MAAM;AAChB,WAAK,QAAQ,KAAK;AAAA,IACtB;AAAA,EACJ;AAAA,EACA,eAAe;AAMX,SAAK,YAAY;AAAA,EACrB;AAAA,EACA,mBAAmB;AASf,SAAK,YAAY;AAAA,EACrB;AAAA;AAAA,EAEM,SAAS,IAAI;AAAA;AACf,UAAI,OAAO,QAAW;AAClB,WAAG,gBAAgB;AACnB,WAAG,eAAe;AAAA,MACtB;AACA,WAAK,GAAG,MAAM;AAAA,IAClB;AAAA;AAAA;AAAA,EAEM,kBAAkB,OAAO;AAAA;AAC3B,WAAK,iBAAiB;AAAA,IAC1B;AAAA;AAAA,EACA,oBAAoB;AAChB,QAAI,KAAK,UAAU,QAAW;AAC1B,WAAK,QAAQ,KAAK;AAAA,IACtB;AACA,UAAM,aAAc,KAAK,aAAa,KAAK,GAAG,QAAQ,iBAAiB;AACvE,QAAI,YAAY;AACZ,WAAK,YAAY;AACjB,uBAAiB,YAAY,kBAAkB,KAAK,WAAW;AAAA,IACnE;AAAA,EACJ;AAAA,EACA,uBAAuB;AACnB,UAAM,aAAa,KAAK;AACxB,QAAI,YAAY;AACZ,0BAAoB,YAAY,kBAAkB,KAAK,WAAW;AAClE,WAAK,aAAa;AAAA,IACtB;AAAA,EACJ;AAAA,EACA,IAAI,WAAW;AACX,WAAO,KAAK,GAAG,gBAAgB;AAAA,EACnC;AAAA,EACA,qBAAqB;AACjB,WAAQ,EAAE,OAAO,EAAE,OAAO,cAAc,MAAM,YAAY,GAAG,EAAE,OAAO,EAAE,OAAO,eAAe,MAAM,OAAO,CAAC,GAAG,EAAE,OAAO,EAAE,OAAO,eAAe,CAAC,CAAC;AAAA,EACtJ;AAAA,EACA,SAAS;AACL,UAAM,EAAE,SAAS,UAAU,OAAO,IAAI,SAAS,gBAAgB,UAAU,gBAAgB,UAAU,IAAI;AACvG,UAAM,OAAO,WAAW,IAAI;AAC5B,UAAM,SAAS,YAAY,YAAY,EAAE;AACzC,WAAQ,EAAE,MAAM,EAAE,KAAK,4CAA4C,SAAS,KAAK,SAAS,QAAQ,KAAK,QAAQ,SAAS,KAAK,SAAS,OAAO,mBAAmB,OAAO;AAAA,MAC/J,CAAC,IAAI,GAAG;AAAA,MACR,WAAW;AAAA,MACX,iBAAiB;AAAA,MACjB,kBAAkB;AAAA,MAClB,CAAC,iBAAiB,OAAO,EAAE,GAAG,YAAY;AAAA,MAC1C,CAAC,mBAAmB,SAAS,EAAE,GAAG,cAAc;AAAA,MAChD,CAAC,yBAAyB,cAAc,EAAE,GAAG;AAAA;AAAA,MAE7C,mBAAmB,CAAC;AAAA,MACpB,iBAAiB,CAAC;AAAA,IACtB,CAAC,GAAG,MAAM,SAAS,gBAAgB,UAAU,SAAS,SAAS,iBAAiB,WAAW,SAAS,MAAM,UAAU,eAAe,GAAG,EAAE,SAAS,EAAE,KAAK,4CAA4C,OAAO,gBAAgB,GAAG,EAAE,OAAO,EAAE,KAAK,4CAA4C,OAAO;AAAA,MAC7R,sBAAsB;AAAA,MACtB,6BAA6B,CAAC;AAAA,IAClC,GAAG,MAAM,QAAQ,GAAG,EAAE,QAAQ,EAAE,KAAK,2CAA2C,CAAC,CAAC,GAAG,EAAE,OAAO,EAAE,KAAK,4CAA4C,OAAO,iBAAiB,GAAG,KAAK,mBAAmB,CAAC,CAAC,CAAC;AAAA,EAC/M;AAAA,EACA,IAAI,KAAK;AAAE,WAAO,WAAW,IAAI;AAAA,EAAG;AAAA,EACpC,WAAW,WAAW;AAAE,WAAO;AAAA,MAC3B,SAAS,CAAC,cAAc;AAAA,IAC5B;AAAA,EAAG;AACP;AACA,IAAI,iBAAiB;AACrB,MAAM,QAAQ;AAAA,EACV,KAAK;AAAA,EACL,IAAI;AACR;AAEA,IAAM,mBAAmB;AAEzB,IAAM,kBAAkB;AAExB,IAAM,aAAa,MAAM;AAAA,EACrB,YAAY,SAAS;AACjB,qBAAiB,MAAM,OAAO;AAC9B,SAAK,YAAY,YAAY,MAAM,aAAa,CAAC;AACjD,SAAK,iBAAiB,YAAY,MAAM,kBAAkB,CAAC;AAC3D,SAAK,UAAU,UAAU,eAAe;AACxC,SAAK,eAAe,GAAG,KAAK,OAAO;AACnC,SAAK,cAAc,GAAG,KAAK,OAAO;AAClC,SAAK,UAAU,GAAG,KAAK,OAAO;AAI9B,SAAK,sBAAsB;AAI3B,SAAK,OAAO,KAAK;AACjB,SAAK,mBAAmB,CAAC,UAAU;AAC/B,YAAM,SAAS,KAAK,UAAU;AAE9B,YAAM,QAAQ,OAAO,KAAK,CAAC,UAAU,CAAC,MAAM,QAAQ;AACpD,YAAM,UAAU,OAAO,KAAK,CAAC,UAAU,MAAM,UAAU,SAAS,CAAC,MAAM,QAAQ;AAC/E,UAAI,CAAC,SAAS,CAAC,SAAS;AACpB;AAAA,MACJ;AAGA,YAAM,YAAY,WAAW;AAC7B,iBAAW,SAAS,QAAQ;AACxB,cAAM,WAAW,UAAU,YAAY,IAAI;AAC3C,cAAM,kBAAkB,QAAQ;AAAA,MACpC;AAAA,IACJ;AACA,SAAK,UAAU,CAAC,OAAO;AACnB,SAAG,eAAe;AAOlB,YAAM,gBAAgB,GAAG,UAAU,GAAG,OAAO,QAAQ,WAAW;AAShE,UAAI,iBAAiB,CAAC,cAAc,UAAU;AAC1C,cAAM,eAAe,KAAK;AAC1B,cAAM,WAAW,cAAc;AAC/B,YAAI,aAAa,cAAc;AAC3B,eAAK,QAAQ;AACb,eAAK,gBAAgB,EAAE;AAAA,QAC3B,WACS,KAAK,qBAAqB;AAC/B,eAAK,QAAQ;AACb,eAAK,gBAAgB,EAAE;AAAA,QAC3B;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAAA,EACA,aAAa,OAAO;AAChB,SAAK,iBAAiB,KAAK;AAC3B,SAAK,eAAe,KAAK,EAAE,MAAM,CAAC;AAAA,EACtC;AAAA,EACA,mBAAmB;AAUf,SAAK,aAAa,KAAK,KAAK;AAAA,EAChC;AAAA,EACM,oBAAoB;AAAA;AAGtB,YAAM,SAAS,KAAK,GAAG,cAAc,iBAAiB,KAAK,KAAK,GAAG,cAAc,kBAAkB;AACnG,UAAI,QAAQ;AACR,cAAM,QAAS,KAAK,QAAQ,OAAO,cAAc,WAAW;AAC5D,YAAI,OAAO;AACP,eAAK,UAAU,MAAM,KAAK,KAAK,OAAO;AAAA,QAC1C;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA,EACA,YAAY;AACR,WAAO,MAAM,KAAK,KAAK,GAAG,iBAAiB,WAAW,CAAC;AAAA,EAC3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,gBAAgB,OAAO;AACnB,UAAM,EAAE,MAAM,IAAI;AAClB,SAAK,UAAU,KAAK,EAAE,OAAO,MAAM,CAAC;AAAA,EACxC;AAAA,EACA,UAAU,IAAI;AAGV,UAAM,oBAAoB,CAAC,CAAC,KAAK,GAAG,QAAQ,oBAAoB,KAAK,CAAC,CAAC,KAAK,GAAG,QAAQ,kBAAkB;AACzG,QAAI,GAAG,UAAU,CAAC,KAAK,GAAG,SAAS,GAAG,MAAM,GAAG;AAC3C;AAAA,IACJ;AAGA,UAAM,SAAS,KAAK,UAAU,EAAE,OAAO,CAAC,UAAU,CAAC,MAAM,QAAQ;AAEjE,QAAI,GAAG,UAAU,OAAO,SAAS,GAAG,MAAM,GAAG;AACzC,YAAM,QAAQ,OAAO,UAAU,CAAC,UAAU,UAAU,GAAG,MAAM;AAC7D,YAAM,UAAU,OAAO,KAAK;AAC5B,UAAI;AAGJ,UAAI,CAAC,aAAa,YAAY,EAAE,SAAS,GAAG,GAAG,GAAG;AAC9C,eAAO,UAAU,OAAO,SAAS,IAAI,OAAO,CAAC,IAAI,OAAO,QAAQ,CAAC;AAAA,MACrE;AAGA,UAAI,CAAC,WAAW,WAAW,EAAE,SAAS,GAAG,GAAG,GAAG;AAC3C,eAAO,UAAU,IAAI,OAAO,OAAO,SAAS,CAAC,IAAI,OAAO,QAAQ,CAAC;AAAA,MACrE;AACA,UAAI,QAAQ,OAAO,SAAS,IAAI,GAAG;AAC/B,aAAK,SAAS,EAAE;AAChB,YAAI,CAAC,mBAAmB;AACpB,eAAK,QAAQ,KAAK;AAClB,eAAK,gBAAgB,EAAE;AAAA,QAC3B;AAAA,MACJ;AAGA,UAAI,CAAC,GAAG,EAAE,SAAS,GAAG,GAAG,GAAG;AACxB,cAAM,gBAAgB,KAAK;AAC3B,aAAK,QAAQ,KAAK,uBAAuB,KAAK,UAAU,SAAY,SAAY,QAAQ;AACxF,YAAI,kBAAkB,KAAK,SAAS,KAAK,qBAAqB;AAO1D,eAAK,gBAAgB,EAAE;AAAA,QAC3B;AAGA,WAAG,eAAe;AAAA,MACtB;AAAA,IACJ;AAAA,EACJ;AAAA;AAAA,EAEM,WAAW;AAAA;AACb,YAAM,eAAe,KAAK,UAAU,EAAE,KAAK,CAAC,MAAM,EAAE,aAAa,EAAE;AACnE,uBAAiB,QAAQ,iBAAiB,SAAS,SAAS,aAAa,SAAS;AAAA,IACtF;AAAA;AAAA;AAAA;AAAA;AAAA,EAIA,iBAAiB;AACb,UAAM,EAAE,YAAY,WAAW,cAAc,YAAY,IAAI;AAC7D,UAAM,cAAc,CAAC,CAAC,cAAc,CAAC,CAAC;AACtC,QAAI,CAAC,aAAa;AACd;AAAA,IACJ;AACA,WAAQ,EAAE,OAAO,EAAE,OAAO,kBAAkB,GAAG,EAAE,OAAO,EAAE,IAAI,cAAc,OAAO,cAAc,GAAG,UAAU,GAAG,EAAE,OAAO,EAAE,IAAI,aAAa,OAAO,aAAa,GAAG,SAAS,CAAC;AAAA,EAClL;AAAA,EACA,gBAAgB;AACZ,UAAM,EAAE,IAAI,YAAY,WAAW,cAAc,YAAY,IAAI;AACjE,QAAI,GAAG,UAAU,SAAS,aAAa,KAAK,GAAG,UAAU,SAAS,aAAa,KAAK,WAAW;AAC3F,aAAO;AAAA,IACX;AACA,QAAI,YAAY;AACZ,aAAO;AAAA,IACX;AACA,WAAO;AAAA,EACX;AAAA,EACA,SAAS;AACL,UAAM,EAAE,OAAO,SAAS,IAAI,MAAM,MAAM,IAAI;AAC5C,UAAM,OAAO,WAAW,IAAI;AAC5B,sBAAkB,MAAM,IAAI,MAAM,OAAO,KAAK;AAC9C,WAAQ,EAAE,MAAM,EAAE,KAAK,4CAA4C,MAAM,cAAc,mBAAmB,QAAQ,UAAU,MAAM,oBAAoB,KAAK,cAAc,GAAG,gBAAgB,KAAK,cAAc,MAAM,KAAK,aAAa,SAAS,KAAK,SAAS,OAAO,KAAK,GAAG,KAAK,eAAe,GAAG,EAAE,OAAO,EAAE,KAAK,4CAA4C,OAAO,sBAAsB,GAAG,EAAE,QAAQ,EAAE,KAAK,2CAA2C,CAAC,CAAC,CAAC;AAAA,EACnc;AAAA,EACA,IAAI,KAAK;AAAE,WAAO,WAAW,IAAI;AAAA,EAAG;AAAA,EACpC,WAAW,WAAW;AAAE,WAAO;AAAA,MAC3B,SAAS,CAAC,cAAc;AAAA,IAC5B;AAAA,EAAG;AACP;AACA,IAAI,gBAAgB;AACpB,WAAW,QAAQ;AAAA,EACf,KAAK;AAAA,EACL,IAAI;AACR;",
  "names": []
}
