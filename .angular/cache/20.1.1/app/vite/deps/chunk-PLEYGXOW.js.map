{
  "version": 3,
  "sources": ["../../../../../../node_modules/@ionic/core/dist/esm/framework-delegate-DxcnWic_.js"],
  "sourcesContent": ["/*!\r\n * (C) Ionic http://ionicframework.com - MIT License\r\n */\r\nimport { c as componentOnReady } from './helpers-1O4D2b7y.js';\r\n\r\n// TODO(FW-2832): types\r\nconst attachComponent = async (delegate, container, component, cssClasses, componentProps, inline) => {\r\n    var _a;\r\n    if (delegate) {\r\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\r\n    }\r\n    if (!inline && typeof component !== 'string' && !(component instanceof HTMLElement)) {\r\n        throw new Error('framework delegate is missing');\r\n    }\r\n    const el = typeof component === 'string' ? (_a = container.ownerDocument) === null || _a === void 0 ? void 0 : _a.createElement(component) : component;\r\n    if (cssClasses) {\r\n        cssClasses.forEach((c) => el.classList.add(c));\r\n    }\r\n    if (componentProps) {\r\n        Object.assign(el, componentProps);\r\n    }\r\n    container.appendChild(el);\r\n    await new Promise((resolve) => componentOnReady(el, resolve));\r\n    return el;\r\n};\r\nconst detachComponent = (delegate, element) => {\r\n    if (element) {\r\n        if (delegate) {\r\n            const container = element.parentElement;\r\n            return delegate.removeViewFromDom(container, element);\r\n        }\r\n        element.remove();\r\n    }\r\n    return Promise.resolve();\r\n};\r\nconst CoreDelegate = () => {\r\n    let BaseComponent;\r\n    let Reference;\r\n    const attachViewToDom = async (parentElement, userComponent, userComponentProps = {}, cssClasses = []) => {\r\n        var _a, _b;\r\n        BaseComponent = parentElement;\r\n        let ChildComponent;\r\n        /**\r\n         * If passing in a component via the `component` props\r\n         * we need to append it inside of our overlay component.\r\n         */\r\n        if (userComponent) {\r\n            /**\r\n             * If passing in the tag name, create\r\n             * the element otherwise just get a reference\r\n             * to the component.\r\n             */\r\n            const el = typeof userComponent === 'string' ? (_a = BaseComponent.ownerDocument) === null || _a === void 0 ? void 0 : _a.createElement(userComponent) : userComponent;\r\n            /**\r\n             * Add any css classes passed in\r\n             * via the cssClasses prop on the overlay.\r\n             */\r\n            cssClasses.forEach((c) => el.classList.add(c));\r\n            /**\r\n             * Add any props passed in\r\n             * via the componentProps prop on the overlay.\r\n             */\r\n            Object.assign(el, userComponentProps);\r\n            /**\r\n             * Finally, append the component\r\n             * inside of the overlay component.\r\n             */\r\n            BaseComponent.appendChild(el);\r\n            ChildComponent = el;\r\n            await new Promise((resolve) => componentOnReady(el, resolve));\r\n        }\r\n        else if (BaseComponent.children.length > 0 &&\r\n            (BaseComponent.tagName === 'ION-MODAL' || BaseComponent.tagName === 'ION-POPOVER')) {\r\n            /**\r\n             * The delegate host wrapper el is only needed for modals and popovers\r\n             * because they allow the dev to provide custom content to the overlay.\r\n             */\r\n            const root = (ChildComponent = BaseComponent.children[0]);\r\n            if (!root.classList.contains('ion-delegate-host')) {\r\n                /**\r\n                 * If the root element is not a delegate host, it means\r\n                 * that the overlay has not been presented yet and we need\r\n                 * to create the containing element with the specified classes.\r\n                 */\r\n                const el = (_b = BaseComponent.ownerDocument) === null || _b === void 0 ? void 0 : _b.createElement('div');\r\n                // Add a class to track if the root element was created by the delegate.\r\n                el.classList.add('ion-delegate-host');\r\n                cssClasses.forEach((c) => el.classList.add(c));\r\n                // Move each child from the original template to the new parent element.\r\n                el.append(...BaseComponent.children);\r\n                // Append the new parent element to the original parent element.\r\n                BaseComponent.appendChild(el);\r\n                /**\r\n                 * Update the ChildComponent to be the\r\n                 * newly created div in the event that one\r\n                 * does not already exist.\r\n                 */\r\n                ChildComponent = el;\r\n            }\r\n        }\r\n        /**\r\n         * Get the root of the app and\r\n         * add the overlay there.\r\n         */\r\n        const app = document.querySelector('ion-app') || document.body;\r\n        /**\r\n         * Create a placeholder comment so that\r\n         * we can return this component to where\r\n         * it was previously.\r\n         */\r\n        Reference = document.createComment('ionic teleport');\r\n        BaseComponent.parentNode.insertBefore(Reference, BaseComponent);\r\n        app.appendChild(BaseComponent);\r\n        /**\r\n         * We return the child component rather than the overlay\r\n         * reference itself since modal and popover will\r\n         * use this to wait for any Ionic components in the child view\r\n         * to be ready (i.e. componentOnReady) when using the\r\n         * lazy loaded component bundle.\r\n         *\r\n         * However, we fall back to returning BaseComponent\r\n         * in the event that a modal or popover is presented\r\n         * with no child content.\r\n         */\r\n        return ChildComponent !== null && ChildComponent !== void 0 ? ChildComponent : BaseComponent;\r\n    };\r\n    const removeViewFromDom = () => {\r\n        /**\r\n         * Return component to where it was previously in the DOM.\r\n         */\r\n        if (BaseComponent && Reference) {\r\n            Reference.parentNode.insertBefore(BaseComponent, Reference);\r\n            Reference.remove();\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n    return { attachViewToDom, removeViewFromDom };\r\n};\r\n\r\nexport { CoreDelegate as C, attachComponent as a, detachComponent as d };\r\n"],
  "mappings": ";;;;;;;;AAMA,IAAM,kBAAkB,CAAO,UAAU,WAAW,WAAW,YAAY,gBAAgB,WAAW;AAClG,MAAI;AACJ,MAAI,UAAU;AACV,WAAO,SAAS,gBAAgB,WAAW,WAAW,gBAAgB,UAAU;AAAA,EACpF;AACA,MAAI,CAAC,UAAU,OAAO,cAAc,YAAY,EAAE,qBAAqB,cAAc;AACjF,UAAM,IAAI,MAAM,+BAA+B;AAAA,EACnD;AACA,QAAM,KAAK,OAAO,cAAc,YAAY,KAAK,UAAU,mBAAmB,QAAQ,OAAO,SAAS,SAAS,GAAG,cAAc,SAAS,IAAI;AAC7I,MAAI,YAAY;AACZ,eAAW,QAAQ,CAAC,MAAM,GAAG,UAAU,IAAI,CAAC,CAAC;AAAA,EACjD;AACA,MAAI,gBAAgB;AAChB,WAAO,OAAO,IAAI,cAAc;AAAA,EACpC;AACA,YAAU,YAAY,EAAE;AACxB,QAAM,IAAI,QAAQ,CAAC,YAAY,iBAAiB,IAAI,OAAO,CAAC;AAC5D,SAAO;AACX;AACA,IAAM,kBAAkB,CAAC,UAAU,YAAY;AAC3C,MAAI,SAAS;AACT,QAAI,UAAU;AACV,YAAM,YAAY,QAAQ;AAC1B,aAAO,SAAS,kBAAkB,WAAW,OAAO;AAAA,IACxD;AACA,YAAQ,OAAO;AAAA,EACnB;AACA,SAAO,QAAQ,QAAQ;AAC3B;AACA,IAAM,eAAe,MAAM;AACvB,MAAI;AACJ,MAAI;AACJ,QAAM,kBAAkB,CAAO,IAAe,OAA4D,sBAA3E,IAAe,IAA4D,mBAA3E,eAAe,eAAe,qBAAqB,CAAC,GAAG,aAAa,CAAC,GAAM;AACtG,QAAI,IAAI;AACR,oBAAgB;AAChB,QAAI;AAKJ,QAAI,eAAe;AAMf,YAAM,KAAK,OAAO,kBAAkB,YAAY,KAAK,cAAc,mBAAmB,QAAQ,OAAO,SAAS,SAAS,GAAG,cAAc,aAAa,IAAI;AAKzJ,iBAAW,QAAQ,CAAC,MAAM,GAAG,UAAU,IAAI,CAAC,CAAC;AAK7C,aAAO,OAAO,IAAI,kBAAkB;AAKpC,oBAAc,YAAY,EAAE;AAC5B,uBAAiB;AACjB,YAAM,IAAI,QAAQ,CAAC,YAAY,iBAAiB,IAAI,OAAO,CAAC;AAAA,IAChE,WACS,cAAc,SAAS,SAAS,MACpC,cAAc,YAAY,eAAe,cAAc,YAAY,gBAAgB;AAKpF,YAAM,OAAQ,iBAAiB,cAAc,SAAS,CAAC;AACvD,UAAI,CAAC,KAAK,UAAU,SAAS,mBAAmB,GAAG;AAM/C,cAAM,MAAM,KAAK,cAAc,mBAAmB,QAAQ,OAAO,SAAS,SAAS,GAAG,cAAc,KAAK;AAEzG,WAAG,UAAU,IAAI,mBAAmB;AACpC,mBAAW,QAAQ,CAAC,MAAM,GAAG,UAAU,IAAI,CAAC,CAAC;AAE7C,WAAG,OAAO,GAAG,cAAc,QAAQ;AAEnC,sBAAc,YAAY,EAAE;AAM5B,yBAAiB;AAAA,MACrB;AAAA,IACJ;AAKA,UAAM,MAAM,SAAS,cAAc,SAAS,KAAK,SAAS;AAM1D,gBAAY,SAAS,cAAc,gBAAgB;AACnD,kBAAc,WAAW,aAAa,WAAW,aAAa;AAC9D,QAAI,YAAY,aAAa;AAY7B,WAAO,mBAAmB,QAAQ,mBAAmB,SAAS,iBAAiB;AAAA,EACnF;AACA,QAAM,oBAAoB,MAAM;AAI5B,QAAI,iBAAiB,WAAW;AAC5B,gBAAU,WAAW,aAAa,eAAe,SAAS;AAC1D,gBAAU,OAAO;AAAA,IACrB;AACA,WAAO,QAAQ,QAAQ;AAAA,EAC3B;AACA,SAAO,EAAE,iBAAiB,kBAAkB;AAChD;",
  "names": []
}
