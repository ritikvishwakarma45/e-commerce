{
  "version": 3,
  "sources": ["../../../../../../node_modules/@ionic/core/dist/esm/animation-BWcUKtbn.js"],
  "sourcesContent": ["/*!\r\n * (C) Ionic http://ionicframework.com - MIT License\r\n */\r\nimport { o as printIonError } from './index-B_U9CtaY.js';\r\nimport { w as win } from './index-ZjP4CjeZ.js';\r\n\r\nlet animationPrefix;\r\nconst getAnimationPrefix = (el) => {\r\n    if (animationPrefix === undefined) {\r\n        const supportsUnprefixed = el.style.animationName !== undefined;\r\n        const supportsWebkitPrefix = el.style.webkitAnimationName !== undefined;\r\n        animationPrefix = !supportsUnprefixed && supportsWebkitPrefix ? '-webkit-' : '';\r\n    }\r\n    return animationPrefix;\r\n};\r\nconst setStyleProperty = (element, propertyName, value) => {\r\n    const prefix = propertyName.startsWith('animation') ? getAnimationPrefix(element) : '';\r\n    element.style.setProperty(prefix + propertyName, value);\r\n};\r\nconst addClassToArray = (classes = [], className) => {\r\n    if (className !== undefined) {\r\n        const classNameToAppend = Array.isArray(className) ? className : [className];\r\n        return [...classes, ...classNameToAppend];\r\n    }\r\n    return classes;\r\n};\r\n\r\nconst createAnimation = (animationId) => {\r\n    let _delay;\r\n    let _duration;\r\n    let _easing;\r\n    let _iterations;\r\n    let _fill;\r\n    let _direction;\r\n    let _keyframes = [];\r\n    let beforeAddClasses = [];\r\n    let beforeRemoveClasses = [];\r\n    let initialized = false;\r\n    let parentAnimation;\r\n    let beforeStylesValue = {};\r\n    let afterAddClasses = [];\r\n    let afterRemoveClasses = [];\r\n    let afterStylesValue = {};\r\n    let numAnimationsRunning = 0;\r\n    let shouldForceLinearEasing = false;\r\n    let shouldForceSyncPlayback = false;\r\n    let forceDirectionValue;\r\n    let forceDurationValue;\r\n    let forceDelayValue;\r\n    let willComplete = true;\r\n    let finished = false;\r\n    let shouldCalculateNumAnimations = true;\r\n    let ani;\r\n    let paused = false;\r\n    const id = animationId;\r\n    const onFinishCallbacks = [];\r\n    const onFinishOneTimeCallbacks = [];\r\n    const onStopOneTimeCallbacks = [];\r\n    const elements = [];\r\n    const childAnimations = [];\r\n    const stylesheets = [];\r\n    const _beforeAddReadFunctions = [];\r\n    const _beforeAddWriteFunctions = [];\r\n    const _afterAddReadFunctions = [];\r\n    const _afterAddWriteFunctions = [];\r\n    const webAnimations = [];\r\n    const supportsAnimationEffect = typeof AnimationEffect === 'function' ||\r\n        (win !== undefined && typeof win.AnimationEffect === 'function');\r\n    /**\r\n     * This is a feature detection for Web Animations.\r\n     *\r\n     * Certain environments such as emulated browser environments for testing,\r\n     * do not support Web Animations. As a result, we need to check for support\r\n     * and provide a fallback to test certain functionality related to Web Animations.\r\n     */\r\n    const supportsWebAnimations = typeof Element === 'function' &&\r\n        typeof Element.prototype.animate === 'function' &&\r\n        supportsAnimationEffect;\r\n    const getWebAnimations = () => {\r\n        return webAnimations;\r\n    };\r\n    const destroy = (clearStyleSheets) => {\r\n        childAnimations.forEach((childAnimation) => {\r\n            childAnimation.destroy(clearStyleSheets);\r\n        });\r\n        cleanUp(clearStyleSheets);\r\n        elements.length = 0;\r\n        childAnimations.length = 0;\r\n        _keyframes.length = 0;\r\n        clearOnFinish();\r\n        initialized = false;\r\n        shouldCalculateNumAnimations = true;\r\n        return ani;\r\n    };\r\n    /**\r\n     * Cancels any Web Animations, removes\r\n     * any animation properties from the\r\n     * animation's elements, and removes the\r\n     * animation's stylesheets from the DOM.\r\n     */\r\n    const cleanUp = (clearStyleSheets) => {\r\n        cleanUpElements();\r\n        if (clearStyleSheets) {\r\n            cleanUpStyleSheets();\r\n        }\r\n    };\r\n    const resetFlags = () => {\r\n        shouldForceLinearEasing = false;\r\n        shouldForceSyncPlayback = false;\r\n        shouldCalculateNumAnimations = true;\r\n        forceDirectionValue = undefined;\r\n        forceDurationValue = undefined;\r\n        forceDelayValue = undefined;\r\n        numAnimationsRunning = 0;\r\n        finished = false;\r\n        willComplete = true;\r\n        paused = false;\r\n    };\r\n    const isRunning = () => {\r\n        return numAnimationsRunning !== 0 && !paused;\r\n    };\r\n    /**\r\n     * @internal\r\n     * Remove a callback from a chosen callback array\r\n     * @param callbackToRemove: A reference to the callback that should be removed\r\n     * @param callbackObjects: An array of callbacks that callbackToRemove should be removed from.\r\n     */\r\n    const clearCallback = (callbackToRemove, callbackObjects) => {\r\n        const index = callbackObjects.findIndex((callbackObject) => callbackObject.c === callbackToRemove);\r\n        if (index > -1) {\r\n            callbackObjects.splice(index, 1);\r\n        }\r\n    };\r\n    /**\r\n     * @internal\r\n     * Add a callback to be fired when an animation is stopped/cancelled.\r\n     * @param callback: A reference to the callback that should be fired\r\n     * @param opts: Any options associated with this particular callback\r\n     */\r\n    const onStop = (callback, opts) => {\r\n        onStopOneTimeCallbacks.push({ c: callback, o: opts });\r\n        return ani;\r\n    };\r\n    const onFinish = (callback, opts) => {\r\n        const callbacks = (opts === null || opts === void 0 ? void 0 : opts.oneTimeCallback) ? onFinishOneTimeCallbacks : onFinishCallbacks;\r\n        callbacks.push({ c: callback, o: opts });\r\n        return ani;\r\n    };\r\n    const clearOnFinish = () => {\r\n        onFinishCallbacks.length = 0;\r\n        onFinishOneTimeCallbacks.length = 0;\r\n        return ani;\r\n    };\r\n    /**\r\n     * Cancels any Web Animations and removes\r\n     * any animation properties from the\r\n     * the animation's elements.\r\n     */\r\n    const cleanUpElements = () => {\r\n        if (supportsWebAnimations) {\r\n            webAnimations.forEach((animation) => {\r\n                animation.cancel();\r\n            });\r\n            webAnimations.length = 0;\r\n        }\r\n    };\r\n    /**\r\n     * Removes the animation's stylesheets\r\n     * from the DOM.\r\n     */\r\n    const cleanUpStyleSheets = () => {\r\n        stylesheets.forEach((stylesheet) => {\r\n            /**\r\n             * When sharing stylesheets, it's possible\r\n             * for another animation to have already\r\n             * cleaned up a particular stylesheet\r\n             */\r\n            if (stylesheet === null || stylesheet === void 0 ? void 0 : stylesheet.parentNode) {\r\n                stylesheet.parentNode.removeChild(stylesheet);\r\n            }\r\n        });\r\n        stylesheets.length = 0;\r\n    };\r\n    const beforeAddRead = (readFn) => {\r\n        _beforeAddReadFunctions.push(readFn);\r\n        return ani;\r\n    };\r\n    const beforeAddWrite = (writeFn) => {\r\n        _beforeAddWriteFunctions.push(writeFn);\r\n        return ani;\r\n    };\r\n    const afterAddRead = (readFn) => {\r\n        _afterAddReadFunctions.push(readFn);\r\n        return ani;\r\n    };\r\n    const afterAddWrite = (writeFn) => {\r\n        _afterAddWriteFunctions.push(writeFn);\r\n        return ani;\r\n    };\r\n    const beforeAddClass = (className) => {\r\n        beforeAddClasses = addClassToArray(beforeAddClasses, className);\r\n        return ani;\r\n    };\r\n    const beforeRemoveClass = (className) => {\r\n        beforeRemoveClasses = addClassToArray(beforeRemoveClasses, className);\r\n        return ani;\r\n    };\r\n    /**\r\n     * Set CSS inline styles to the animation's\r\n     * elements before the animation begins.\r\n     */\r\n    const beforeStyles = (styles = {}) => {\r\n        beforeStylesValue = styles;\r\n        return ani;\r\n    };\r\n    /**\r\n     * Clear CSS inline styles from the animation's\r\n     * elements before the animation begins.\r\n     */\r\n    const beforeClearStyles = (propertyNames = []) => {\r\n        for (const property of propertyNames) {\r\n            beforeStylesValue[property] = '';\r\n        }\r\n        return ani;\r\n    };\r\n    const afterAddClass = (className) => {\r\n        afterAddClasses = addClassToArray(afterAddClasses, className);\r\n        return ani;\r\n    };\r\n    const afterRemoveClass = (className) => {\r\n        afterRemoveClasses = addClassToArray(afterRemoveClasses, className);\r\n        return ani;\r\n    };\r\n    const afterStyles = (styles = {}) => {\r\n        afterStylesValue = styles;\r\n        return ani;\r\n    };\r\n    const afterClearStyles = (propertyNames = []) => {\r\n        for (const property of propertyNames) {\r\n            afterStylesValue[property] = '';\r\n        }\r\n        return ani;\r\n    };\r\n    const getFill = () => {\r\n        if (_fill !== undefined) {\r\n            return _fill;\r\n        }\r\n        if (parentAnimation) {\r\n            return parentAnimation.getFill();\r\n        }\r\n        return 'both';\r\n    };\r\n    const getDirection = () => {\r\n        if (forceDirectionValue !== undefined) {\r\n            return forceDirectionValue;\r\n        }\r\n        if (_direction !== undefined) {\r\n            return _direction;\r\n        }\r\n        if (parentAnimation) {\r\n            return parentAnimation.getDirection();\r\n        }\r\n        return 'normal';\r\n    };\r\n    const getEasing = () => {\r\n        if (shouldForceLinearEasing) {\r\n            return 'linear';\r\n        }\r\n        if (_easing !== undefined) {\r\n            return _easing;\r\n        }\r\n        if (parentAnimation) {\r\n            return parentAnimation.getEasing();\r\n        }\r\n        return 'linear';\r\n    };\r\n    const getDuration = () => {\r\n        if (shouldForceSyncPlayback) {\r\n            return 0;\r\n        }\r\n        if (forceDurationValue !== undefined) {\r\n            return forceDurationValue;\r\n        }\r\n        if (_duration !== undefined) {\r\n            return _duration;\r\n        }\r\n        if (parentAnimation) {\r\n            return parentAnimation.getDuration();\r\n        }\r\n        return 0;\r\n    };\r\n    const getIterations = () => {\r\n        if (_iterations !== undefined) {\r\n            return _iterations;\r\n        }\r\n        if (parentAnimation) {\r\n            return parentAnimation.getIterations();\r\n        }\r\n        return 1;\r\n    };\r\n    const getDelay = () => {\r\n        if (forceDelayValue !== undefined) {\r\n            return forceDelayValue;\r\n        }\r\n        if (_delay !== undefined) {\r\n            return _delay;\r\n        }\r\n        if (parentAnimation) {\r\n            return parentAnimation.getDelay();\r\n        }\r\n        return 0;\r\n    };\r\n    const getKeyframes = () => {\r\n        return _keyframes;\r\n    };\r\n    const direction = (animationDirection) => {\r\n        _direction = animationDirection;\r\n        update(true);\r\n        return ani;\r\n    };\r\n    const fill = (animationFill) => {\r\n        _fill = animationFill;\r\n        update(true);\r\n        return ani;\r\n    };\r\n    const delay = (animationDelay) => {\r\n        _delay = animationDelay;\r\n        update(true);\r\n        return ani;\r\n    };\r\n    const easing = (animationEasing) => {\r\n        _easing = animationEasing;\r\n        update(true);\r\n        return ani;\r\n    };\r\n    const duration = (animationDuration) => {\r\n        /**\r\n         * CSS Animation Durations of 0ms work fine on Chrome\r\n         * but do not run on Safari, so force it to 1ms to\r\n         * get it to run on both platforms.\r\n         */\r\n        if (!supportsWebAnimations && animationDuration === 0) {\r\n            animationDuration = 1;\r\n        }\r\n        _duration = animationDuration;\r\n        update(true);\r\n        return ani;\r\n    };\r\n    const iterations = (animationIterations) => {\r\n        _iterations = animationIterations;\r\n        update(true);\r\n        return ani;\r\n    };\r\n    const parent = (animation) => {\r\n        parentAnimation = animation;\r\n        return ani;\r\n    };\r\n    const addElement = (el) => {\r\n        if (el != null) {\r\n            if (el.nodeType === 1) {\r\n                elements.push(el);\r\n            }\r\n            else if (el.length >= 0) {\r\n                for (let i = 0; i < el.length; i++) {\r\n                    elements.push(el[i]);\r\n                }\r\n            }\r\n            else {\r\n                printIonError('createAnimation - Invalid addElement value.');\r\n            }\r\n        }\r\n        return ani;\r\n    };\r\n    const addAnimation = (animationToAdd) => {\r\n        if (animationToAdd != null) {\r\n            if (Array.isArray(animationToAdd)) {\r\n                for (const animation of animationToAdd) {\r\n                    animation.parent(ani);\r\n                    childAnimations.push(animation);\r\n                }\r\n            }\r\n            else {\r\n                animationToAdd.parent(ani);\r\n                childAnimations.push(animationToAdd);\r\n            }\r\n        }\r\n        return ani;\r\n    };\r\n    const keyframes = (keyframeValues) => {\r\n        const different = _keyframes !== keyframeValues;\r\n        _keyframes = keyframeValues;\r\n        if (different) {\r\n            updateKeyframes(_keyframes);\r\n        }\r\n        return ani;\r\n    };\r\n    const updateKeyframes = (keyframeValues) => {\r\n        if (supportsWebAnimations) {\r\n            getWebAnimations().forEach((animation) => {\r\n                /**\r\n                 * animation.effect's type is AnimationEffect.\r\n                 * However, in this case we have a more specific\r\n                 * type of AnimationEffect called KeyframeEffect which\r\n                 * inherits from AnimationEffect. As a result,\r\n                 * we cast animation.effect to KeyframeEffect.\r\n                 */\r\n                const keyframeEffect = animation.effect;\r\n                /**\r\n                 * setKeyframes is not supported in all browser\r\n                 * versions that Ionic supports, so we need to\r\n                 * check for support before using it.\r\n                 */\r\n                // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\r\n                if (keyframeEffect.setKeyframes) {\r\n                    keyframeEffect.setKeyframes(keyframeValues);\r\n                }\r\n                else {\r\n                    const newEffect = new KeyframeEffect(keyframeEffect.target, keyframeValues, keyframeEffect.getTiming());\r\n                    animation.effect = newEffect;\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Run all \"before\" animation hooks.\r\n     */\r\n    const beforeAnimation = () => {\r\n        // Runs all before read callbacks\r\n        _beforeAddReadFunctions.forEach((callback) => callback());\r\n        // Runs all before write callbacks\r\n        _beforeAddWriteFunctions.forEach((callback) => callback());\r\n        // Updates styles and classes before animation runs\r\n        const addClasses = beforeAddClasses;\r\n        const removeClasses = beforeRemoveClasses;\r\n        const styles = beforeStylesValue;\r\n        elements.forEach((el) => {\r\n            const elementClassList = el.classList;\r\n            addClasses.forEach((c) => elementClassList.add(c));\r\n            removeClasses.forEach((c) => elementClassList.remove(c));\r\n            for (const property in styles) {\r\n                // eslint-disable-next-line no-prototype-builtins\r\n                if (styles.hasOwnProperty(property)) {\r\n                    setStyleProperty(el, property, styles[property]);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Run all \"after\" animation hooks.\r\n     */\r\n    const afterAnimation = () => {\r\n        // Runs all after read callbacks\r\n        _afterAddReadFunctions.forEach((callback) => callback());\r\n        // Runs all after write callbacks\r\n        _afterAddWriteFunctions.forEach((callback) => callback());\r\n        // Updates styles and classes before animation ends\r\n        const currentStep = willComplete ? 1 : 0;\r\n        const addClasses = afterAddClasses;\r\n        const removeClasses = afterRemoveClasses;\r\n        const styles = afterStylesValue;\r\n        elements.forEach((el) => {\r\n            const elementClassList = el.classList;\r\n            addClasses.forEach((c) => elementClassList.add(c));\r\n            removeClasses.forEach((c) => elementClassList.remove(c));\r\n            for (const property in styles) {\r\n                // eslint-disable-next-line no-prototype-builtins\r\n                if (styles.hasOwnProperty(property)) {\r\n                    setStyleProperty(el, property, styles[property]);\r\n                }\r\n            }\r\n        });\r\n        /**\r\n         * Clean up any value coercion before\r\n         * the user callbacks fire otherwise\r\n         * they may get stale values. For example,\r\n         * if someone calls progressStart(0) the\r\n         * animation may still be reversed.\r\n         */\r\n        forceDurationValue = undefined;\r\n        forceDirectionValue = undefined;\r\n        forceDelayValue = undefined;\r\n        onFinishCallbacks.forEach((onFinishCallback) => {\r\n            return onFinishCallback.c(currentStep, ani);\r\n        });\r\n        onFinishOneTimeCallbacks.forEach((onFinishCallback) => {\r\n            return onFinishCallback.c(currentStep, ani);\r\n        });\r\n        onFinishOneTimeCallbacks.length = 0;\r\n        shouldCalculateNumAnimations = true;\r\n        if (willComplete) {\r\n            finished = true;\r\n        }\r\n        willComplete = true;\r\n    };\r\n    const animationFinish = () => {\r\n        if (numAnimationsRunning === 0) {\r\n            return;\r\n        }\r\n        numAnimationsRunning--;\r\n        if (numAnimationsRunning === 0) {\r\n            afterAnimation();\r\n            if (parentAnimation) {\r\n                parentAnimation.animationFinish();\r\n            }\r\n        }\r\n    };\r\n    const initializeWebAnimation = () => {\r\n        elements.forEach((element) => {\r\n            const animation = element.animate(_keyframes, {\r\n                id,\r\n                delay: getDelay(),\r\n                duration: getDuration(),\r\n                easing: getEasing(),\r\n                iterations: getIterations(),\r\n                fill: getFill(),\r\n                direction: getDirection(),\r\n            });\r\n            animation.pause();\r\n            webAnimations.push(animation);\r\n        });\r\n        if (webAnimations.length > 0) {\r\n            webAnimations[0].onfinish = () => {\r\n                animationFinish();\r\n            };\r\n        }\r\n    };\r\n    const initializeAnimation = () => {\r\n        beforeAnimation();\r\n        if (_keyframes.length > 0) {\r\n            if (supportsWebAnimations) {\r\n                initializeWebAnimation();\r\n            }\r\n        }\r\n        initialized = true;\r\n    };\r\n    const setAnimationStep = (step) => {\r\n        step = Math.min(Math.max(step, 0), 0.9999);\r\n        if (supportsWebAnimations) {\r\n            webAnimations.forEach((animation) => {\r\n                // When creating the animation the delay is guaranteed to be set to a number.\r\n                animation.currentTime = animation.effect.getComputedTiming().delay + getDuration() * step;\r\n                animation.pause();\r\n            });\r\n        }\r\n    };\r\n    const updateWebAnimation = (step) => {\r\n        webAnimations.forEach((animation) => {\r\n            animation.effect.updateTiming({\r\n                delay: getDelay(),\r\n                duration: getDuration(),\r\n                easing: getEasing(),\r\n                iterations: getIterations(),\r\n                fill: getFill(),\r\n                direction: getDirection(),\r\n            });\r\n        });\r\n        if (step !== undefined) {\r\n            setAnimationStep(step);\r\n        }\r\n    };\r\n    const update = (deep = false, toggleAnimationName = true, step) => {\r\n        if (deep) {\r\n            childAnimations.forEach((animation) => {\r\n                animation.update(deep, toggleAnimationName, step);\r\n            });\r\n        }\r\n        if (supportsWebAnimations) {\r\n            updateWebAnimation(step);\r\n        }\r\n        return ani;\r\n    };\r\n    const progressStart = (forceLinearEasing = false, step) => {\r\n        childAnimations.forEach((animation) => {\r\n            animation.progressStart(forceLinearEasing, step);\r\n        });\r\n        pauseAnimation();\r\n        shouldForceLinearEasing = forceLinearEasing;\r\n        if (!initialized) {\r\n            initializeAnimation();\r\n        }\r\n        update(false, true, step);\r\n        return ani;\r\n    };\r\n    const progressStep = (step) => {\r\n        childAnimations.forEach((animation) => {\r\n            animation.progressStep(step);\r\n        });\r\n        setAnimationStep(step);\r\n        return ani;\r\n    };\r\n    const progressEnd = (playTo, step, dur) => {\r\n        shouldForceLinearEasing = false;\r\n        childAnimations.forEach((animation) => {\r\n            animation.progressEnd(playTo, step, dur);\r\n        });\r\n        if (dur !== undefined) {\r\n            forceDurationValue = dur;\r\n        }\r\n        finished = false;\r\n        willComplete = true;\r\n        if (playTo === 0) {\r\n            forceDirectionValue = getDirection() === 'reverse' ? 'normal' : 'reverse';\r\n            if (forceDirectionValue === 'reverse') {\r\n                willComplete = false;\r\n            }\r\n            if (supportsWebAnimations) {\r\n                update();\r\n                setAnimationStep(1 - step);\r\n            }\r\n            else {\r\n                forceDelayValue = (1 - step) * getDuration() * -1;\r\n                update(false, false);\r\n            }\r\n        }\r\n        else if (playTo === 1) {\r\n            if (supportsWebAnimations) {\r\n                update();\r\n                setAnimationStep(step);\r\n            }\r\n            else {\r\n                forceDelayValue = step * getDuration() * -1;\r\n                update(false, false);\r\n            }\r\n        }\r\n        if (playTo !== undefined && !parentAnimation) {\r\n            play();\r\n        }\r\n        return ani;\r\n    };\r\n    const pauseAnimation = () => {\r\n        if (initialized) {\r\n            if (supportsWebAnimations) {\r\n                webAnimations.forEach((animation) => {\r\n                    animation.pause();\r\n                });\r\n            }\r\n            else {\r\n                elements.forEach((element) => {\r\n                    setStyleProperty(element, 'animation-play-state', 'paused');\r\n                });\r\n            }\r\n            paused = true;\r\n        }\r\n    };\r\n    const pause = () => {\r\n        childAnimations.forEach((animation) => {\r\n            animation.pause();\r\n        });\r\n        pauseAnimation();\r\n        return ani;\r\n    };\r\n    const playCSSAnimations = () => {\r\n        animationFinish();\r\n    };\r\n    const playWebAnimations = () => {\r\n        webAnimations.forEach((animation) => {\r\n            animation.play();\r\n        });\r\n        if (_keyframes.length === 0 || elements.length === 0) {\r\n            animationFinish();\r\n        }\r\n    };\r\n    const resetAnimation = () => {\r\n        if (supportsWebAnimations) {\r\n            setAnimationStep(0);\r\n            updateWebAnimation();\r\n        }\r\n    };\r\n    const play = (opts) => {\r\n        return new Promise((resolve) => {\r\n            if (opts === null || opts === void 0 ? void 0 : opts.sync) {\r\n                shouldForceSyncPlayback = true;\r\n                onFinish(() => (shouldForceSyncPlayback = false), { oneTimeCallback: true });\r\n            }\r\n            if (!initialized) {\r\n                initializeAnimation();\r\n            }\r\n            if (finished) {\r\n                resetAnimation();\r\n                finished = false;\r\n            }\r\n            if (shouldCalculateNumAnimations) {\r\n                numAnimationsRunning = childAnimations.length + 1;\r\n                shouldCalculateNumAnimations = false;\r\n            }\r\n            /**\r\n             * When one of these callbacks fires we\r\n             * need to clear the other's callback otherwise\r\n             * you can potentially get these callbacks\r\n             * firing multiple times if the play method\r\n             * is subsequently called.\r\n             * Example:\r\n             * animation.play() (onStop and onFinish callbacks are registered)\r\n             * animation.stop() (onStop callback is fired, onFinish is not)\r\n             * animation.play() (onStop and onFinish callbacks are registered)\r\n             * Total onStop callbacks: 1\r\n             * Total onFinish callbacks: 2\r\n             */\r\n            const onStopCallback = () => {\r\n                clearCallback(onFinishCallback, onFinishOneTimeCallbacks);\r\n                resolve();\r\n            };\r\n            const onFinishCallback = () => {\r\n                clearCallback(onStopCallback, onStopOneTimeCallbacks);\r\n                resolve();\r\n            };\r\n            /**\r\n             * The play method resolves when an animation\r\n             * run either finishes or is cancelled.\r\n             */\r\n            onFinish(onFinishCallback, { oneTimeCallback: true });\r\n            onStop(onStopCallback, { oneTimeCallback: true });\r\n            childAnimations.forEach((animation) => {\r\n                animation.play();\r\n            });\r\n            if (supportsWebAnimations) {\r\n                playWebAnimations();\r\n            }\r\n            else {\r\n                playCSSAnimations();\r\n            }\r\n            paused = false;\r\n        });\r\n    };\r\n    /**\r\n     * Stops an animation and resets it state to the\r\n     * beginning. This does not fire any onFinish\r\n     * callbacks because the animation did not finish.\r\n     * However, since the animation was not destroyed\r\n     * (i.e. the animation could run again) we do not\r\n     * clear the onFinish callbacks.\r\n     */\r\n    const stop = () => {\r\n        childAnimations.forEach((animation) => {\r\n            animation.stop();\r\n        });\r\n        if (initialized) {\r\n            cleanUpElements();\r\n            initialized = false;\r\n        }\r\n        resetFlags();\r\n        onStopOneTimeCallbacks.forEach((onStopCallback) => onStopCallback.c(0, ani));\r\n        onStopOneTimeCallbacks.length = 0;\r\n    };\r\n    const from = (property, value) => {\r\n        const firstFrame = _keyframes[0];\r\n        if (firstFrame !== undefined && (firstFrame.offset === undefined || firstFrame.offset === 0)) {\r\n            firstFrame[property] = value;\r\n        }\r\n        else {\r\n            _keyframes = [{ offset: 0, [property]: value }, ..._keyframes];\r\n        }\r\n        return ani;\r\n    };\r\n    const to = (property, value) => {\r\n        const lastFrame = _keyframes[_keyframes.length - 1];\r\n        if (lastFrame !== undefined && (lastFrame.offset === undefined || lastFrame.offset === 1)) {\r\n            lastFrame[property] = value;\r\n        }\r\n        else {\r\n            _keyframes = [..._keyframes, { offset: 1, [property]: value }];\r\n        }\r\n        return ani;\r\n    };\r\n    const fromTo = (property, fromValue, toValue) => {\r\n        return from(property, fromValue).to(property, toValue);\r\n    };\r\n    return (ani = {\r\n        parentAnimation,\r\n        elements,\r\n        childAnimations,\r\n        id,\r\n        animationFinish,\r\n        from,\r\n        to,\r\n        fromTo,\r\n        parent,\r\n        play,\r\n        pause,\r\n        stop,\r\n        destroy,\r\n        keyframes,\r\n        addAnimation,\r\n        addElement,\r\n        update,\r\n        fill,\r\n        direction,\r\n        iterations,\r\n        duration,\r\n        easing,\r\n        delay,\r\n        getWebAnimations,\r\n        getKeyframes,\r\n        getFill,\r\n        getDirection,\r\n        getDelay,\r\n        getIterations,\r\n        getEasing,\r\n        getDuration,\r\n        afterAddRead,\r\n        afterAddWrite,\r\n        afterClearStyles,\r\n        afterStyles,\r\n        afterRemoveClass,\r\n        afterAddClass,\r\n        beforeAddRead,\r\n        beforeAddWrite,\r\n        beforeClearStyles,\r\n        beforeStyles,\r\n        beforeRemoveClass,\r\n        beforeAddClass,\r\n        onFinish,\r\n        isRunning,\r\n        progressStart,\r\n        progressStep,\r\n        progressEnd,\r\n    });\r\n};\r\n\r\nexport { createAnimation as c };\r\n"],
  "mappings": ";;;;;;;;AAMA,IAAI;AACJ,IAAM,qBAAqB,CAAC,OAAO;AAC/B,MAAI,oBAAoB,QAAW;AAC/B,UAAM,qBAAqB,GAAG,MAAM,kBAAkB;AACtD,UAAM,uBAAuB,GAAG,MAAM,wBAAwB;AAC9D,sBAAkB,CAAC,sBAAsB,uBAAuB,aAAa;AAAA,EACjF;AACA,SAAO;AACX;AACA,IAAM,mBAAmB,CAAC,SAAS,cAAc,UAAU;AACvD,QAAM,SAAS,aAAa,WAAW,WAAW,IAAI,mBAAmB,OAAO,IAAI;AACpF,UAAQ,MAAM,YAAY,SAAS,cAAc,KAAK;AAC1D;AACA,IAAM,kBAAkB,CAAC,UAAU,CAAC,GAAG,cAAc;AACjD,MAAI,cAAc,QAAW;AACzB,UAAM,oBAAoB,MAAM,QAAQ,SAAS,IAAI,YAAY,CAAC,SAAS;AAC3E,WAAO,CAAC,GAAG,SAAS,GAAG,iBAAiB;AAAA,EAC5C;AACA,SAAO;AACX;AAEA,IAAM,kBAAkB,CAAC,gBAAgB;AACrC,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI,aAAa,CAAC;AAClB,MAAI,mBAAmB,CAAC;AACxB,MAAI,sBAAsB,CAAC;AAC3B,MAAI,cAAc;AAClB,MAAI;AACJ,MAAI,oBAAoB,CAAC;AACzB,MAAI,kBAAkB,CAAC;AACvB,MAAI,qBAAqB,CAAC;AAC1B,MAAI,mBAAmB,CAAC;AACxB,MAAI,uBAAuB;AAC3B,MAAI,0BAA0B;AAC9B,MAAI,0BAA0B;AAC9B,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI,eAAe;AACnB,MAAI,WAAW;AACf,MAAI,+BAA+B;AACnC,MAAI;AACJ,MAAI,SAAS;AACb,QAAM,KAAK;AACX,QAAM,oBAAoB,CAAC;AAC3B,QAAM,2BAA2B,CAAC;AAClC,QAAM,yBAAyB,CAAC;AAChC,QAAM,WAAW,CAAC;AAClB,QAAM,kBAAkB,CAAC;AACzB,QAAM,cAAc,CAAC;AACrB,QAAM,0BAA0B,CAAC;AACjC,QAAM,2BAA2B,CAAC;AAClC,QAAM,yBAAyB,CAAC;AAChC,QAAM,0BAA0B,CAAC;AACjC,QAAM,gBAAgB,CAAC;AACvB,QAAM,0BAA0B,OAAO,oBAAoB,cACtD,QAAQ,UAAa,OAAO,IAAI,oBAAoB;AAQzD,QAAM,wBAAwB,OAAO,YAAY,cAC7C,OAAO,QAAQ,UAAU,YAAY,cACrC;AACJ,QAAM,mBAAmB,MAAM;AAC3B,WAAO;AAAA,EACX;AACA,QAAM,UAAU,CAAC,qBAAqB;AAClC,oBAAgB,QAAQ,CAAC,mBAAmB;AACxC,qBAAe,QAAQ,gBAAgB;AAAA,IAC3C,CAAC;AACD,YAAQ,gBAAgB;AACxB,aAAS,SAAS;AAClB,oBAAgB,SAAS;AACzB,eAAW,SAAS;AACpB,kBAAc;AACd,kBAAc;AACd,mCAA+B;AAC/B,WAAO;AAAA,EACX;AAOA,QAAM,UAAU,CAAC,qBAAqB;AAClC,oBAAgB;AAChB,QAAI,kBAAkB;AAClB,yBAAmB;AAAA,IACvB;AAAA,EACJ;AACA,QAAM,aAAa,MAAM;AACrB,8BAA0B;AAC1B,8BAA0B;AAC1B,mCAA+B;AAC/B,0BAAsB;AACtB,yBAAqB;AACrB,sBAAkB;AAClB,2BAAuB;AACvB,eAAW;AACX,mBAAe;AACf,aAAS;AAAA,EACb;AACA,QAAM,YAAY,MAAM;AACpB,WAAO,yBAAyB,KAAK,CAAC;AAAA,EAC1C;AAOA,QAAM,gBAAgB,CAAC,kBAAkB,oBAAoB;AACzD,UAAM,QAAQ,gBAAgB,UAAU,CAAC,mBAAmB,eAAe,MAAM,gBAAgB;AACjG,QAAI,QAAQ,IAAI;AACZ,sBAAgB,OAAO,OAAO,CAAC;AAAA,IACnC;AAAA,EACJ;AAOA,QAAM,SAAS,CAAC,UAAU,SAAS;AAC/B,2BAAuB,KAAK,EAAE,GAAG,UAAU,GAAG,KAAK,CAAC;AACpD,WAAO;AAAA,EACX;AACA,QAAM,WAAW,CAAC,UAAU,SAAS;AACjC,UAAM,aAAa,SAAS,QAAQ,SAAS,SAAS,SAAS,KAAK,mBAAmB,2BAA2B;AAClH,cAAU,KAAK,EAAE,GAAG,UAAU,GAAG,KAAK,CAAC;AACvC,WAAO;AAAA,EACX;AACA,QAAM,gBAAgB,MAAM;AACxB,sBAAkB,SAAS;AAC3B,6BAAyB,SAAS;AAClC,WAAO;AAAA,EACX;AAMA,QAAM,kBAAkB,MAAM;AAC1B,QAAI,uBAAuB;AACvB,oBAAc,QAAQ,CAAC,cAAc;AACjC,kBAAU,OAAO;AAAA,MACrB,CAAC;AACD,oBAAc,SAAS;AAAA,IAC3B;AAAA,EACJ;AAKA,QAAM,qBAAqB,MAAM;AAC7B,gBAAY,QAAQ,CAAC,eAAe;AAMhC,UAAI,eAAe,QAAQ,eAAe,SAAS,SAAS,WAAW,YAAY;AAC/E,mBAAW,WAAW,YAAY,UAAU;AAAA,MAChD;AAAA,IACJ,CAAC;AACD,gBAAY,SAAS;AAAA,EACzB;AACA,QAAM,gBAAgB,CAAC,WAAW;AAC9B,4BAAwB,KAAK,MAAM;AACnC,WAAO;AAAA,EACX;AACA,QAAM,iBAAiB,CAAC,YAAY;AAChC,6BAAyB,KAAK,OAAO;AACrC,WAAO;AAAA,EACX;AACA,QAAM,eAAe,CAAC,WAAW;AAC7B,2BAAuB,KAAK,MAAM;AAClC,WAAO;AAAA,EACX;AACA,QAAM,gBAAgB,CAAC,YAAY;AAC/B,4BAAwB,KAAK,OAAO;AACpC,WAAO;AAAA,EACX;AACA,QAAM,iBAAiB,CAAC,cAAc;AAClC,uBAAmB,gBAAgB,kBAAkB,SAAS;AAC9D,WAAO;AAAA,EACX;AACA,QAAM,oBAAoB,CAAC,cAAc;AACrC,0BAAsB,gBAAgB,qBAAqB,SAAS;AACpE,WAAO;AAAA,EACX;AAKA,QAAM,eAAe,CAAC,SAAS,CAAC,MAAM;AAClC,wBAAoB;AACpB,WAAO;AAAA,EACX;AAKA,QAAM,oBAAoB,CAAC,gBAAgB,CAAC,MAAM;AAC9C,eAAW,YAAY,eAAe;AAClC,wBAAkB,QAAQ,IAAI;AAAA,IAClC;AACA,WAAO;AAAA,EACX;AACA,QAAM,gBAAgB,CAAC,cAAc;AACjC,sBAAkB,gBAAgB,iBAAiB,SAAS;AAC5D,WAAO;AAAA,EACX;AACA,QAAM,mBAAmB,CAAC,cAAc;AACpC,yBAAqB,gBAAgB,oBAAoB,SAAS;AAClE,WAAO;AAAA,EACX;AACA,QAAM,cAAc,CAAC,SAAS,CAAC,MAAM;AACjC,uBAAmB;AACnB,WAAO;AAAA,EACX;AACA,QAAM,mBAAmB,CAAC,gBAAgB,CAAC,MAAM;AAC7C,eAAW,YAAY,eAAe;AAClC,uBAAiB,QAAQ,IAAI;AAAA,IACjC;AACA,WAAO;AAAA,EACX;AACA,QAAM,UAAU,MAAM;AAClB,QAAI,UAAU,QAAW;AACrB,aAAO;AAAA,IACX;AACA,QAAI,iBAAiB;AACjB,aAAO,gBAAgB,QAAQ;AAAA,IACnC;AACA,WAAO;AAAA,EACX;AACA,QAAM,eAAe,MAAM;AACvB,QAAI,wBAAwB,QAAW;AACnC,aAAO;AAAA,IACX;AACA,QAAI,eAAe,QAAW;AAC1B,aAAO;AAAA,IACX;AACA,QAAI,iBAAiB;AACjB,aAAO,gBAAgB,aAAa;AAAA,IACxC;AACA,WAAO;AAAA,EACX;AACA,QAAM,YAAY,MAAM;AACpB,QAAI,yBAAyB;AACzB,aAAO;AAAA,IACX;AACA,QAAI,YAAY,QAAW;AACvB,aAAO;AAAA,IACX;AACA,QAAI,iBAAiB;AACjB,aAAO,gBAAgB,UAAU;AAAA,IACrC;AACA,WAAO;AAAA,EACX;AACA,QAAM,cAAc,MAAM;AACtB,QAAI,yBAAyB;AACzB,aAAO;AAAA,IACX;AACA,QAAI,uBAAuB,QAAW;AAClC,aAAO;AAAA,IACX;AACA,QAAI,cAAc,QAAW;AACzB,aAAO;AAAA,IACX;AACA,QAAI,iBAAiB;AACjB,aAAO,gBAAgB,YAAY;AAAA,IACvC;AACA,WAAO;AAAA,EACX;AACA,QAAM,gBAAgB,MAAM;AACxB,QAAI,gBAAgB,QAAW;AAC3B,aAAO;AAAA,IACX;AACA,QAAI,iBAAiB;AACjB,aAAO,gBAAgB,cAAc;AAAA,IACzC;AACA,WAAO;AAAA,EACX;AACA,QAAM,WAAW,MAAM;AACnB,QAAI,oBAAoB,QAAW;AAC/B,aAAO;AAAA,IACX;AACA,QAAI,WAAW,QAAW;AACtB,aAAO;AAAA,IACX;AACA,QAAI,iBAAiB;AACjB,aAAO,gBAAgB,SAAS;AAAA,IACpC;AACA,WAAO;AAAA,EACX;AACA,QAAM,eAAe,MAAM;AACvB,WAAO;AAAA,EACX;AACA,QAAM,YAAY,CAAC,uBAAuB;AACtC,iBAAa;AACb,WAAO,IAAI;AACX,WAAO;AAAA,EACX;AACA,QAAM,OAAO,CAAC,kBAAkB;AAC5B,YAAQ;AACR,WAAO,IAAI;AACX,WAAO;AAAA,EACX;AACA,QAAM,QAAQ,CAAC,mBAAmB;AAC9B,aAAS;AACT,WAAO,IAAI;AACX,WAAO;AAAA,EACX;AACA,QAAM,SAAS,CAAC,oBAAoB;AAChC,cAAU;AACV,WAAO,IAAI;AACX,WAAO;AAAA,EACX;AACA,QAAM,WAAW,CAAC,sBAAsB;AAMpC,QAAI,CAAC,yBAAyB,sBAAsB,GAAG;AACnD,0BAAoB;AAAA,IACxB;AACA,gBAAY;AACZ,WAAO,IAAI;AACX,WAAO;AAAA,EACX;AACA,QAAM,aAAa,CAAC,wBAAwB;AACxC,kBAAc;AACd,WAAO,IAAI;AACX,WAAO;AAAA,EACX;AACA,QAAM,SAAS,CAAC,cAAc;AAC1B,sBAAkB;AAClB,WAAO;AAAA,EACX;AACA,QAAM,aAAa,CAAC,OAAO;AACvB,QAAI,MAAM,MAAM;AACZ,UAAI,GAAG,aAAa,GAAG;AACnB,iBAAS,KAAK,EAAE;AAAA,MACpB,WACS,GAAG,UAAU,GAAG;AACrB,iBAAS,IAAI,GAAG,IAAI,GAAG,QAAQ,KAAK;AAChC,mBAAS,KAAK,GAAG,CAAC,CAAC;AAAA,QACvB;AAAA,MACJ,OACK;AACD,sBAAc,6CAA6C;AAAA,MAC/D;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AACA,QAAM,eAAe,CAAC,mBAAmB;AACrC,QAAI,kBAAkB,MAAM;AACxB,UAAI,MAAM,QAAQ,cAAc,GAAG;AAC/B,mBAAW,aAAa,gBAAgB;AACpC,oBAAU,OAAO,GAAG;AACpB,0BAAgB,KAAK,SAAS;AAAA,QAClC;AAAA,MACJ,OACK;AACD,uBAAe,OAAO,GAAG;AACzB,wBAAgB,KAAK,cAAc;AAAA,MACvC;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AACA,QAAM,YAAY,CAAC,mBAAmB;AAClC,UAAM,YAAY,eAAe;AACjC,iBAAa;AACb,QAAI,WAAW;AACX,sBAAgB,UAAU;AAAA,IAC9B;AACA,WAAO;AAAA,EACX;AACA,QAAM,kBAAkB,CAAC,mBAAmB;AACxC,QAAI,uBAAuB;AACvB,uBAAiB,EAAE,QAAQ,CAAC,cAAc;AAQtC,cAAM,iBAAiB,UAAU;AAOjC,YAAI,eAAe,cAAc;AAC7B,yBAAe,aAAa,cAAc;AAAA,QAC9C,OACK;AACD,gBAAM,YAAY,IAAI,eAAe,eAAe,QAAQ,gBAAgB,eAAe,UAAU,CAAC;AACtG,oBAAU,SAAS;AAAA,QACvB;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,EACJ;AAIA,QAAM,kBAAkB,MAAM;AAE1B,4BAAwB,QAAQ,CAAC,aAAa,SAAS,CAAC;AAExD,6BAAyB,QAAQ,CAAC,aAAa,SAAS,CAAC;AAEzD,UAAM,aAAa;AACnB,UAAM,gBAAgB;AACtB,UAAM,SAAS;AACf,aAAS,QAAQ,CAAC,OAAO;AACrB,YAAM,mBAAmB,GAAG;AAC5B,iBAAW,QAAQ,CAAC,MAAM,iBAAiB,IAAI,CAAC,CAAC;AACjD,oBAAc,QAAQ,CAAC,MAAM,iBAAiB,OAAO,CAAC,CAAC;AACvD,iBAAW,YAAY,QAAQ;AAE3B,YAAI,OAAO,eAAe,QAAQ,GAAG;AACjC,2BAAiB,IAAI,UAAU,OAAO,QAAQ,CAAC;AAAA,QACnD;AAAA,MACJ;AAAA,IACJ,CAAC;AAAA,EACL;AAIA,QAAM,iBAAiB,MAAM;AAEzB,2BAAuB,QAAQ,CAAC,aAAa,SAAS,CAAC;AAEvD,4BAAwB,QAAQ,CAAC,aAAa,SAAS,CAAC;AAExD,UAAM,cAAc,eAAe,IAAI;AACvC,UAAM,aAAa;AACnB,UAAM,gBAAgB;AACtB,UAAM,SAAS;AACf,aAAS,QAAQ,CAAC,OAAO;AACrB,YAAM,mBAAmB,GAAG;AAC5B,iBAAW,QAAQ,CAAC,MAAM,iBAAiB,IAAI,CAAC,CAAC;AACjD,oBAAc,QAAQ,CAAC,MAAM,iBAAiB,OAAO,CAAC,CAAC;AACvD,iBAAW,YAAY,QAAQ;AAE3B,YAAI,OAAO,eAAe,QAAQ,GAAG;AACjC,2BAAiB,IAAI,UAAU,OAAO,QAAQ,CAAC;AAAA,QACnD;AAAA,MACJ;AAAA,IACJ,CAAC;AAQD,yBAAqB;AACrB,0BAAsB;AACtB,sBAAkB;AAClB,sBAAkB,QAAQ,CAAC,qBAAqB;AAC5C,aAAO,iBAAiB,EAAE,aAAa,GAAG;AAAA,IAC9C,CAAC;AACD,6BAAyB,QAAQ,CAAC,qBAAqB;AACnD,aAAO,iBAAiB,EAAE,aAAa,GAAG;AAAA,IAC9C,CAAC;AACD,6BAAyB,SAAS;AAClC,mCAA+B;AAC/B,QAAI,cAAc;AACd,iBAAW;AAAA,IACf;AACA,mBAAe;AAAA,EACnB;AACA,QAAM,kBAAkB,MAAM;AAC1B,QAAI,yBAAyB,GAAG;AAC5B;AAAA,IACJ;AACA;AACA,QAAI,yBAAyB,GAAG;AAC5B,qBAAe;AACf,UAAI,iBAAiB;AACjB,wBAAgB,gBAAgB;AAAA,MACpC;AAAA,IACJ;AAAA,EACJ;AACA,QAAM,yBAAyB,MAAM;AACjC,aAAS,QAAQ,CAAC,YAAY;AAC1B,YAAM,YAAY,QAAQ,QAAQ,YAAY;AAAA,QAC1C;AAAA,QACA,OAAO,SAAS;AAAA,QAChB,UAAU,YAAY;AAAA,QACtB,QAAQ,UAAU;AAAA,QAClB,YAAY,cAAc;AAAA,QAC1B,MAAM,QAAQ;AAAA,QACd,WAAW,aAAa;AAAA,MAC5B,CAAC;AACD,gBAAU,MAAM;AAChB,oBAAc,KAAK,SAAS;AAAA,IAChC,CAAC;AACD,QAAI,cAAc,SAAS,GAAG;AAC1B,oBAAc,CAAC,EAAE,WAAW,MAAM;AAC9B,wBAAgB;AAAA,MACpB;AAAA,IACJ;AAAA,EACJ;AACA,QAAM,sBAAsB,MAAM;AAC9B,oBAAgB;AAChB,QAAI,WAAW,SAAS,GAAG;AACvB,UAAI,uBAAuB;AACvB,+BAAuB;AAAA,MAC3B;AAAA,IACJ;AACA,kBAAc;AAAA,EAClB;AACA,QAAM,mBAAmB,CAAC,SAAS;AAC/B,WAAO,KAAK,IAAI,KAAK,IAAI,MAAM,CAAC,GAAG,MAAM;AACzC,QAAI,uBAAuB;AACvB,oBAAc,QAAQ,CAAC,cAAc;AAEjC,kBAAU,cAAc,UAAU,OAAO,kBAAkB,EAAE,QAAQ,YAAY,IAAI;AACrF,kBAAU,MAAM;AAAA,MACpB,CAAC;AAAA,IACL;AAAA,EACJ;AACA,QAAM,qBAAqB,CAAC,SAAS;AACjC,kBAAc,QAAQ,CAAC,cAAc;AACjC,gBAAU,OAAO,aAAa;AAAA,QAC1B,OAAO,SAAS;AAAA,QAChB,UAAU,YAAY;AAAA,QACtB,QAAQ,UAAU;AAAA,QAClB,YAAY,cAAc;AAAA,QAC1B,MAAM,QAAQ;AAAA,QACd,WAAW,aAAa;AAAA,MAC5B,CAAC;AAAA,IACL,CAAC;AACD,QAAI,SAAS,QAAW;AACpB,uBAAiB,IAAI;AAAA,IACzB;AAAA,EACJ;AACA,QAAM,SAAS,CAAC,OAAO,OAAO,sBAAsB,MAAM,SAAS;AAC/D,QAAI,MAAM;AACN,sBAAgB,QAAQ,CAAC,cAAc;AACnC,kBAAU,OAAO,MAAM,qBAAqB,IAAI;AAAA,MACpD,CAAC;AAAA,IACL;AACA,QAAI,uBAAuB;AACvB,yBAAmB,IAAI;AAAA,IAC3B;AACA,WAAO;AAAA,EACX;AACA,QAAM,gBAAgB,CAAC,oBAAoB,OAAO,SAAS;AACvD,oBAAgB,QAAQ,CAAC,cAAc;AACnC,gBAAU,cAAc,mBAAmB,IAAI;AAAA,IACnD,CAAC;AACD,mBAAe;AACf,8BAA0B;AAC1B,QAAI,CAAC,aAAa;AACd,0BAAoB;AAAA,IACxB;AACA,WAAO,OAAO,MAAM,IAAI;AACxB,WAAO;AAAA,EACX;AACA,QAAM,eAAe,CAAC,SAAS;AAC3B,oBAAgB,QAAQ,CAAC,cAAc;AACnC,gBAAU,aAAa,IAAI;AAAA,IAC/B,CAAC;AACD,qBAAiB,IAAI;AACrB,WAAO;AAAA,EACX;AACA,QAAM,cAAc,CAAC,QAAQ,MAAM,QAAQ;AACvC,8BAA0B;AAC1B,oBAAgB,QAAQ,CAAC,cAAc;AACnC,gBAAU,YAAY,QAAQ,MAAM,GAAG;AAAA,IAC3C,CAAC;AACD,QAAI,QAAQ,QAAW;AACnB,2BAAqB;AAAA,IACzB;AACA,eAAW;AACX,mBAAe;AACf,QAAI,WAAW,GAAG;AACd,4BAAsB,aAAa,MAAM,YAAY,WAAW;AAChE,UAAI,wBAAwB,WAAW;AACnC,uBAAe;AAAA,MACnB;AACA,UAAI,uBAAuB;AACvB,eAAO;AACP,yBAAiB,IAAI,IAAI;AAAA,MAC7B,OACK;AACD,2BAAmB,IAAI,QAAQ,YAAY,IAAI;AAC/C,eAAO,OAAO,KAAK;AAAA,MACvB;AAAA,IACJ,WACS,WAAW,GAAG;AACnB,UAAI,uBAAuB;AACvB,eAAO;AACP,yBAAiB,IAAI;AAAA,MACzB,OACK;AACD,0BAAkB,OAAO,YAAY,IAAI;AACzC,eAAO,OAAO,KAAK;AAAA,MACvB;AAAA,IACJ;AACA,QAAI,WAAW,UAAa,CAAC,iBAAiB;AAC1C,WAAK;AAAA,IACT;AACA,WAAO;AAAA,EACX;AACA,QAAM,iBAAiB,MAAM;AACzB,QAAI,aAAa;AACb,UAAI,uBAAuB;AACvB,sBAAc,QAAQ,CAAC,cAAc;AACjC,oBAAU,MAAM;AAAA,QACpB,CAAC;AAAA,MACL,OACK;AACD,iBAAS,QAAQ,CAAC,YAAY;AAC1B,2BAAiB,SAAS,wBAAwB,QAAQ;AAAA,QAC9D,CAAC;AAAA,MACL;AACA,eAAS;AAAA,IACb;AAAA,EACJ;AACA,QAAM,QAAQ,MAAM;AAChB,oBAAgB,QAAQ,CAAC,cAAc;AACnC,gBAAU,MAAM;AAAA,IACpB,CAAC;AACD,mBAAe;AACf,WAAO;AAAA,EACX;AACA,QAAM,oBAAoB,MAAM;AAC5B,oBAAgB;AAAA,EACpB;AACA,QAAM,oBAAoB,MAAM;AAC5B,kBAAc,QAAQ,CAAC,cAAc;AACjC,gBAAU,KAAK;AAAA,IACnB,CAAC;AACD,QAAI,WAAW,WAAW,KAAK,SAAS,WAAW,GAAG;AAClD,sBAAgB;AAAA,IACpB;AAAA,EACJ;AACA,QAAM,iBAAiB,MAAM;AACzB,QAAI,uBAAuB;AACvB,uBAAiB,CAAC;AAClB,yBAAmB;AAAA,IACvB;AAAA,EACJ;AACA,QAAM,OAAO,CAAC,SAAS;AACnB,WAAO,IAAI,QAAQ,CAAC,YAAY;AAC5B,UAAI,SAAS,QAAQ,SAAS,SAAS,SAAS,KAAK,MAAM;AACvD,kCAA0B;AAC1B,iBAAS,MAAO,0BAA0B,OAAQ,EAAE,iBAAiB,KAAK,CAAC;AAAA,MAC/E;AACA,UAAI,CAAC,aAAa;AACd,4BAAoB;AAAA,MACxB;AACA,UAAI,UAAU;AACV,uBAAe;AACf,mBAAW;AAAA,MACf;AACA,UAAI,8BAA8B;AAC9B,+BAAuB,gBAAgB,SAAS;AAChD,uCAA+B;AAAA,MACnC;AAcA,YAAM,iBAAiB,MAAM;AACzB,sBAAc,kBAAkB,wBAAwB;AACxD,gBAAQ;AAAA,MACZ;AACA,YAAM,mBAAmB,MAAM;AAC3B,sBAAc,gBAAgB,sBAAsB;AACpD,gBAAQ;AAAA,MACZ;AAKA,eAAS,kBAAkB,EAAE,iBAAiB,KAAK,CAAC;AACpD,aAAO,gBAAgB,EAAE,iBAAiB,KAAK,CAAC;AAChD,sBAAgB,QAAQ,CAAC,cAAc;AACnC,kBAAU,KAAK;AAAA,MACnB,CAAC;AACD,UAAI,uBAAuB;AACvB,0BAAkB;AAAA,MACtB,OACK;AACD,0BAAkB;AAAA,MACtB;AACA,eAAS;AAAA,IACb,CAAC;AAAA,EACL;AASA,QAAM,OAAO,MAAM;AACf,oBAAgB,QAAQ,CAAC,cAAc;AACnC,gBAAU,KAAK;AAAA,IACnB,CAAC;AACD,QAAI,aAAa;AACb,sBAAgB;AAChB,oBAAc;AAAA,IAClB;AACA,eAAW;AACX,2BAAuB,QAAQ,CAAC,mBAAmB,eAAe,EAAE,GAAG,GAAG,CAAC;AAC3E,2BAAuB,SAAS;AAAA,EACpC;AACA,QAAM,OAAO,CAAC,UAAU,UAAU;AAC9B,UAAM,aAAa,WAAW,CAAC;AAC/B,QAAI,eAAe,WAAc,WAAW,WAAW,UAAa,WAAW,WAAW,IAAI;AAC1F,iBAAW,QAAQ,IAAI;AAAA,IAC3B,OACK;AACD,mBAAa,CAAC,EAAE,QAAQ,GAAG,CAAC,QAAQ,GAAG,MAAM,GAAG,GAAG,UAAU;AAAA,IACjE;AACA,WAAO;AAAA,EACX;AACA,QAAM,KAAK,CAAC,UAAU,UAAU;AAC5B,UAAM,YAAY,WAAW,WAAW,SAAS,CAAC;AAClD,QAAI,cAAc,WAAc,UAAU,WAAW,UAAa,UAAU,WAAW,IAAI;AACvF,gBAAU,QAAQ,IAAI;AAAA,IAC1B,OACK;AACD,mBAAa,CAAC,GAAG,YAAY,EAAE,QAAQ,GAAG,CAAC,QAAQ,GAAG,MAAM,CAAC;AAAA,IACjE;AACA,WAAO;AAAA,EACX;AACA,QAAM,SAAS,CAAC,UAAU,WAAW,YAAY;AAC7C,WAAO,KAAK,UAAU,SAAS,EAAE,GAAG,UAAU,OAAO;AAAA,EACzD;AACA,SAAQ,MAAM;AAAA,IACV;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACJ;AACJ;",
  "names": []
}
