{
  "version": 3,
  "sources": ["../../../../../../node_modules/@ionic/core/dist/esm/cubic-bezier-hHmYLOfE.js"],
  "sourcesContent": ["/*!\r\n * (C) Ionic http://ionicframework.com - MIT License\r\n */\r\n/**\r\n * Based on:\r\n * https://stackoverflow.com/questions/7348009/y-coordinate-for-a-given-x-cubic-bezier\r\n * https://math.stackexchange.com/questions/26846/is-there-an-explicit-form-for-cubic-b%C3%A9zier-curves\r\n */\r\n/**\r\n * EXPERIMENTAL\r\n * Given a cubic-bezier curve, get the x value (time) given\r\n * the y value (progression).\r\n * Ex: cubic-bezier(0.32, 0.72, 0, 1);\r\n * P0: (0, 0)\r\n * P1: (0.32, 0.72)\r\n * P2: (0, 1)\r\n * P3: (1, 1)\r\n *\r\n * If you give a cubic bezier curve that never reaches the\r\n * provided progression, this function will return an empty array.\r\n */\r\nconst getTimeGivenProgression = (p0, p1, p2, p3, progression) => {\r\n    return solveCubicBezier(p0[1], p1[1], p2[1], p3[1], progression).map((tValue) => {\r\n        return solveCubicParametricEquation(p0[0], p1[0], p2[0], p3[0], tValue);\r\n    });\r\n};\r\n/**\r\n * Solve a cubic equation in one dimension (time)\r\n */\r\nconst solveCubicParametricEquation = (p0, p1, p2, p3, t) => {\r\n    const partA = 3 * p1 * Math.pow(t - 1, 2);\r\n    const partB = -3 * p2 * t + 3 * p2 + p3 * t;\r\n    const partC = p0 * Math.pow(t - 1, 3);\r\n    return t * (partA + t * partB) - partC;\r\n};\r\n/**\r\n * Find the `t` value for a cubic bezier using Cardano's formula\r\n */\r\nconst solveCubicBezier = (p0, p1, p2, p3, refPoint) => {\r\n    p0 -= refPoint;\r\n    p1 -= refPoint;\r\n    p2 -= refPoint;\r\n    p3 -= refPoint;\r\n    const roots = solveCubicEquation(p3 - 3 * p2 + 3 * p1 - p0, 3 * p2 - 6 * p1 + 3 * p0, 3 * p1 - 3 * p0, p0);\r\n    return roots.filter((root) => root >= 0 && root <= 1);\r\n};\r\nconst solveQuadraticEquation = (a, b, c) => {\r\n    const discriminant = b * b - 4 * a * c;\r\n    if (discriminant < 0) {\r\n        return [];\r\n    }\r\n    else {\r\n        return [(-b + Math.sqrt(discriminant)) / (2 * a), (-b - Math.sqrt(discriminant)) / (2 * a)];\r\n    }\r\n};\r\nconst solveCubicEquation = (a, b, c, d) => {\r\n    if (a === 0) {\r\n        return solveQuadraticEquation(b, c, d);\r\n    }\r\n    b /= a;\r\n    c /= a;\r\n    d /= a;\r\n    const p = (3 * c - b * b) / 3;\r\n    const q = (2 * b * b * b - 9 * b * c + 27 * d) / 27;\r\n    if (p === 0) {\r\n        return [Math.pow(-q, 1 / 3)];\r\n    }\r\n    else if (q === 0) {\r\n        return [Math.sqrt(-p), -Math.sqrt(-p)];\r\n    }\r\n    const discriminant = Math.pow(q / 2, 2) + Math.pow(p / 3, 3);\r\n    if (discriminant === 0) {\r\n        return [Math.pow(q / 2, 1 / 2) - b / 3];\r\n    }\r\n    else if (discriminant > 0) {\r\n        return [\r\n            Math.pow(-(q / 2) + Math.sqrt(discriminant), 1 / 3) - Math.pow(q / 2 + Math.sqrt(discriminant), 1 / 3) - b / 3,\r\n        ];\r\n    }\r\n    const r = Math.sqrt(Math.pow(-(p / 3), 3));\r\n    const phi = Math.acos(-(q / (2 * Math.sqrt(Math.pow(-(p / 3), 3)))));\r\n    const s = 2 * Math.pow(r, 1 / 3);\r\n    return [\r\n        s * Math.cos(phi / 3) - b / 3,\r\n        s * Math.cos((phi + 2 * Math.PI) / 3) - b / 3,\r\n        s * Math.cos((phi + 4 * Math.PI) / 3) - b / 3,\r\n    ];\r\n};\r\n\r\nexport { getTimeGivenProgression as g };\r\n"],
  "mappings": "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",
  "names": []
}
